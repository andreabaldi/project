CHANGELOG.TXT:6.4.4 (2021-12-31)
CHANGELOG.TXT:	- PHP 8.1 fixes
CHANGELOG.TXT:6.4.3 (2021-12-28)
CHANGELOG.TXT:	- Fix MultiCell PHPDoc typehint (#407)
CHANGELOG.TXT:	- Fix type hint for \TCPDF_STATIC::_freadint (#414)
CHANGELOG.TXT:	- Footer and Header font phpdoc fixes + constructor $pdfa phpdoc fix + setHeaderData lw param fix (#402)
CHANGELOG.TXT:	- Fix text-annotation state options (#412)
CHANGELOG.TXT:	- Fix - Named links have been broken. This fixes. (#415)
CHANGELOG.TXT:	- Fixed type in comment for $lw header image logo width in mm
CHANGELOG.TXT:	- Change Set to set. Fixes #419 (#421)
CHANGELOG.TXT:	- Fix failing tests and failing tests not marking exit code as 1 (#426)
CHANGELOG.TXT:	- Fix phpdoc and prefer null as default value (#444)
CHANGELOG.TXT:	- Run on PHP 8.1 normally and add nightly PHP as allowed to fail (#452)
CHANGELOG.TXT:	- Fix AES128 encryption if the OpenSSL extension is installed (#453)
CHANGELOG.TXT:	- Explicitly cast values to int for imagesetpixel (#460)
CHANGELOG.TXT:	- Fix cell_height_ratio type (#405)
CHANGELOG.TXT:	- Leave &NBSP; lowercase when using text-transform (#403)
CHANGELOG.TXT:6.4.2 (2021-07-20)
CHANGELOG.TXT:	- Fix PHP 8.1 type error with TCPDF_STATIC::pregSplit on preg_split
CHANGELOG.TXT:	- Fix a PHP array offset error
CHANGELOG.TXT:	- Fixed phpdoc blocks
CHANGELOG.TXT:	- Drop a PHP 4 polyfill and add a .gitattributes file
CHANGELOG.TXT:	- Added a test-suite
CHANGELOG.TXT:	- Removed pointless assignments
CHANGELOG.TXT:	- Fix docblock spelling error
CHANGELOG.TXT:	- Update version info
CHANGELOG.TXT:	- Fix color being filled to type 0 with PHP 8
CHANGELOG.TXT:	- Fix warnings for undefined tags for $lineStyle
CHANGELOG.TXT:	- Normalized composer.json
CHANGELOG.TXT:	- Allowed transparency in PDF/A-2 and PDF/A-3
CHANGELOG.TXT:	- Add a TCPDF composer example
CHANGELOG.TXT:	- Fixed implicit conversion from float to int for PHP 8.1
CHANGELOG.TXT:	- Removed status.txt from font directories, because of filesize
CHANGELOG.TXT:	- Fixed type hints
CHANGELOG.TXT:	- Removed "U" modifier from regexes
CHANGELOG.TXT:6.4.1 (2021-03-27)
CHANGELOG.TXT:	- Update tcpdf version (no code changes)
CHANGELOG.TXT:6.4.0 (2021-03-27)
CHANGELOG.TXT:	- allow styles on <HR> tags
CHANGELOG.TXT:	- check if file exists before calling unlink
CHANGELOG.TXT:	- Fix image file type for urls with query params
CHANGELOG.TXT:	- Fix SVGPath should accept 1.19.30 (equiv 1.19,.30) compacted values list
CHANGELOG.TXT:	- Fix Second parameter of TCPDF::cell() must be a number
CHANGELOG.TXT:	- PHP 8.0 function signature fixes
CHANGELOG.TXT:	- Fix vulnerability to roman numeral bombs
CHANGELOG.TXT:	- Optimized a regular expression
CHANGELOG.TXT:	- Cache file get contents calls
CHANGELOG.TXT:	- Remove mb_internal encoding handling
CHANGELOG.TXT:6.3.5 (2020-02-14)
CHANGELOG.TXT:	- Fixed curly braces in pdf417
CHANGELOG.TXT:	- Fixed a syntax error issue when accessing an index of a casted variable
CHANGELOG.TXT:6.3.4 (2020-02-12)
CHANGELOG.TXT:	- Check if imagekeys exist
CHANGELOG.TXT:	- Unlink only images in cache
CHANGELOG.TXT:6.3.3 (2020-02-12)
CHANGELOG.TXT:	- Fixed PHP 7.4 - cannot use array offset on integers
CHANGELOG.TXT:	- Fixed PDF/A-3B validation issue caused by missing pdfaSchema:property.
CHANGELOG.TXT:	- Removed backup changelog files from repo
CHANGELOG.TXT:	- Prevents the deletion of non-existent files in /tmp
CHANGELOG.TXT:	- Prevent crash in case of no list access in cache path
CHANGELOG.TXT:	- Check existence of file before delete it
CHANGELOG.TXT:	- Fixed erase users pictures
CHANGELOG.TXT:	- Fixed problem with $imagekeys undefined or unlinked
CHANGELOG.TXT:	- Fix SVGPath elliptical arc with rx/ry=0 + z should return to initial point
CHANGELOG.TXT:	- Fixed PHP 7.4 errors
CHANGELOG.TXT:	- handle integers for pages
CHANGELOG.TXT:	- Fixed background image doesn't work in RTL
CHANGELOG.TXT:	- Fixed PDF/A validity
CHANGELOG.TXT:	- Fixed datamatrix.php for PHP 7.4
CHANGELOG.TXT:	- Fixed deprecated PHP features
CHANGELOG.TXT:6.3.2 (2019-09-20)
CHANGELOG.TXT:	- Update ICC profile
CHANGELOG.TXT:6.3.1 (2019-09-20)
CHANGELOG.TXT:	- Fix reported version
CHANGELOG.TXT:	- Fix Undefined property: GLPIPDF::$imagekeys
CHANGELOG.TXT:6.3.0 (2019-09-19)
CHANGELOG.TXT:	- fix SpotColor handling in HTML
CHANGELOG.TXT:	- Add an additional empty test to prevent error in PHP 7.2
CHANGELOG.TXT:	- Fix the documentation how to calculate the cell height
CHANGELOG.TXT:	- Drop duplicated array indices
CHANGELOG.TXT:	- Fix TCPDF_STATIC::fileGetContents()
CHANGELOG.TXT:	- Introduce other version of pdfA (2 and 3)
CHANGELOG.TXT:	- Add UF and AFRelationship missing
CHANGELOG.TXT:	- Fix performance issue of cloned instances
CHANGELOG.TXT:	- Change glob to readdir which performs better
CHANGELOG.TXT:	- URI in PDF can result in E_NOTICE
CHANGELOG.TXT:	- Fix a warning for PHP 7.4
CHANGELOG.TXT:	- Fixed gradient offsets for percentage-based stops.
CHANGELOG.TXT:	- Fixed file_get_contents return value should also be checked for a non-empty string
CHANGELOG.TXT:	- Fix Array and string offset access syntax with curly braces is deprecated
CHANGELOG.TXT:	- Fix PHP Warning: chr() expects parameter 1 to be int
CHANGELOG.TXT:	- Add a VERSION file
CHANGELOG.TXT:6.2.26 (2018-10-16)
CHANGELOG.TXT:	- Update sRGB.icc with the one from the Debian package icc-profiles-free
CHANGELOG.TXT:	- Fix unsupported operand types error when codepoints arrays are merged
CHANGELOG.TXT:6.2.25 (2018-09-23)
CHANGELOG.TXT:	- Fix support for image URLs.
CHANGELOG.TXT:	- Support remote urls when checking if file exists.
CHANGELOG.TXT:6.2.23 (2018-09-22)
CHANGELOG.TXT:	- Simplify file_exists function.
CHANGELOG.TXT:6.2.22 (2018-09-14)
CHANGELOG.TXT:	- Fixes on `include/tcpdf_images.php`, `include/tcpdf_static.php` and `tcpdf.php` about file handling
CHANGELOG.TXT:6.2.21 (2018-09-14)
CHANGELOG.TXT:	- _no code changes_
CHANGELOG.TXT:6.2.20 (2018-09-14)
CHANGELOG.TXT:	- Fix for security vulnerability: Using the phar:// wrapper it was possible to trigger the unserialization of user provided data.
CHANGELOG.TXT:6.2.19 (2018-09-14)
CHANGELOG.TXT:	- Merge various fixes for PHP 7.3 compatibility and security.
CHANGELOG.TXT:6.2.13 (2016-06-10)
CHANGELOG.TXT:	- IMPORTANT: A new version of this library is under development at https://github.com/tecnickcom/tc-lib-pdf and as a consequence this version will not receive any additional development or support. This version should be considered obsolete, new projects should use the new version as soon it will become stable.
CHANGELOG.TXT:6.2.12 (2015-09-12)
CHANGELOG.TXT:	- fix composer package name to tecnickcom/tcpdf
CHANGELOG.TXT:6.2.11 (2015-08-02)
CHANGELOG.TXT:	- Bug #1070 "PNG regression in 6.2.9 (they appear as their alpha channel)" was fixed.
CHANGELOG.TXT:	- Bug #1069 "Encoded SRC URLs in <img> tags don't work anymore" was fixed.
CHANGELOG.TXT:6.2.10 (2015-07-28)
CHANGELOG.TXT:	- Minor mod to PNG parsing.
CHANGELOG.TXT:	- Make dependency on mcrypt optional.
CHANGELOG.TXT:6.2.8 (2015-04-29)
CHANGELOG.TXT:	- Removed unwanted file.
CHANGELOG.TXT:6.2.7 (2015-04-28)
CHANGELOG.TXT:	- Merged PR 17: Avoid warning when iterating a non-array variable.
CHANGELOG.TXT:	- Merged PR 16: Improve MuliCell param definition.
CHANGELOG.TXT:	- Improved column check (PR 15).
CHANGELOG.TXT:	- Merged PR 11: Use stream_is_local instead of limit to file://.
CHANGELOG.TXT:	- Merged PR 10: ImageMagick link on README.txt.
CHANGELOG.TXT:6.2.6 (2015-01-28)
CHANGELOG.TXT:	- Bug #1008 "UTC offset sing breaks PDF/A-1b compliance" was fixed.
CHANGELOG.TXT:6.2.5 (2015-01-24)
CHANGELOG.TXT:	- Bug #1019 "$this in static context" was fixed.
CHANGELOG.TXT:	- Bug #1015 "Infinite loop in getIndirectObject method of parser" was fixed.
CHANGELOG.TXT:6.2.4 (2015-01-08)
CHANGELOG.TXT:	- fix warning related to empty K_PATH_URL.
CHANGELOG.TXT:	- fix error when a $table_colwidths key is not set.
CHANGELOG.TXT:6.2.3 (2014-12-18)
CHANGELOG.TXT:	- New comment.
CHANGELOG.TXT:	- Moved the K_PATH_IMAGES definition in tcpdf_autoconfig.
CHANGELOG.TXT:6.2.2 (2014-12-18)
CHANGELOG.TXT:	- Fixed mispelled words.
CHANGELOG.TXT:	- Fixed version number.
CHANGELOG.TXT:6.2.1 (2014-12-18)
CHANGELOG.TXT:	- The constant K_TCPDF_THROW_EXCEPTION_ERROR is now set to false in the default configuration file.
CHANGELOG.TXT:	- An issue with the _destroy() method was fixed.
CHANGELOG.TXT:6.2.0 (2014-12-10)
CHANGELOG.TXT:	- Bug #1005 "Security Report, LFI posting internal files externally abusing default parameter" was fixed.
CHANGELOG.TXT:	- Static methods serializeTCPDFtagParameters() and unserializeTCPDFtagParameters() were moved as non static to the main TCPDF class (see changes in example n. 49).
CHANGELOG.TXT:	- Deprecated methods were removed, please use the equivalents defined in other classes (i.e. TCPDF_STATIC and TCPDF_FONTS).
CHANGELOG.TXT:	- The constant K_TCPDF_CALLS_IN_HTML is now set by default to FALSE.
CHANGELOG.TXT:	- DLE, DLX and DLP page format was added.
CHANGELOG.TXT:	- Page format are now defined as a public property in TCPDF_STATIC.
CHANGELOG.TXT:6.1.1 (2014-12-09)
CHANGELOG.TXT:	- Fixed bug with the register_shutdown_function().
CHANGELOG.TXT:6.1.0 (2014-12-07)
CHANGELOG.TXT:	- The method TCPDF_STATIC::getRandomSeed() was improved.
CHANGELOG.TXT:	- The disk caching feature was removed.
CHANGELOG.TXT:	- Bug #1003 "Backslashes become duplicated in table, using WriteHTML" was fixed.
CHANGELOG.TXT:	- Bug #1002 "SVG radialGradient within non-square Rect" was fixed.
CHANGELOG.TXT:6.0.099 (2014-11-15)
CHANGELOG.TXT:	- Added basic support for nested SVG images (adapted PR from SamMousa).
CHANGELOG.TXT:	- A bug related to setGDImageTransparency() was fixed (thanks to Maarten Boerema).
CHANGELOG.TXT:6.0.098 (2014-11-08)
CHANGELOG.TXT:	- Bug item #996 "getCharBBox($char) returns incorrect results for TTF glyphs without outlines" was fixed.
CHANGELOG.TXT:	- Bug item #991 "Text problem with SVG" was fixed (only the font style part).
CHANGELOG.TXT:6.0.097 (2014-10-20)
CHANGELOG.TXT:	- Bug item #988 "hyphenateText - charmin parameter not work" was fixed.
CHANGELOG.TXT:	- New 1D barcode method to print pre-formatted IMB - Intelligent Mail Barcode - Onecode - USPS-B-3200.
CHANGELOG.TXT:6.0.096 (2014-10-06)
CHANGELOG.TXT:	- Bug item #982 "Display style is not inherited in SVG" was fixed.
CHANGELOG.TXT:	- Bug item #984 "Double quote url in CSS" was fixed.
CHANGELOG.TXT:6.0.095 (2014-10-02)
CHANGELOG.TXT:	- Bug item #979 "New Timezone option overwriting current timezone" was fixed.
CHANGELOG.TXT:6.0.094 (2014-09-30)
CHANGELOG.TXT:	- Bug item #978 "Variable Undefined: $cborder" was fixed.
CHANGELOG.TXT:6.0.093 (2014-09-02)
CHANGELOG.TXT:	- Security fix: some serialize/unserialize methods were replaced with json_encode/json_decode to avoid a potential object injection with user supplied content. Thanks to ownCloud Inc. for reporting this issue.
CHANGELOG.TXT:	- K_TIMEZONE constant was added to the default configuration to suppress date-time warnings.
CHANGELOG.TXT:6.0.092 (2014-09-01)
CHANGELOG.TXT:	- Bug item #956 "Monospaced fonts are not alignd at the baseline" was fixed.
CHANGELOG.TXT:	- Bug item #964 "Problem when changing font size" was fixed.
CHANGELOG.TXT:	- Bug item #969 "ImageSVG with radialGradient problem" was fixed.
CHANGELOG.TXT:	- sRGB.icc file was replaced with the one from the Debian package icc-profiles-free (2.0.1+dfsg-1) 
CHANGELOG.TXT:6.0.091 (2014-08-13)
CHANGELOG.TXT:	- Issue #325"Division by zero when css fontsize equals 0" was fixed.
CHANGELOG.TXT:6.0.090 (2014-08-08)
CHANGELOG.TXT:	- Starting from this version TCPDF is also available in GitHub at https://github.com/tecnickcom/TCPDF
CHANGELOG.TXT:	- Function getmypid() was removed for better compatibility with shared hosting environments.
CHANGELOG.TXT:	- Support for pulling SVG stroke opacity value from RGBa color was mergeg [adf006].
CHANGELOG.TXT:	- Bug item #951 "HTML Table within TCPDF columns doesnt flow correctly on page break ..." was fixed. 
CHANGELOG.TXT:6.0.089 (2014-07-16)
CHANGELOG.TXT:	- Bug item #948 "bottom line of rowspan cell not work correctly" was fixed.
CHANGELOG.TXT:6.0.088 (2014-07-09)
CHANGELOG.TXT:	- Bug item #946 "Case sensitive type check causes broken match for SVG" was fixed.
CHANGELOG.TXT:	- Bug item #945 "Imagick load doesn't account for passed data string " was fixed.
CHANGELOG.TXT:6.0.087 (2014-06-25)
CHANGELOG.TXT:	- A bug affecting fitcell option in Multicell was fixed.
CHANGELOG.TXT:6.0.086 (2014-06-20)
CHANGELOG.TXT:	- Bug item #938 "Hyphenation-dash extends outside of cell" was fixed (collateral effect).
CHANGELOG.TXT:6.0.085 (2014-06-19)
CHANGELOG.TXT:	- Some example images were replaced.
CHANGELOG.TXT:	- A race condition bug was fixed.
CHANGELOG.TXT:	- Bug item #938 "Hyphenation-dash extends outside of cell" was fixed.
CHANGELOG.TXT:6.0.084 (2014-06-13)
CHANGELOG.TXT:	- A bug related to MultiCell fitcell feature was fixed.
CHANGELOG.TXT:	- Bug item #931 "Documentation error for setPageFormat()" was fixed.
CHANGELOG.TXT:6.0.083 (2014-05-29)
CHANGELOG.TXT:	- Bug item #928 "setHtmlVSpace with HR element" was fixed.
CHANGELOG.TXT:6.0.082 (2014-05-23)
CHANGELOG.TXT:	- Bug item #926 "test statement instead of assignment used in tcpdf_fonts.php" was fixed.
CHANGELOG.TXT:	- Bug item #925 "924 transparent images bug" was fixed.
CHANGELOG.TXT:6.0.081 (2014-05-22)
CHANGELOG.TXT:	- Bug item #922 "writehtml tables thead repeating" was fixed.
CHANGELOG.TXT:	- Patch #71 "External and internal links, local and remote" wa applied.
CHANGELOG.TXT:6.0.080 (2014-05-20)
CHANGELOG.TXT:	- Bug item #921 "Fatal error in hyphenateText() function" was fixed.
CHANGELOG.TXT:	- Bug item #923 "Automatic Hyphenation error" was fixed.
CHANGELOG.TXT:	- Patch #70 "Augument TCPDFBarcode classes with ability to return raw png image data" was applied.
CHANGELOG.TXT:6.0.079 (2014-05-19)
CHANGELOG.TXT:	- Patch item #69 "Named destinations, HTML internal and external links" was merged.
CHANGELOG.TXT:	- Bug item #920 "hyphenateText() should not hyphenate the content of style-tags in HTML mode" was fixed.
CHANGELOG.TXT:	- Image method now trigs an error in case the cache is now writeable.
CHANGELOG.TXT:	- Fixed issue with layer default status.
CHANGELOG.TXT:6.0.078 (2014-05-12)
CHANGELOG.TXT:	- A warning issue in addTTFfont() method was fixed.
CHANGELOG.TXT:	- Fonts were updated to include cbbox metrics.
CHANGELOG.TXT:6.0.077 (2014-05-06)
CHANGELOG.TXT:	- A Datamatrix barcode bug was fixed.
CHANGELOG.TXT:6.0.076 (2014-05-06)
CHANGELOG.TXT:	- A bug in Datamatrix Base256 encoding was fixed.
CHANGELOG.TXT:	- Merged fix for SVG use/clip-gradient.
CHANGELOG.TXT:	- Now it is possible to prefix a page number in Link methods with the * character to avoid been changed when adding/deleting/moving pages (see example_045.php).
CHANGELOG.TXT:6.0.075 (2014-05-05)
CHANGELOG.TXT:	- Bug #917 "Using realtive Units like ex or em for images distort output in HTML mode" was fixed.
CHANGELOG.TXT:6.0.074 (2014-05-03)
CHANGELOG.TXT:	- Part of Bug #917 "Using realtive Units like ex or em for images distort output in HTML mode" was fixed.
CHANGELOG.TXT:	- Bug #915 "Problem with SVG Image using Radial Gradients" was fixed.
CHANGELOG.TXT:6.0.073 (2014-04-29)
CHANGELOG.TXT:	- Bug #913 "Possible bug with line-height" was fixed.
CHANGELOG.TXT:	- Bug #914 "MultiCell and FitCell" was fixed.
CHANGELOG.TXT:	- Bug #915 "Problem with SVG Image using Radial Gradients" was fixed.
CHANGELOG.TXT:6.0.072 (2014-04-27)
CHANGELOG.TXT:	- Deprecated curly braces substring syntax was replaced with square braces.
CHANGELOG.TXT:6.0.071 (2014-04-25)
CHANGELOG.TXT:	- Bug #911 "error with buffered png pics" was fixed.
CHANGELOG.TXT:6.0.070 (2014-04-24)
CHANGELOG.TXT:	- Bug #910 "An SVG image is being cut off (with clipping mask) when you use align options" was fixed.
CHANGELOG.TXT:6.0.069 (2014-04-24)
CHANGELOG.TXT:	- Datamatrix Base256 encoding was fixed.
CHANGELOG.TXT:6.0.068 (2014-04-22)
CHANGELOG.TXT:	- Some Datamatrix barcode bugs were fixed.
CHANGELOG.TXT:6.0.067 (2014-04-21)
CHANGELOG.TXT:	- startLayer() method signature was changed to include a new "lock" parameter.
CHANGELOG.TXT:6.0.066 (2014-04-20)
CHANGELOG.TXT:	- Bug #908 "Linebreak is not considered when getting length of the next string" was fixed.
CHANGELOG.TXT:6.0.065 (2014-04-10)
CHANGELOG.TXT:	- Bug #905 "RGB percentage color bug in convertHTMLColorToDec()" was fixed.
CHANGELOG.TXT:6.0.064 (2014-04-07)
CHANGELOG.TXT:	- Header and Footer fonts are now set by default.
CHANGELOG.TXT:	- Bug #904 "PDF corrupted" was fixed.
CHANGELOG.TXT:6.0.063 (2014-04-03)
CHANGELOG.TXT:	- Method TCPDF_IMAGES::_parsepng() was fixed to support transparency in Indexed images.
CHANGELOG.TXT:6.0.062 (2014-03-02)
CHANGELOG.TXT:	- The method startLayer() now accepts the NULL value for the $print parameter to not set the print layer option.
CHANGELOG.TXT:6.0.061 (2014-02-18)
CHANGELOG.TXT:	- Bug #893 "Parsing error on streamed xref for secured pdf" was fixed.
CHANGELOG.TXT:6.0.060 (2014-02-16)
CHANGELOG.TXT:	- Bug #891 "Error on parsing hexa fields" was fixed.
CHANGELOG.TXT:	- Bug #892 "Parsing pdf with trailing space at start" was fixed.
CHANGELOG.TXT:6.0.059 (2014-02-03)
CHANGELOG.TXT:	- SVG 'use' support was imporved.
CHANGELOG.TXT:6.0.058 (2014-01-31)
CHANGELOG.TXT:	- Bug #886 "Bugs with SVG using <defs> and <use>" was fixed.
CHANGELOG.TXT:6.0.057 (2014-01-26)
CHANGELOG.TXT:	- Bug #883 "Parsing error" was fixed.
CHANGELOG.TXT:6.0.056 (2014-01-25)
CHANGELOG.TXT:	- The automatic cache folder selection now works also with some restricted hosting environments.
CHANGELOG.TXT:	- CSS text-transform property is now supported (requires the multibyte string library for php) - see examle n. 061 (Thanks to Walter Ferraz).
CHANGELOG.TXT:	- Bug #884 "Parsing error prev tag looking for" was fixed.
CHANGELOG.TXT:6.0.055 (2014-01-15)
CHANGELOG.TXT:	- Bug #880 "Error detecting hX tags (h1,h2..)" was fixed
CHANGELOG.TXT:	- Bug #879 "Thead on the second page inherits style of previous tr" was fixed
CHANGELOG.TXT:6.0.054 (2014-01-13)
CHANGELOG.TXT:	- Bug #877 "Parenteses causing corrupt text" was fixed.
CHANGELOG.TXT:6.0.053 (2014-01-03)
CHANGELOG.TXT:	- Bug #876 "Cell padding should not be multiplied with number of lines in getStringHeight" was fixed.
CHANGELOG.TXT:	- Patch #68 "Empty img src attribute leads to access of uninitialized string offset" was applied.
CHANGELOG.TXT:6.0.052 (2013-12-12)
CHANGELOG.TXT:	- Bug #871 "Datamatrix coding" was fixed.
CHANGELOG.TXT:6.0.051 (2013-12-02)
CHANGELOG.TXT:	- cbbox array values in addTTFfont() were converted to integers.
CHANGELOG.TXT:6.0.050 (2013-12-01)
CHANGELOG.TXT:	- The method getNumLines() was extended to support hyphenation.
CHANGELOG.TXT:	- The CSS property line-height now supports non percentage values.
CHANGELOG.TXT:6.0.050 (2013-11-27)
CHANGELOG.TXT:	- A bug related to PNG images was fixed.
CHANGELOG.TXT:6.0.048 (2013-11-24)
CHANGELOG.TXT:	- SVG vars are now reset in ImageSVG() method.
CHANGELOG.TXT:6.0.047 (2013-11-19)
CHANGELOG.TXT:	- SVG support was extended to support some nested defs.
CHANGELOG.TXT:6.0.046 (2013-11-17)
CHANGELOG.TXT:	- preg_replace_callback functions were replaced to improve memory performances.
CHANGELOG.TXT:6.0.045 (2013-11-17)
CHANGELOG.TXT:	- Bug #862 "Parsing error on flate filter" was fixed.
CHANGELOG.TXT:6.0.044 (2013-11-10)
CHANGELOG.TXT:	- Bug #857 "Undefined offset error" was fixed.
CHANGELOG.TXT:	- The uniord method now uses a static cache to improve performances (thanks to Mathieu Masseboeuf for the sugegstion).
CHANGELOG.TXT:	- Two bugs in the TCPDF_FONTS class were fixed.
CHANGELOG.TXT:6.0.043 (2013-10-29)
CHANGELOG.TXT:	- Bug #854 "CSS instruction display" was fixed.
CHANGELOG.TXT:6.0.042 (2013-10-25)
CHANGELOG.TXT:	- Bug #852 "CMYK Colors Bug" was fixed.
CHANGELOG.TXT:6.0.041 (2013-10-21)
CHANGELOG.TXT:	- Bug #851 "Problem with images in PDF. PHP timing out" was fixed.
CHANGELOG.TXT:6.0.040 (2013-10-20)
CHANGELOG.TXT:	- Bug #849 "SVG import bug" was fixed.
CHANGELOG.TXT:6.0.039 (2013-10-13)
CHANGELOG.TXT:	- Bug #843 "Wrong call in parser" was fixed.
CHANGELOG.TXT:	- Bug #844 "Wrong object type named" was fixed.
CHANGELOG.TXT:	- Bug #845 "Parsing error on obj ref prefixed by '000000'" was fixed.
CHANGELOG.TXT:6.0.038 (2013-10-06)
CHANGELOG.TXT:	- Bug #841 "Division by zero warning at writeHTML a <li> tag" was fixed.
CHANGELOG.TXT:6.0.037 (2013-09-30)
CHANGELOG.TXT:	- Method getAllSpotColors() was added to return all spot colors.
CHANGELOG.TXT:	- Method colorRegistrationBar() was extended to automatically print all spot colors and support individual spot colors.
CHANGELOG.TXT:	- The method registrationMarkCMYK() was added to print a registration mark for CMYK colors.
CHANGELOG.TXT:	- A bug related to page groups was fixed.
CHANGELOG.TXT:	- Gradient() method now supports CMYK equivalents of spot colors.
CHANGELOG.TXT:	- Example n. 56 was updated.
CHANGELOG.TXT:6.0.036 (2013-09-29)
CHANGELOG.TXT:	- Methods for registration bars and crop marks were extended to support registration color (see example n. 56).
CHANGELOG.TXT:	- New default spot colors were added to tcpdf_colors.php, including the 'All' and 'None' special registration colors.
CHANGELOG.TXT:6.0.035 (2013-09-25)
CHANGELOG.TXT:	- TCPDF_PARSER class was improved.
CHANGELOG.TXT:6.0.034 (2013-09-24)
CHANGELOG.TXT:	- Bug #839 "Error in xref parsing in mixed newline chars" was fixed.
CHANGELOG.TXT:6.0.033 (2013-09-23)
CHANGELOG.TXT:	- Bug fix related to PNG image transparency using GD library.
CHANGELOG.TXT:6.0.032 (2013-09-23)
CHANGELOG.TXT:	- Bug #838 "Fatal error when imagick cannot handle the image, even though GD is available and can" was fixed.
CHANGELOG.TXT:6.0.031 (2013-09-18)
CHANGELOG.TXT:	- Bug #836 "Optional EOL marker before endstream" was fixed.
CHANGELOG.TXT:	- Some additional controls were added to avoid "division by zero" error with badly formatted input.
CHANGELOG.TXT:6.0.030 (2013-09-17)
CHANGELOG.TXT:	- Bug #835 "PDF417 and Cyrilic simbols" was fixed.
CHANGELOG.TXT:6.0.029 (2013-09-15)
CHANGELOG.TXT:	- Constants K_TCPDF_PARSER_THROW_EXCEPTION_ERROR and K_TCPDF_PARSER_IGNORE_DECODING_ERRORS where removed in favor of a new configuration array in the TCPDF_PARSER class.
CHANGELOG.TXT:	- The TCPDF_PARSER class can now be configured using the new $cfg parameter.
CHANGELOG.TXT:6.0.028 (2013-09-15)
CHANGELOG.TXT:	- A debug print_r was removed form tcpdf_parser.php.
CHANGELOG.TXT:	- TCPDF_FILTERS class now throws an exception in case of error.
CHANGELOG.TXT:	- TCPDF_PARSER class now throws an exception in case of error unless you define the constant K_TCPDF_PARSER_THROW_EXCEPTION_ERROR to false.
CHANGELOG.TXT:	- The constant K_TCPDF_PARSER_IGNORE_DECODING_ERRORS can be set to tru eto ignore decoding errors on TCPDF_PARSER.
CHANGELOG.TXT:6.0.027 (2013-09-14)
CHANGELOG.TXT:	- A bug in tcpdf_parser wen parsing hexadecimal strings was fixed.
CHANGELOG.TXT:	- A bug in tcpdf_parser wen looking for statxref was fixed.
CHANGELOG.TXT:	- A bug on RC4 encryption was fixed.
CHANGELOG.TXT:6.0.026 (2013-09-14)
CHANGELOG.TXT:	- A bug in tcpdf_parser wen decoding streams was fixed.
CHANGELOG.TXT:6.0.025 (2013-09-04)
CHANGELOG.TXT:	- A pregSplit() bug was fixed.
CHANGELOG.TXT:	- Improved content loading from URLs.
CHANGELOG.TXT:	- Improved font path loading.
CHANGELOG.TXT:6.0.024 (2013-09-02)
CHANGELOG.TXT:	- Bug #826 "addEmptySignatureAppearance issue" was fixed.
CHANGELOG.TXT:6.0.023 (2013-08-05)
CHANGELOG.TXT:	- GNU Freefont fonts were updated.
CHANGELOG.TXT:	- Licensing and copyright information about fonts were improved.
CHANGELOG.TXT:	- PNG image support was improved.
CHANGELOG.TXT:6.0.022 (2013-08-02)
CHANGELOG.TXT:	- fixing initialization problem for signature_appearance property.
CHANGELOG.TXT:6.0.021 (2013-07-18)
CHANGELOG.TXT:	- The bug caused by the preg_split function on some PHP 5.2.x versions was fixed.
CHANGELOG.TXT:6.0.020 (2013-06-04)
CHANGELOG.TXT:	- The method addTTFfont() was fixed (Bug item #813 Undefined offset).
CHANGELOG.TXT:6.0.019 (2013-06-04)
CHANGELOG.TXT:	- The magic constant __DIR__ was replaced with dirname(__FILE__) for php 5.2 compatibility.
CHANGELOG.TXT:	- The exceptions raised by file_exists() function were suppressed.
CHANGELOG.TXT:6.0.018 (2013-05-19)
CHANGELOG.TXT:	- The barcode examples were changed to automatically search for the barcode class path (in case the examples directory is not installed under the TCPDF root).
CHANGELOG.TXT:6.0.017 (2013-05-16)
CHANGELOG.TXT:	- The command line tool tcpdf_addfont.php was improved.
CHANGELOG.TXT:	- The php logic was removed from configuration files that now contains only constant defines.
CHANGELOG.TXT:	- The tcpdf_autoconfig.php file was added to automatically set missing configuration values.
CHANGELOG.TXT:6.0.016 (2013-05-15)
CHANGELOG.TXT:	- The tcpdf_addfont.php tool was improved (thanks to Remi Collet).
CHANGELOG.TXT:	- Constant K_PATH_IMAGES is now automatically set in configuration file.
CHANGELOG.TXT:6.0.015 (2013-05-14)
CHANGELOG.TXT:	- Some unused vars were removed from AddFont() method.
CHANGELOG.TXT:	- Some directories were moved inside the examples directory.
CHANGELOG.TXT:	- All examples were updated to reflect the new default structure.
CHANGELOG.TXT:	- Source code were clean-up up to be more compatible with system packaging.
CHANGELOG.TXT:	- Files encodings and permissions were reset.
CHANGELOG.TXT:	- The command line tool tcpdf_addfont.php was added on the tools directory.
CHANGELOG.TXT:6.0.014 (2013-04-13)
CHANGELOG.TXT:	- The signature of addTTFfont() method includes a new parameter to link existing fonts instead of copying and compressing them.
CHANGELOG.TXT:6.0.013 (2013-04-10)
CHANGELOG.TXT:	- Add support for SVG dx and dy text/tspan attributes.
CHANGELOG.TXT:	- replace require() with require_once().
CHANGELOG.TXT:	- fix some minor typos on documentation.
CHANGELOG.TXT:	- fix a problem when deleting all pages.
CHANGELOG.TXT:6.0.012 (2013-04-24)
CHANGELOG.TXT:	- An error condition in addHtmlLink() method was fixed (bug #799).
CHANGELOG.TXT:6.0.011 (2013-04-22)
CHANGELOG.TXT:	- Minor documentation changes.
CHANGELOG.TXT:6.0.010 (2013-04-03)
CHANGELOG.TXT:	- The method Rect() was fixed to print borders correctly.
CHANGELOG.TXT:6.0.009 (2013-04-02)
CHANGELOG.TXT:	- Adding back some files that were not properly committed on the latest release.
CHANGELOG.TXT:6.0.008 (2013-04-01)
CHANGELOG.TXT:	- Duplicated encoding maps was removed from tcpdf_font_data.php.
CHANGELOG.TXT:	- Fixing bug on AddTTFFont().
CHANGELOG.TXT:6.0.007 (2013-03-29)
CHANGELOG.TXT:	- HTML/CSS font size conversion were improved.
CHANGELOG.TXT:6.0.006 (2013-03-27)
CHANGELOG.TXT:	- Bug related to SVG and EPS files on xobjects were fixed.
CHANGELOG.TXT:6.0.005 (2013-03-26)
CHANGELOG.TXT:	- Default font path was fixed.
CHANGELOG.TXT:6.0.004 (2013-03-21)
CHANGELOG.TXT:	- Return value of addTTFfont() method was fixed.
CHANGELOG.TXT:6.0.003 (2013-03-20)
CHANGELOG.TXT:	- A bug related to non-unicode mode was fixed.
CHANGELOG.TXT:6.0.002 (2013-03-18)
CHANGELOG.TXT:	- _getFIXED call on tcpdf_fonts.php was fixed.
CHANGELOG.TXT:6.0.001 (2013-03-18)
CHANGELOG.TXT:	- Fixed $uni_type call on tcpdf.php.
CHANGELOG.TXT:6.0.000 (2013-03-17)
CHANGELOG.TXT:	- IMPORTANT: PHP4 support has been removed starting from this version.
CHANGELOG.TXT:	- Several TCPDF methods and vars were moved to new class files: tcpdf_static.php, tcpdf_colors.php, tcpdf_images.php, tcpdf_font_data.php, tcpdf_fonts.php.
CHANGELOG.TXT:	- Files htmlcolors.php, spotcolors.php, unicode_data.php and ecodings_maps.php were removed.
CHANGELOG.TXT:	- Barcode classes were renamed and new barcode examples were added.
CHANGELOG.TXT:	- Class TCPDF_PARSER was improved.
CHANGELOG.TXT:5.9.209 (2013-03-15)
CHANGELOG.TXT:	- Image method was improved.
CHANGELOG.TXT:5.9.208 (2013-03-15)
CHANGELOG.TXT:	- objclone function was patched to support old imagick extensions.
CHANGELOG.TXT:	- tcpdf_parser was improved to support Cross-Reference Streams and large streams.
CHANGELOG.TXT:5.9.207 (2013-03-04)
CHANGELOG.TXT:	- Datamatrix class was fixed (a debug echo was removed).
CHANGELOG.TXT:5.9.206 (2013-02-22)
CHANGELOG.TXT:	- Bug item #754 "PNG with alpha channel becomes gray scale" was fixed.
CHANGELOG.TXT:	- Minor documentation fixes.
CHANGELOG.TXT:5.9.205 (2013-02-06)
CHANGELOG.TXT:	- The constant K_TCPDF_THROW_EXCEPTION_ERROR was added on configuration file to change the behavior of Error() method.
CHANGELOG.TXT:	- PDF417 barcode bug was fixed.
CHANGELOG.TXT:5.9.204 (2013-01-23)
CHANGELOG.TXT:	- The method Bookmark() was extended to include named destinations, URLs, internal links or embedded files (see example n. 15).
CHANGELOG.TXT:	- automatic path calculation on configuration file was fixed.
CHANGELOG.TXT:	- Error() method was extended to throw new Exception if PHP > 5.
CHANGELOG.TXT:5.9.203 (2013-01-22)
CHANGELOG.TXT:	- Horizontal position of radiobuttons and checkboxes was adjusted.
CHANGELOG.TXT:5.9.202 (2012-12-16)
CHANGELOG.TXT:	- Vertical space problem after table was fixed.
CHANGELOG.TXT:5.9.201 (2012-12-10)
CHANGELOG.TXT:	- First 256 chars are now always included on font subset to overcome a problem reported on the forum.
CHANGELOG.TXT:5.9.200 (2012-12-05)
CHANGELOG.TXT:	- Bug item #768 "Rowspan with Pagebreak error" was fixed.
CHANGELOG.TXT:	- Page regions now works also with limited MultiCell() cells.
CHANGELOG.TXT:5.9.199 (2012-11-29)
CHANGELOG.TXT:	- Internal setImageBuffer() method was improved.
CHANGELOG.TXT:5.9.198 (2012-11-19)
CHANGELOG.TXT:	- Datamatrix EDIFACT mode was fixed.
CHANGELOG.TXT:5.9.197 (2012-11-06)
CHANGELOG.TXT:	- Bug item #756 "TCPDF 5.9.196 shows line on top of all PDFs" was fixed.
CHANGELOG.TXT:5.9.196 (2012-11-02)
CHANGELOG.TXT:	- Several methods were improved to avoid output when the context is out of page.
CHANGELOG.TXT:	- Bug item #755 "remove cached files before unsetting" was fixed.
CHANGELOG.TXT:5.9.195 (2012-10-24)
CHANGELOG.TXT:	- Method _putfonts() was improved.
CHANGELOG.TXT:5.9.194 (2012-10-23)
CHANGELOG.TXT:	- Text alignment on TextField() method was fixed.
CHANGELOG.TXT:5.9.193 (2012-09-25)
CHANGELOG.TXT:	- Support for named destinations on HTML links was added  (i.e.: <a href="#destinationname">link to named destination</a>).
CHANGELOG.TXT:5.9.192 (2012-09-24)
CHANGELOG.TXT:	- A problem on the releasing process was fixed.
CHANGELOG.TXT:5.9.191 (2012-09-24)
CHANGELOG.TXT:	- SVG image naow support svg and eps images.
CHANGELOG.TXT:5.9.190 (2012-09-23)
CHANGELOG.TXT:	- "page" word translation is now set to empty if not defined.
CHANGELOG.TXT:	- Tooltip feature was added on the radiobutton annotation.
CHANGELOG.TXT:5.9.189 (2012-09-18)
CHANGELOG.TXT:	- Bug item #3568969 "ini_get safe_mode error" was fixed.
CHANGELOG.TXT:5.9.188 (2012-09-15)
CHANGELOG.TXT:	- A datamatrix barcode bug was fixed.
CHANGELOG.TXT:5.9.187 (2012-09-14)
CHANGELOG.TXT:	- Subset feature was extended to include the first 256 characters.
CHANGELOG.TXT:5.9.186 (2012-09-13)
CHANGELOG.TXT:	- barcodes.php file was resynced.
CHANGELOG.TXT:	- Methods SetAbsX, SetAbsY, SetAbsXY where added to set the absolute pointer coordinates.
CHANGELOG.TXT:	- Method getCharBBox were added to get single character bounding box.
CHANGELOG.TXT:	- Signature of addTTFfont method was changed ($addcbbox parameter was added).
CHANGELOG.TXT:5.9.185 (2012-09-12)
CHANGELOG.TXT:	- Method _putfontwidths() was fixed.
CHANGELOG.TXT:5.9.184 (2012-09-11)
CHANGELOG.TXT:	- A problem with EAN barcodes was fixed.
CHANGELOG.TXT:5.9.183 (2012-09-07)
CHANGELOG.TXT:	- A problem with font names normalization was fixed.
CHANGELOG.TXT:5.9.182 (2012-09-05)
CHANGELOG.TXT:	- Bug item #3564982 "Infinite loop in Write() method" was fixed.
CHANGELOG.TXT:5.9.181 (2012-08-31)
CHANGELOG.TXT:	- composer.json file was added.
CHANGELOG.TXT:	- Bug item #3563369 "Cached images are not unlinked some time" was fixed.
CHANGELOG.TXT:5.9.180 (2012-08-22)
CHANGELOG.TXT:	- Bug item #3560493 "Problems with nested cells in HTML" was fixed.
CHANGELOG.TXT:5.9.179 (2012-08-04)
CHANGELOG.TXT:	- SVG 'use' tag was fixed for 'circle' and 'ellipse' shift problem.
CHANGELOG.TXT:	- Alpha status is now correctly stored and restored by getGraphicVars() and SetGraphicVars() methods.
CHANGELOG.TXT:5.9.178 (2012-08-02)
CHANGELOG.TXT:	- SVG 'use' tag was fixed for 'circle' and 'ellipse'.
CHANGELOG.TXT:5.9.177 (2012-08-02)
CHANGELOG.TXT:	- An additional control on annotations was fixed.
CHANGELOG.TXT:5.9.176 (2012-07-25)
CHANGELOG.TXT:	- A bug related to stroke width was fixed.
CHANGELOG.TXT:	- A problem related to font spacing in HTML was fixed.
CHANGELOG.TXT:5.9.175 (2012-07-25)
CHANGELOG.TXT:	- The problem of missing letter on hyphen break was fixed.
CHANGELOG.TXT:5.9.174 (2012-07-25)
CHANGELOG.TXT:	- The problem of wrong filename when downloading PDF from an Android device was fixed.
CHANGELOG.TXT:	- The method setHeaderData() was extended to set text and line color for header (see example n. 1).
CHANGELOG.TXT:	- The method setFooterData() was added to set text and line color for footer (see example n. 1).
CHANGELOG.TXT:	- The methods setTextShadow() and getTextShadow() were added to set text shadows (see example n. 1).
CHANGELOG.TXT:	- The GetCharWidth() method was fixed for negative character spacing.
CHANGELOG.TXT:	- A 'none' border mode is now correctly recognized.
CHANGELOG.TXT:	- Break on hyphen problem was fixed.
CHANGELOG.TXT:5.9.173 (2012-07-23)
CHANGELOG.TXT:	- Some additional control wher added on barcode methods.
CHANGELOG.TXT:	- The option CURLOPT_FOLLOWLOCATION on Image method is now disabled if PHP safe_mode is on or open_basedir is set.
CHANGELOG.TXT:	- Method Bookmark() was extended to include X parameter.
CHANGELOG.TXT:	- Method setDestination() was extended to include X parameter.
CHANGELOG.TXT:	- A problem with Thai language was fixed.
CHANGELOG.TXT:5.9.172 (2012-07-02)
CHANGELOG.TXT:	- A PNG color profile issue was fixed.
CHANGELOG.TXT:5.9.171 (2012-07-01)
CHANGELOG.TXT:	- Some SVG rendering problems were fixed.
CHANGELOG.TXT:5.9.170 (2012-06-27)
CHANGELOG.TXT:	- Bug #3538227 "Numerous errors inserting shared images" was fixed.
CHANGELOG.TXT:5.9.169 (2012-06-25)
CHANGELOG.TXT:	- Some SVG rendering problems were fixed.
CHANGELOG.TXT:5.9.168 (2012-06-22)
CHANGELOG.TXT:	- Thai language rendering was fixed.
CHANGELOG.TXT:5.9.167 (2012-06-22)
CHANGELOG.TXT:	- Thai language rendering was fixed and improved.
CHANGELOG.TXT:	- Method isCharDefined() was improved.
CHANGELOG.TXT:	- Protected method replaceChar() was added.
CHANGELOG.TXT:	- Font "kerning" word was corrected to "tracking".
CHANGELOG.TXT:5.9.166 (2012-06-21)
CHANGELOG.TXT:	- Array to string conversion on file_id creation was fixed.
CHANGELOG.TXT:	- Thai language rendering was fixed (thanks to Atsawin Chaowanakritsanakul).
CHANGELOG.TXT:5.9.165 (2012-06-07)
CHANGELOG.TXT:	- Some HTML form related bugs were fixed.
CHANGELOG.TXT:5.9.164 (2012-06-06)
CHANGELOG.TXT:	- A bug introduced on the latest release was fixed.
CHANGELOG.TXT:5.9.163 (2012-06-05)
CHANGELOG.TXT:	- Method getGDgamma() was changed.
CHANGELOG.TXT:	- Rendering performances of PNG images with alpha channel were improved.
CHANGELOG.TXT:5.9.162 (2012-05-11)
CHANGELOG.TXT:	- A bug related to long text on TD cells was fixed.
CHANGELOG.TXT:5.9.161 (2012-05-09)
CHANGELOG.TXT:	- A bug on XREF table was fixed (Bug ID: 3525051).
CHANGELOG.TXT:	- Deprecated Imagick:clone was replaced.
CHANGELOG.TXT:	- Method objclone() was fixed for PHP4.
CHANGELOG.TXT:5.9.160 (2012-05-03)
CHANGELOG.TXT:	- A bug on tcpdf_parser.php was fixed.
CHANGELOG.TXT:5.9.159 (2012-04-30)
CHANGELOG.TXT:	- Barcode classes were updated to fix PNG export Bug (ID: 3522291).
CHANGELOG.TXT:5.9.158 (2012-04-22)
CHANGELOG.TXT:	- Some SVG-related bugs were fixed.
CHANGELOG.TXT:5.9.157 (2012-04-16)
CHANGELOG.TXT:	- Some SVG-related bugs were fixed.
CHANGELOG.TXT:5.9.156 (2012-04-10)
CHANGELOG.TXT:	- Bug item #3515885 "TOC and booklet: left and right page exchanged".
CHANGELOG.TXT:	- SetAutoPageBreak(false) now works also in multicolumn mode.
CHANGELOG.TXT:5.9.155 (2012-04-02)
CHANGELOG.TXT:	- Bug item #3512596 "font import problems" was fixed.
CHANGELOG.TXT:	- Method addTTFfont() was modified to extract only specified Platform ID and Encoding ID (check the source code documentation).
CHANGELOG.TXT:	- All fonts were updated.
CHANGELOG.TXT:	- Bug item #3513867 "booklet and setHeaderTemplateAutoreset: header shifted left" was fixed.
CHANGELOG.TXT:	- Bug item #3513749 "TCPDF Superscript/Subscript" was fixed.
CHANGELOG.TXT:5.9.154 (2012-03-29)
CHANGELOG.TXT:	- A debug echo was removed.
CHANGELOG.TXT:5.9.153 (2012-03-28)
CHANGELOG.TXT:	- A bug on font conversion was fixed.
CHANGELOG.TXT:	- All fonts were updated.
CHANGELOG.TXT:	- Method isCharDefined() was added to find if a character is defined on the selected font.
CHANGELOG.TXT:	- Method replaceMissingChars() was added to automatically replace missing chars on selected font.
CHANGELOG.TXT:	- SetFont() method was fixed.
CHANGELOG.TXT:5.9.152 (2012-03-23)
CHANGELOG.TXT:	- The following overprint methods were added: setOverprint(), getOverprint().
CHANGELOG.TXT:	- Signature of setAlpha() method was changed and method getAlpha() was added.
CHANGELOG.TXT:	- stroke-opacity support was added on SVG.
CHANGELOG.TXT:	- The following date methods were added: setDocCreationTimestamp(), setDocModificationTimestamp(), getDocCreationTimestamp(), getDocModificationTimestamp(), getFormattedDate(), getTimestamp().
CHANGELOG.TXT:	- Signature of _datestring() method was changed.
CHANGELOG.TXT:	- Method getFontBBox() was added.
CHANGELOG.TXT:	- Method setPageBoxTypes() was aded.
CHANGELOG.TXT:5.9.151 (2012-03-22)
CHANGELOG.TXT:	- Bug item #3509889 "Transform() distorts PDF" was fixed.
CHANGELOG.TXT:	- Precision of real number were extended.
CHANGELOG.TXT:	- ComboBox and ListBox methods were fixed.
CHANGELOG.TXT:	- Bulgarian language file was added.
CHANGELOG.TXT:	- addTOC() method was improved to include bookmark color and font style.
CHANGELOG.TXT:5.9.150 (2012-03-16)
CHANGELOG.TXT:	- A bug related to form fields in PDF/A mode was fixed.
CHANGELOG.TXT:5.9.149 (2012-02-21)
CHANGELOG.TXT:	- Bug item #3489933 "SVG Parser treats tspan like text" was fixed.
CHANGELOG.TXT:5.9.148 (2012-02-17)
CHANGELOG.TXT:	- Bug item #3488600 "Multiple radiobutton sets get first set value" was fixed.
CHANGELOG.TXT:5.9.147 (2012-02-14)
CHANGELOG.TXT:	- A problem with SVG gradients has been fixed.
CHANGELOG.TXT:5.9.146 (2012-02-12)
CHANGELOG.TXT:	- Bug item #3486880 "$filehash undefine error" was fixed.
CHANGELOG.TXT:	- The default font is now the one specified at PDF_FONT_NAME_MAIN constant.
CHANGELOG.TXT:5.9.145 (2012-01-28)
CHANGELOG.TXT:	- Japanese language file was added.
CHANGELOG.TXT:	- TCPDF license and README.TXT files were updated.
CHANGELOG.TXT:5.9.144 (2012-01-12)
CHANGELOG.TXT:	- HTML output on barcode classes was improved.
CHANGELOG.TXT:5.9.143 (2012-01-08)
CHANGELOG.TXT:	- Bug item #3471057 "setCreator() has no effect" was fixed.
CHANGELOG.TXT:5.9.142 (2011-12-23)
CHANGELOG.TXT:	- Source code documentation was updated.
CHANGELOG.TXT:5.9.141 (2011-12-14)
CHANGELOG.TXT:	- Some minor bugs were fixed.
CHANGELOG.TXT:5.9.140 (2011-12-13)
CHANGELOG.TXT:	- SVG now supports embedded images encoded as base64.
CHANGELOG.TXT:5.9.139 (2011-12-11)
CHANGELOG.TXT:	- Spot color methods were fixed.
CHANGELOG.TXT:5.9.138 (2011-12-10)
CHANGELOG.TXT:	- cropMark() method was improved (check source code documentation).
CHANGELOG.TXT:	- Example n. 56 was updated.
CHANGELOG.TXT:	- Bug item #3452390 "Check Box still not ticked when set to true" was fixed.
CHANGELOG.TXT:5.9.137 (2011-12-01)
CHANGELOG.TXT:	- Bug item #3447005 "Background color and border of Form Elements is printed" was fixed.
CHANGELOG.TXT:	- Color support for Form elements was improved.
CHANGELOG.TXT:5.9.136 (2011-11-27)
CHANGELOG.TXT:	- Bug item #3443387 "SetMargins with keep option does not work for top margin" was fixed.
CHANGELOG.TXT:5.9.135 (2011-11-04)
CHANGELOG.TXT:	- Bug item #3433406 "Double keywords in description" was fixed.
CHANGELOG.TXT:5.9.134 (2011-10-29)
CHANGELOG.TXT:	- The default value for $defcol parameter on convertHTMLColorToDec() method was fixed.
CHANGELOG.TXT:	- Deafult HTTP headers were changed to avoid browser caching.
CHANGELOG.TXT:	- Some deprecated syntax were replaced.
CHANGELOG.TXT:5.9.133 (2011-10-26)
CHANGELOG.TXT:	- Bug item #3428446 "copyPage method not working when diskcache enabled" was fixed.
CHANGELOG.TXT:5.9.132 (2011-10-20)
CHANGELOG.TXT:	- Bug item #3426167 "bug in function convertHTMLColorToDec()" was fixed.
CHANGELOG.TXT:5.9.131 (2011-10-13)
CHANGELOG.TXT:	- An error message was added to ImagePngAlpha() method.
CHANGELOG.TXT:5.9.130 (2011-10-12)
CHANGELOG.TXT:	- Now you can set image data strings on HTML img tag by encoding the image binary data in this way: $imgsrc = '@'.base64_encode($imgdata);
CHANGELOG.TXT:5.9.129 (2011-10-07)
CHANGELOG.TXT:	- Core fonts metrics was fixed (replace all helvetica and times php files on fonts folder).
CHANGELOG.TXT:	- Form fields support was improved and some problems were fixed (check the example n. 14).
CHANGELOG.TXT:	- Bug item #3420249 "Issue with booklet and MultiCell" was fixed.
CHANGELOG.TXT:5.9.128 (2011-10-06)
CHANGELOG.TXT:	- Method addTTFfont() was improved (check the source code documentation).
CHANGELOG.TXT:	- Method setExtraXMP() to set custom XMP data was added.
CHANGELOG.TXT:5.9.127 (2011-10-04)
CHANGELOG.TXT:	- Readonly mode option was activated for radiobuttons.
CHANGELOG.TXT:5.9.126 (2011-10-03)
CHANGELOG.TXT:	- Bug item #3417989 "Graphics State operator in form XObject fails to render" was fixed.
CHANGELOG.TXT:	- Xobjects problems with transparency, gradients and spot colors were fixed.
CHANGELOG.TXT:5.9.125 (2011-10-03)
CHANGELOG.TXT:	- Support for 8-digit CMYK hexadecimal color representation was added (to be used with XHTML and SVG).
CHANGELOG.TXT:	- Spot colors support was improved (check example n. 37).
CHANGELOG.TXT:	- Color methods were improved.
CHANGELOG.TXT:5.9.124 (2011-10-02)
CHANGELOG.TXT:	- Core fonts were updated.
CHANGELOG.TXT:5.9.123 (2011-10-02)
CHANGELOG.TXT:	- The method addTTFfont() wad added to automatically convert TTF fonts (check the new fonts guide at http://www.tcpdf.org).
CHANGELOG.TXT:	- Old font utils were removed.
CHANGELOG.TXT:	- All fonts were updated and new arabic fonts were added (almohanad were removed and replaced by aefurat and aealarabiya).
CHANGELOG.TXT:	- The file unicode_data.php was updated.
CHANGELOG.TXT:	- The file encodings_maps.php was added.
CHANGELOG.TXT:	- PDF/A files are now compressed to save space.
CHANGELOG.TXT:	- XHTML input form fields now support text-alignment attribute.
CHANGELOG.TXT:5.9.122 (2011-09-29)
CHANGELOG.TXT:	- PDF/A-1b compliance was improved to pass some online testing.
CHANGELOG.TXT:5.9.121 (2011-09-28)
CHANGELOG.TXT:	- This version includes support for PDF/A-1b format (the class constructor signature was changed - see example n. 65).
CHANGELOG.TXT:	- Method setSRGBmode() was added to force sRGB_IEC61966-2.1 black scaled ICC color profile for the whole document (file sRGB.icc was added).
CHANGELOG.TXT:	- 14 new fonts were added to allow embedding core fonts (for PDF/A compliance).
CHANGELOG.TXT:	- Font utils were fixed.
CHANGELOG.TXT:5.9.120 (2011-09-22)
CHANGELOG.TXT:	- This version includes a fix for _getTrueTypeFontSubset() method.
CHANGELOG.TXT:5.9.119 (2011-09-19)
CHANGELOG.TXT:	- This version includes a fix for extra page numbering on TOC.
CHANGELOG.TXT:5.9.118 (2011-09-17)
CHANGELOG.TXT:	- This version includes some changes that allows you to add a bookmark for a page that do not exist.
CHANGELOG.TXT:5.9.117 (2011-09-15)
CHANGELOG.TXT:	- TCPDFBarcode and TCPDF2DBarcode classes were extended to include a method for exporting barcodes as PNG images.
CHANGELOG.TXT:5.9.116 (2011-09-14)
CHANGELOG.TXT:	- Datamatrix class was improved and documentation was fixed.
CHANGELOG.TXT:5.9.115 (2011-09-13)
CHANGELOG.TXT:	- Datamatrix ECC200 barcode support was added (a new datamatrix.php file was added) - check example n. 50.
CHANGELOG.TXT:	- getBarcodeHTML() method was added on TCPDFBarcode and TCPDF2DBarcode classes to return an HTML representation of the barcode.
CHANGELOG.TXT:	- cURL options on Image() method were improved.
CHANGELOG.TXT:	- A bug on write2DBarcode() was fixed.
CHANGELOG.TXT:5.9.114 (2011-09-04)
CHANGELOG.TXT:	- A bug related to column position was fixed.
CHANGELOG.TXT:5.9.113 (2011-08-24)
CHANGELOG.TXT:	- This release include two new experimental files for parsing an existing PDF document (the integration with TCPDF is under development).
CHANGELOG.TXT:5.9.112 (2011-08-18)
CHANGELOG.TXT:	- A newline character was added after the 'trailer' keyword for compatibility with some parsers.
CHANGELOG.TXT:	- Support for layers was improved.
CHANGELOG.TXT:5.9.111 (2011-08-17)
CHANGELOG.TXT:	- Barcode CODE 39 default gap was restored at 1.
CHANGELOG.TXT:5.9.110 (2011-08-17)
CHANGELOG.TXT:	- Barcode CODE 39 was fixed.
CHANGELOG.TXT:5.9.109 (2011-08-12)
CHANGELOG.TXT:	- Method getNumLines() was fixed.
CHANGELOG.TXT:	- A bug related to page break in multi-column mode was fixed.
CHANGELOG.TXT:5.9.108 (2011-08-09)
CHANGELOG.TXT:	- A bug on PHP4 version was fixed.
CHANGELOG.TXT:5.9.107 (2011-08-08)
CHANGELOG.TXT:	- This version includes a minor bugfix.
CHANGELOG.TXT:5.9.106 (2011-08-04)
CHANGELOG.TXT:	- This version includes transparency groups: check the new parameter on startTemplate() method and example 62.
CHANGELOG.TXT:5.9.105 (2011-08-04)
CHANGELOG.TXT:	- Bug item #3386153 "Check Box not ticked when set to true" was fixed.
CHANGELOG.TXT:5.9.104 (2011-08-01)
CHANGELOG.TXT:	- Bug item #3383698 "imagemagick, resize and dpi" was fixed.
CHANGELOG.TXT:5.9.103 (2011-07-16)
CHANGELOG.TXT:	- Alignment of XHTML lines was improved.
CHANGELOG.TXT:	- Spell of the "length" word was fixed.
CHANGELOG.TXT:5.9.102 (2011-07-13)
CHANGELOG.TXT:	- Methods startLayer() and endLayer() were added to support arbitrary PDF layers.
CHANGELOG.TXT:	- Some improvements/fixes for images were added (thanks to Brendan Abbott).
CHANGELOG.TXT:5.9.101 (2011-07-07)
CHANGELOG.TXT:	- Support for JPEG and PNG ICC Color Profiles was added.
CHANGELOG.TXT:	- Method addEmptySignatureAppearance() was added to add empty signature fields (see example n. 52).
CHANGELOG.TXT:	- Bug item #3354332 "Strange line spacing with reduced font-size in writeHTML" was fixed.
CHANGELOG.TXT:5.9.100 (2011-06-29)
CHANGELOG.TXT:	- An SVG bug has been fixed.
CHANGELOG.TXT:5.9.099 (2011-06-27)
CHANGELOG.TXT:	- Bug item #3335045 "Font freesans seems somehow corrupted in footer" was fixed.
CHANGELOG.TXT:5.9.098 (2011-06-23)
CHANGELOG.TXT:	- The Named Destination feature was fixed.
CHANGELOG.TXT:5.9.097 (2011-06-23)
CHANGELOG.TXT:	- The method setHtmlVSpace() now can be used also for tags: div, li, br, dt and dd.
CHANGELOG.TXT:	- The Named Destination feature was added (check the example n. 15) - thanks to Christian Deligant.
CHANGELOG.TXT:5.9.096 (2011-06-19)
CHANGELOG.TXT:	- Bug item #3322234 "Surrogate pairs codes in arrUTF8ToUTF16BE" was fixed.
CHANGELOG.TXT:5.9.095 (2011-06-18)
CHANGELOG.TXT:	- Numbers alignment for Table-Of-Content methods was improved and fixed.
CHANGELOG.TXT:	- Font subsetting was fixed to include all parts of composite fonts.
CHANGELOG.TXT:5.9.094 (2011-06-17)
CHANGELOG.TXT:	- Bug item #3317898 "Page Group numbering broken in 5.9.093" was fixed.
CHANGELOG.TXT:5.9.093 (2011-06-16)
CHANGELOG.TXT:	- Method setStartingPageNumber() was added to set starting page number (for automatic page numbering).
CHANGELOG.TXT:5.9.092 (2011-06-15)
CHANGELOG.TXT:	- Method _putpages() was improved.
CHANGELOG.TXT:	- Bug item #3316678 "Memory overflow when use Rotate and SetAutoPageBreak" was fixed.
CHANGELOG.TXT:	- Right alignment of page numbers was improved.
CHANGELOG.TXT:5.9.090 (2011-06-14)
CHANGELOG.TXT:	- Methods AliasNbPages() and AliasNumPage() were re-added as deprecated for backward compatibility.
CHANGELOG.TXT:5.9.089 (2011-06-13)
CHANGELOG.TXT:	- Example n. 8 was updated.
CHANGELOG.TXT:	- Method sendOutputData() was changed to remove default compression (it was incompatible with some server settings).
CHANGELOG.TXT:	- Bugs related to page group numbers were fixed.
CHANGELOG.TXT:	- Method copyPage() was fixed.
CHANGELOG.TXT:	- Method Image() was improved to include support for alternative and external images.
CHANGELOG.TXT:5.9.088 (2011-06-01)
CHANGELOG.TXT:	- Method getAutoPageBreak() was added (see example n. 51).
CHANGELOG.TXT:	- Example n. 51 (full page background) was updated.
CHANGELOG.TXT:5.9.087 (2011-06-01)
CHANGELOG.TXT:	- Method sendOutputData() was improved to include deflate encoding.
CHANGELOG.TXT:	- Barcode classes on PHP 4 version were fixed.
CHANGELOG.TXT:5.9.086 (2011-05-31)
CHANGELOG.TXT:	- Font files were updated (the ones on the previous release were broken).
CHANGELOG.TXT:	- The script fonts/utils/makeallttffonts.php was updated and fixed.
CHANGELOG.TXT:	- Output() method was improved to use compression when available.
CHANGELOG.TXT:5.9.085 (2011-05-31)
CHANGELOG.TXT:	- TCPDFBarcode class (barcodes.php) now includes getBarcodeSVG() and getBarcodeSVGcode() methods to get SVG image representation of the barcode.
CHANGELOG.TXT:	- TCPDF2DBarcode class (2dbarcodes.php) now includes getBarcodeSVG() and getBarcodeSVGcode() methods to get SVG image representation of the barcode.
CHANGELOG.TXT:5.9.084 (2011-05-29)
CHANGELOG.TXT:	- Font files were updated.
CHANGELOG.TXT:	- The file fonts/utils/makeallttffonts.php was updated.
CHANGELOG.TXT:	- Bug item# 3308774 "Problems with font subsetting" was fixed.
CHANGELOG.TXT:5.9.083 (2011-05-24)
CHANGELOG.TXT:	- Bug item #3308387 "line height & SetCellHeightRatio" was fixed.
CHANGELOG.TXT:5.9.082 (2011-05-22)
CHANGELOG.TXT:	- Bug item #3305592 "Setting fill color <> text color breaks text clipping" was fixed.
CHANGELOG.TXT:5.9.081 (2011-05-18)
CHANGELOG.TXT:	- Method resetHeaderTemplate() was added to reset the xobject template used by Header() method.
CHANGELOG.TXT:	- Method setHeaderTemplateAutoreset() was added to automatically reset the xobject template used by Header() method at each page.
CHANGELOG.TXT:5.9.080 (2011-05-17)
CHANGELOG.TXT:	- A problem related to file path calculation for images was fixed.
CHANGELOG.TXT:	- A problem related to unsuppressed getimagesize() error was fixed.
CHANGELOG.TXT:5.9.079 (2011-05-16)
CHANGELOG.TXT:	- Footer() method was changed to use C128 barcode as default (instead of the previous C128B).
CHANGELOG.TXT:5.9.078 (2011-05-12)
CHANGELOG.TXT:	- Bug item #3300878 "wrong rendering for html bullet list in some case" was fixed.
CHANGELOG.TXT:	- Bug item #3301017 "Emphasized vs. font-weight" was fixed.
CHANGELOG.TXT:	- Barcode Code 128 was improved to include AUTO mode (automatically switch between A, B and C modes).
CHANGELOG.TXT:	- Examples n. 27 and 49 were updated.
CHANGELOG.TXT:5.9.077 (2011-05-07)
CHANGELOG.TXT:	- Bug item #3298591 "error code93" was fixed.
CHANGELOG.TXT:	- SetLineStyle() function was improved.
CHANGELOG.TXT:5.9.076 (2011-05-06)
CHANGELOG.TXT:	- Bug item #3298264 "codebar 93 error" was fixed.
CHANGELOG.TXT:5.9.075 (2011-05-02)
CHANGELOG.TXT:	- Table header alignment when using WriteHTMLCell() or MultiCell() was fixed.
CHANGELOG.TXT:5.9.074 (2011-04-28)
CHANGELOG.TXT:	- Bug item #3294306 "CSS classes not work in <thead> table section" was fixed.
CHANGELOG.TXT:5.9.073 (2011-04-27)
CHANGELOG.TXT:	- A bug related to character entities on HTML cells was fixed.
CHANGELOG.TXT:5.9.072 (2011-04-26)
CHANGELOG.TXT:	- Method resetColumns() was added to remove multiple columns and reset page margins (example n. 10 was updated).
CHANGELOG.TXT:5.9.071 (2011-04-19)
CHANGELOG.TXT:	- Bug #3288574 "<br/> trouble" was fixed.
CHANGELOG.TXT:5.9.069 (2011-04-19)
CHANGELOG.TXT:	- Bug #3288763 "HTML-Table: non-breaking table rows: Bug" was fixed.
CHANGELOG.TXT:5.9.068 (2011-04-15)
CHANGELOG.TXT:	- Bookmark, addTOC and addHTMLTOC methods were improved to include font style and color (Examples 15, 49 and 59 were updated).
CHANGELOG.TXT:	- Default $_SERVER['DOCUMENT_ROOT'] value on tcpdf_config.php file was changed.
CHANGELOG.TXT:5.9.067 (2011-04-10)
CHANGELOG.TXT:	- Performances were drastically improved (PDF documents are now created more quickly).
CHANGELOG.TXT:5.9.066 (2011-04-09)
CHANGELOG.TXT:	- A bug related to digital signature + encryption was fixed.
CHANGELOG.TXT:	- A bug related to encryption + xobject templates was fixed.
CHANGELOG.TXT:5.9.065 (2011-04-08)
CHANGELOG.TXT:	- Bug item #3280512 "Text encoding iso-8859-2 crashes" was fixed.
CHANGELOG.TXT:5.9.064 (2011-04-05)
CHANGELOG.TXT:	- A bug related to character entities on HTML cells was fixed.
CHANGELOG.TXT:5.9.063 (2011-04-01)
CHANGELOG.TXT:	- Bug item #3267235 "WriteHTML() and image that doesn't fit on the page" was fixed.
CHANGELOG.TXT:5.9.062 (2011-03-23)
CHANGELOG.TXT:	- Bug item #3232650 "Using Write if there are pageRegions active creates error" was fixed.
CHANGELOG.TXT:	- Bug item #3221891 "text input borders" was fixed.
CHANGELOG.TXT:	- Bug item #3228958 "Adobe Reader 9.4.2 crash" was fixed.
CHANGELOG.TXT:5.9.061 (2011-03-15)
CHANGELOG.TXT:	- Bug item #3213488 "wrong function call in function Write" was fixed.
CHANGELOG.TXT:	- Bug item #3203007 "list element with black background" was fixed.
CHANGELOG.TXT:5.9.060 (2011-03-08)
CHANGELOG.TXT:	- addTOC() method was fixed for text alignment problems.
CHANGELOG.TXT:5.9.059 (2011-02-27)
CHANGELOG.TXT:	- Default Header() method was improved to reduce document size.
CHANGELOG.TXT:5.9.058 (2011-02-25)
CHANGELOG.TXT:	- Image() method was improved to cache images with transparency layers (thanks to Korneliusz Jarzębski for reporting this problem).
CHANGELOG.TXT:5.9.057 (2011-02-24)
CHANGELOG.TXT:	- A problem with image caching system was fixed (thanks to Korneliusz Jarzębski for reporting this problem).
CHANGELOG.TXT:5.9.056 (2011-02-22)
CHANGELOG.TXT:	- A bug on fixHTMLCode() method was fixed.
CHANGELOG.TXT:	- Automatic line break for HTML was fixed.
CHANGELOG.TXT:5.9.055 (2011-02-17)
CHANGELOG.TXT:	- Another bug related to HTML table page break was fixed.
CHANGELOG.TXT:5.9.054 (2011-02-16)
CHANGELOG.TXT:	- A bug related to HTML table page break was fixed.
CHANGELOG.TXT:5.9.053 (2011-02-16)
CHANGELOG.TXT:	- Support for HTML attribute display="none" was added.
CHANGELOG.TXT:5.9.052 (2011-02-15)
CHANGELOG.TXT:	- A bug related to HTML automatic newlines was fixed.
CHANGELOG.TXT:5.9.051 (2011-02-12)
CHANGELOG.TXT:	- "Commas at beginning of new lines" problem was fixed.
CHANGELOG.TXT:5.9.050 (2011-02-11)
CHANGELOG.TXT:	- Bug #3177606 "SVG Bar chart error" was fixed.
CHANGELOG.TXT:5.9.049 (2011-02-03)
CHANGELOG.TXT:	- Bug #3170777 "TCPDF creates a new page after a single line in writeHTML" was fixed.
CHANGELOG.TXT:5.9.048 (2011-02-02)
CHANGELOG.TXT:	- No changes. Just released to override previous release that was not uploaded correctly.
CHANGELOG.TXT:5.9.047 (2011-01-28)
CHANGELOG.TXT:	- Bug #3167115 "PDF error in <table> (example 48)" was fixed (was introduced in 5.8.046).
CHANGELOG.TXT:5.9.046 (2011-01-18)
CHANGELOG.TXT:	- PDF view/print layers are now automatically turned off if not used (see setVisibility() method).
CHANGELOG.TXT:5.9.045 (2011-01-17)
CHANGELOG.TXT:	- HTML list support were improved.
CHANGELOG.TXT:5.9.044 (2011-01-15)
CHANGELOG.TXT:	- Bug #3158422 "writeHTMLCell Loop" was fixed.
CHANGELOG.TXT:	- Some HTML image alignment problems were fixed.
CHANGELOG.TXT:5.9.043 (2011-01-14)
CHANGELOG.TXT:	- Bug #3158178 "PHP Notice" was fixed.
CHANGELOG.TXT:	- Bug #3158193 "Endless loop in writeHTML" was fixed.
CHANGELOG.TXT:	- Bug #3157764 "SVG Pie chart incorrectly rendered2".
CHANGELOG.TXT:5.9.042 (2011-01-14)
CHANGELOG.TXT:	- Some problems of the PHP4 version were fixed.
CHANGELOG.TXT:5.9.041 (2011-01-13)
CHANGELOG.TXT:	- A problem with SVG elliptical arc path was fixed (ref. bug #3156574).
CHANGELOG.TXT:	- A problem related to font weight on HTML table headers was fixed.
CHANGELOG.TXT:5.9.040 (2011-01-12)
CHANGELOG.TXT:	- A bug related to empty pages after table was fixed.
CHANGELOG.TXT:5.9.039 (2011-01-12)
CHANGELOG.TXT:	- Bug item #3155759 "openssl_random_pseudo_bytes() slow under Windows" was fixed.
CHANGELOG.TXT:5.9.038 (2011-01-11)
CHANGELOG.TXT:	- Minor bugs were fixed.
CHANGELOG.TXT:5.9.037 (2011-01-09)
CHANGELOG.TXT:	- An alignment problem for HTML texts was fixed.
CHANGELOG.TXT:5.9.036 (2011-01-07)
CHANGELOG.TXT:	- A bug related to HTML tables on header was fixed.
CHANGELOG.TXT:5.9.035 (2011-01-03)
CHANGELOG.TXT:	- A problem related to HTML table border alignment was fixed.
CHANGELOG.TXT:	- Bug #2996366 "FastCGI and Header Problems" was fixed.
CHANGELOG.TXT:5.9.034 (2010-12-19)
CHANGELOG.TXT:	- DejaVu and GNU Free fonts were updated.
CHANGELOG.TXT:5.9.033 (2010-12-18)
CHANGELOG.TXT:	- Source code documetnation was improved.
CHANGELOG.TXT:5.9.032 (2010-12-18)
CHANGELOG.TXT:	- Default font stretching and spacing values are now inherited by HTML methods.
CHANGELOG.TXT:5.9.031 (2010-12-16)
CHANGELOG.TXT:	- Source code documentation errors were fixed.
CHANGELOG.TXT:5.9.030 (2010-12-16)
CHANGELOG.TXT:	- Several source code documentation errors were fixed.
CHANGELOG.TXT:	- Source code style was changed for Doxygen.
CHANGELOG.TXT:	- Source code documentation was moved online to http://www.tcpdf.org
CHANGELOG.TXT:5.9.029 (2010-12-04)
CHANGELOG.TXT:	- The $fitbox parameter on Image() method was extended to specify image alignment inside the box (check the example n. 9).
CHANGELOG.TXT:5.9.028 (2010-12-03)
CHANGELOG.TXT:	- Font utils makefont.php and makeallttffonts.php were updated.
CHANGELOG.TXT:5.9.027 (2010-12-01)
CHANGELOG.TXT:	- Spot Colors are now better integrated with HTML mode.
CHANGELOG.TXT:	- Method SetDocInfoUnicode() was added to turn on/off Unicode mode for document information dictionary (meta tags) - check the example n. 19.
CHANGELOG.TXT:5.9.026 (2010-12-01)
CHANGELOG.TXT:	- A problem with mixed text directions on HTML was fixed.
CHANGELOG.TXT:5.9.025 (2010-12-01)
CHANGELOG.TXT:	- The AddSpotColor() now automatically fills the spotcolor array (defined on spotcolors.php file).
CHANGELOG.TXT:5.9.024 (2010-11-30)
CHANGELOG.TXT:	- Bug item #3123612 "SVG not use gradientTransform in percentage mode" was fixed.
CHANGELOG.TXT:5.9.023 (2010-11-25)
CHANGELOG.TXT:	- A potential bug on SVG transcoder was fixed.
CHANGELOG.TXT:5.9.022 (2010-11-21)
CHANGELOG.TXT:	- Method ImageEPS includes support for EPS/AI Spot colors.
CHANGELOG.TXT:	- Method ImageEPS includes a new parameter $fixoutvals to remove values outside the bounding box.
CHANGELOG.TXT:5.9.021 (2010-11-20)
CHANGELOG.TXT:	- Support for custom bullet points images was added (check the example n.6)
CHANGELOG.TXT:	- Examples n. 6 and 61 were update (check the comments inside).
CHANGELOG.TXT:5.9.020 (2010-11-19)
CHANGELOG.TXT:	- A problem related to additional page when using multicolumn mode was fixed.
CHANGELOG.TXT:5.9.019 (2010-11-19)
CHANGELOG.TXT:	- An SVG bug was fixed.
CHANGELOG.TXT:	- ImageSVG() and ImageEPS() methods now accepts image data streams (put the string on the $file parameter preceded by '@' character).
CHANGELOG.TXT:	- Option 'E' was added to the $dest parameter of Output() method to return the document as base64 mime multi-part email attachment (RFC 2045).
CHANGELOG.TXT:5.9.018 (2010-11-19)
CHANGELOG.TXT:	- An SVG bug was fixed.
CHANGELOG.TXT:5.9.017 (2010-11-16)
CHANGELOG.TXT:	- Tagline color was set to transparent.
CHANGELOG.TXT:	- The method fixHTMLCode() was added to automatically clean up HTML code (requires HTML Tidy).
CHANGELOG.TXT:5.9.016 (2010-11-16)
CHANGELOG.TXT:	- Bug item #3109705 "list item page break hanging bullet" was fixed.
CHANGELOG.TXT:5.9.015 (2010-11-16)
CHANGELOG.TXT:	- Bug item affecting QRCode was fixed.
CHANGELOG.TXT:	- Some bugs affecting HTML lists were fixed.
CHANGELOG.TXT:	- ImageSVG() and fitBlock() methods were improved to handle some SVG problems.
CHANGELOG.TXT:	- Some problems with PHP4 compatibility were fixed.
CHANGELOG.TXT:5.9.014 (2010-11-15)
CHANGELOG.TXT:	- Bug item #3109464 "QRCode error" was fixed.
CHANGELOG.TXT:5.9.013 (2010-11-15)
CHANGELOG.TXT:	- Bug item #3109257 "Problem with interlaced GIFs and PNGs" was fixed.
CHANGELOG.TXT:	- Image function now accepts image data streams (check example n. 9).
CHANGELOG.TXT:5.9.012 (2010-11-12)
CHANGELOG.TXT:	- Method getTCPDFVersion() was added.
CHANGELOG.TXT:	- PDF_PRODUCER constant was removed.
CHANGELOG.TXT:	- Method convertHTMLColorToDec() was improved.
CHANGELOG.TXT:	- HTML colors now support spot color names defined on the new spotcolors.php file.
CHANGELOG.TXT:	- The default method Header() was improved to support SVG and EPS/AI images.
CHANGELOG.TXT:	- A bug on SVG importer was fixed.
CHANGELOG.TXT:5.9.011 (2010-11-02)
CHANGELOG.TXT:	- Bug item #3101486 "Bug Fix for image loading" was fixed.
CHANGELOG.TXT:5.9.010 (2010-10-27)
CHANGELOG.TXT:	- Support for CSS properties 'border-spacing' and 'padding' for tables were added.
CHANGELOG.TXT:	- Several language files were added.
CHANGELOG.TXT:5.9.009 (2010-10-21)
CHANGELOG.TXT:	- HTML text alignment was improved to include the case of RTL text on LTR direction and LTR text on RTL direction.
CHANGELOG.TXT:5.9.008 (2010-10-21)
CHANGELOG.TXT:	- Bug item #3091502 "Bookmark oddity" was fixed.
CHANGELOG.TXT:	- HTML internal links now accepts page number and Y position.
CHANGELOG.TXT:	- The method write1DBarcode() was improved to accept separate horizontal and vertical padding (see example n. 27).
CHANGELOG.TXT:5.9.007 (2010-10-20)
CHANGELOG.TXT:	- Method adjustCellPadding() was fixed to handle bad input.
CHANGELOG.TXT:5.9.006 (2010-10-19)
CHANGELOG.TXT:	- Support for AES 256 bit encryption was added (see example n. 16).
CHANGELOG.TXT:	- Method getNumLines() was fixed for the empty string case.
CHANGELOG.TXT:5.9.005 (2010-10-18)
CHANGELOG.TXT:	- Method addPageRegion() was changed to accept regions starting exactly from the top of the page.
CHANGELOG.TXT:5.9.004 (2010-10-18)
CHANGELOG.TXT:	- A bug related to annotations was fixed.
CHANGELOG.TXT:	- The file unicode_data.php was canged to encapsulate all data in a class.
CHANGELOG.TXT:	- The file htmlcolors.php was changed to remove the global variable.
CHANGELOG.TXT:5.9.003 (2010-10-15)
CHANGELOG.TXT:	- Support for no-write page regions was added. Check the example n. 64 and new methods setPageRegions(), addPageRegion(), getPageRegions(), removePageRegion().
CHANGELOG.TXT:	- A bug on Right-To-Left alignment was fixed.
CHANGELOG.TXT:5.9.002 (2010-10-08)
CHANGELOG.TXT:	- Cell method was improved to preserve the font stretching and spacing values when using the $stretch parameter (see example n. 4).
CHANGELOG.TXT:5.9.001 (2010-10-07)
CHANGELOG.TXT:	- The problem of blank page for nobr table higher than a single page was fixed.
CHANGELOG.TXT:5.9.000 (2010-10-06)
CHANGELOG.TXT:	- Support for text stretching and spacing (tracking) was added, see example n. 63 and methods setFontStretching(), getFontStretching(), setFontSpacing(), getFontSpacing().
CHANGELOG.TXT:	- Support for CSS properties 'font-stretch' and 'letter-spacing' was added (see example n. 63).
CHANGELOG.TXT:	- The cMargin state was replaced by cell_padding array that can be set/get using setCellPadding() and getCellPadding() methods.
CHANGELOG.TXT:	- Methods getCellPaddings() and setCellPaddings() were added to fine tune cell paddings (see example n. 5).
CHANGELOG.TXT:	- Methods getCellMargins() and setCellMargins() were added to fine tune cell margins (see example n. 5).
CHANGELOG.TXT:	- Method write1DBarcode() was improved to permit custom labels (see example n. 27).
CHANGELOG.TXT:	- Method ImagePngAlpha() now includes support for ImageMagick to improve performances.
CHANGELOG.TXT:	- XObject Template support was extended to support Multicell(), writeHTML() and writeHTMLCell() methods.
CHANGELOG.TXT:	- The signature of getNumLines() and getStringHeight() methods is changed.
CHANGELOG.TXT:	- Example n. 57 was updated.
CHANGELOG.TXT:// -------------------------------------------------------------------
CHANGELOG.TXT:5.8.034 (2010-09-27)
CHANGELOG.TXT:	- A bug related to SetFont on XObject templates was fixed.
CHANGELOG.TXT:5.8.033 (2010-09-25)
CHANGELOG.TXT:	- A problem with Footer() and multiple columns was fixed.
CHANGELOG.TXT:5.8.032 (2010-09-22)
CHANGELOG.TXT:	- Bug #3073165 "Issues with changes to addHTMLVertSpace()" was fixed.
CHANGELOG.TXT:5.8.031 (2010-09-20)
CHANGELOG.TXT:	- Bug #3071961 "Spaces in HTML" was fixed.
CHANGELOG.TXT:5.8.030 (2010-09-17)
CHANGELOG.TXT:	- SVG support was improved and some bugs were fixed.
CHANGELOG.TXT:5.8.029 (2010-09-16)
CHANGELOG.TXT:	- A problem with HTML borders was fixed.
CHANGELOG.TXT:5.8.028 (2010-09-13)
CHANGELOG.TXT:	- Bug #3065224 "mcrypt_create_iv error on TCPDF 5.8.027 on PHP 5.3.2" was fixed.
CHANGELOG.TXT:5.8.027 (2010-09-13)
CHANGELOG.TXT:	- Bug #3065118 "mcrypt_decrypt error on TCPDF 5.8.026 on PHP 5.3.2" was fixed.
CHANGELOG.TXT:5.8.026 (2010-09-13)
CHANGELOG.TXT:	- A bug on addHTMLTOC() method was fixed. Note: be sure that the #TOC_PAGE_NUMBER# template has enough width to be printed correctly.
CHANGELOG.TXT:5.8.025 (2010-09-09)
CHANGELOG.TXT:	- Bug #3062692 "Textarea inside a table" was fixed.
CHANGELOG.TXT:5.8.024 (2010-09-08)
CHANGELOG.TXT:	- Bug #3062005 "Undefined variable: ann_obj_id" was fixed.
CHANGELOG.TXT:5.8.023 (2010-08-31)
CHANGELOG.TXT:	- Forms bug added on version 5.8.019 was fixed.
CHANGELOG.TXT:5.8.022 (2010-08-31)
CHANGELOG.TXT:	- Bug #3056632 "SVG rendered vertically flipped" was fixed.
CHANGELOG.TXT:5.8.021 (2010-08-30)
CHANGELOG.TXT:	- A new CID-0 'chinese' font was added for traditional Chinese.
CHANGELOG.TXT:	- Bug #3054287 'Inner tags are ignored due to "align" attribute' was fixed.
CHANGELOG.TXT:5.8.020 (2010-08-26)
CHANGELOG.TXT:	- CSS "catch-all" class selector is now supported.
CHANGELOG.TXT:5.8.019 (2010-08-26)
CHANGELOG.TXT:	- XObject Templates now includes support for links and annotations.
CHANGELOG.TXT:	- A problem related to link alignment on cell was fixed.
CHANGELOG.TXT:	- A problem related to SVG styles was fixed.
CHANGELOG.TXT:5.8.018 (2010-08-25)
CHANGELOG.TXT:	- Method getNumberOfColumns() was added.
CHANGELOG.TXT:	- A problem related to table header was fixed.
CHANGELOG.TXT:	- Method getSVGTransformMatrix() was fixed to apply SVG transformations in the correct order.
CHANGELOG.TXT:	- SVG support was improved and several bugs were fixed.
CHANGELOG.TXT:5.8.017 (2010-08-25)
CHANGELOG.TXT:	- This version includes support for XObject Templates (see the new example n. 62).
CHANGELOG.TXT:	- Methods starttemplate(), endTemplate() and printTemplate() were added (see the new example n. 62).
CHANGELOG.TXT:5.8.016 (2010-08-24)
CHANGELOG.TXT:	- Alignment problem on write2DBarcode was fixed.
CHANGELOG.TXT:5.8.015 (2010-08-24)
CHANGELOG.TXT:	- A problem arose with the latest bugfix was fixed.
CHANGELOG.TXT:5.8.014 (2010-08-23)
CHANGELOG.TXT:	- Method _getxobjectdict() was added for better compatibility with external extensions.
CHANGELOG.TXT:	- A bug related to radiobuttons was fixed.
CHANGELOG.TXT:	- Bug #3051509 "new line after punctuation marks" was fixed (partially).
CHANGELOG.TXT:5.8.013 (2010-08-23)
CHANGELOG.TXT:	- SVG support for 'direction' property was added.
CHANGELOG.TXT:	- A problem on default width calculation for linear barcodes was fixed.
CHANGELOG.TXT:	- New option was added to write1DBarcode() method to improve alignments (see example n. 27).
CHANGELOG.TXT:	- Bug #3050896 "Nested HTML tables: styles are not applied" was fixed.
CHANGELOG.TXT:	- Method _putresourcedict() was improved to include external XObject templates.
CHANGELOG.TXT:5.8.012 (2010-08-22)
CHANGELOG.TXT:	- Support for SVG 'text-anchor' property was added.
CHANGELOG.TXT:5.8.011 (2010-08-21)
CHANGELOG.TXT:	- Method write1DBarcode() was improved to be backward compatible (check the new example n. 27).
CHANGELOG.TXT:	- Support for CSS width and height properties on images were added.
CHANGELOG.TXT:5.8.010 (2010-08-20)
CHANGELOG.TXT:	- Documentation of unhtmlentities() was fixed.
CHANGELOG.TXT:	- The 'fitwidth' option was added and border color problem was fixed on write1DBarcode() method (check the example n. 27).
CHANGELOG.TXT:5.8.009 (2010-08-20)
CHANGELOG.TXT:	- Internal object numbering was improved.
CHANGELOG.TXT:	- Some errors in object encryption were fixed.
CHANGELOG.TXT:5.8.008 (2010-08-19)
CHANGELOG.TXT:	- Method write1DBarcode() was changed, check the example n. 27.
CHANGELOG.TXT:	- Method Footer() was changed to account for barcode changes.
CHANGELOG.TXT:	- Automatic calculation of K_PATH_URL constant was fixed on configuration file.
CHANGELOG.TXT:	- Method setEqualColumns() was fixed for $width=0 case.
CHANGELOG.TXT:	- Method AddTOC() was fixed for multipage and multicolumn modes.
CHANGELOG.TXT:	- Better support for SVG "font-family" property.
CHANGELOG.TXT:	- A problem on default Page Zoom mode was fixed.
CHANGELOG.TXT:	- Several Annotation bugs were fixed.
CHANGELOG.TXT:5.8.007 (2010-08-18)
CHANGELOG.TXT:	- A bug affecting HTML tables was fixed.
CHANGELOG.TXT:	- Bug #3047500 "SVG not rendering paths properly" was fixed.
CHANGELOG.TXT:5.8.006 (2010-08-17)
CHANGELOG.TXT:	- A bug affecting HTML table nesting was fixed.
CHANGELOG.TXT:5.8.005 (2010-08-17)
CHANGELOG.TXT:	- A bug affecting the HTML 'select' tag in certain conditions was fixed.
CHANGELOG.TXT:5.8.004 (2010-08-17)
CHANGELOG.TXT:	- Better support for HTML "font-family" property.
CHANGELOG.TXT:	- A bug related to HTML multicolumn was fixed.
CHANGELOG.TXT:5.8.003 (2010-08-16)
CHANGELOG.TXT:	- Better support for HTML "font-family" property.
CHANGELOG.TXT:5.8.002 (2010-08-14)
CHANGELOG.TXT:	- HTML alignments were improved
CHANGELOG.TXT:	- IMPORTANT: Default regular expression to find spaces has been changed to exclude the non-breaking-space (160 DEC- A0 HEX). If you are using setSpacesRE() method, please read the new documentation.
CHANGELOG.TXT:	- Example n. 1 was updated.
CHANGELOG.TXT:5.8.001 (2010-08-12)
CHANGELOG.TXT:	- Bug #3043650 "subsetchars incorrectly cached" was fixed.
CHANGELOG.TXT:5.8.000 (2010-08-11)
CHANGELOG.TXT:	- A control to avoid bookmarking page 0 was added.
CHANGELOG.TXT:	- addTOC() method now includes support for multicolumn mode.
CHANGELOG.TXT:	- Support for tables in multicolumn mode was improved.
CHANGELOG.TXT:	- Example n.10 was updated.
CHANGELOG.TXT:	- All trimming functions were replaced with stringLeftTrim(), stringRightTrim() and stringTrim().
CHANGELOG.TXT:	- HTML alignments were improved.
CHANGELOG.TXT:------------------------------------------------------------
CHANGELOG.TXT:5.7.003 (2010-08-08)
CHANGELOG.TXT:	- Bug #3041263 "php source ending is bad" was fixed (all PHP files were updated, including fonts).
CHANGELOG.TXT:5.7.002 (2010-08-06)
CHANGELOG.TXT:	- Methods copyPage(), movePage() and deletePage() were changed to account for internal markings.
CHANGELOG.TXT:5.7.001 (2010-08-05)
CHANGELOG.TXT:	- Bug #3040105 "Broken PDF when using TOC (example 45)" was fixed.
CHANGELOG.TXT:5.7.000 (2010-08-03)
CHANGELOG.TXT:	- CSS borders are now supported for HTML tables and other block tags (see example n. 61);
CHANGELOG.TXT:	- Cell borders were improved (see example n. 57);
CHANGELOG.TXT:	- Minor bugs were fixed.
CHANGELOG.TXT:------------------------------------------------------------
CHANGELOG.TXT:5.6.000 (2010-07-31)
CHANGELOG.TXT:	- A bug with object IDs was fixes.
CHANGELOG.TXT:	- Performances were improved.
CHANGELOG.TXT:------------------------------------------------------------
CHANGELOG.TXT:5.5.015 (2010-07-29)
CHANGELOG.TXT:	- Automatic fix for unclosed self-closing tag.
CHANGELOG.TXT:	- Support for deprecated 's' and 'strike' tags was added.
CHANGELOG.TXT:	- Empty list items problem was fixed.
CHANGELOG.TXT:5.5.014 (2010-07-15)
CHANGELOG.TXT:	- Support for external images was improved.
CHANGELOG.TXT:5.5.013 (2010-07-14)
CHANGELOG.TXT:	- Bug #3029338 "FI and FO output destination filename bug" was fixed (previous fix was wrong).
CHANGELOG.TXT:5.5.012 (2010-07-14)
CHANGELOG.TXT:	- Bug #3029310 "Font baseline inconsistencies with line-height and font-size" was fixed.
CHANGELOG.TXT:	- Bug #3029338 "FI and FO output destination filename bug" was fixed.
CHANGELOG.TXT:5.5.011 (2010-07-09)
CHANGELOG.TXT:	- Support for multiple CSS classes was added.
CHANGELOG.TXT:	- The method getColumn() was added to return the current column number.
CHANGELOG.TXT:	- Some regular Expressions were fixed to be more compatible with UTF-8.
CHANGELOG.TXT:5.5.010 (2010-07-06)
CHANGELOG.TXT:	- Bug item #3025772 "Borders in all image functions are still flawed" was fixed.
CHANGELOG.TXT:5.5.009 (2010-07-05)
CHANGELOG.TXT:	- A problem related to last page footer was fixed.
CHANGELOG.TXT:	- Image alignments and fit-on-page features were improved.
CHANGELOG.TXT:5.5.008 (2010-07-02)
CHANGELOG.TXT:	- A problem on table header alignment in booklet mode was fixed.
CHANGELOG.TXT:	- Default graphic vars are now applied for setHeader();
CHANGELOG.TXT:5.5.007 (2010-07-02)
CHANGELOG.TXT:	- Attribute "readonly" was added to input and textarea form fields.
CHANGELOG.TXT:	- Vertical alignment feature was added on MultiCell() method only for simple text mode (see example n. 5).
CHANGELOG.TXT:	- Text-Fit feature was added on MultiCell() method only for simple text mode (see example n. 5).
CHANGELOG.TXT:5.5.006 (2010-06-29)
CHANGELOG.TXT:	- getStringHeight() and getNumLines() methods were fixed.
CHANGELOG.TXT:5.5.005 (2010-06-28)
CHANGELOG.TXT:	- Bug #3022170 "getFontDescent() does not return correct descent value" was fixed.
CHANGELOG.TXT:	- Some problems with multicolumn mode were fixed.
CHANGELOG.TXT:5.5.004 (2010-06-27)
CHANGELOG.TXT:	- Bug #3021803 "SVG Border" was fixed.
CHANGELOG.TXT:5.5.003 (2010-06-26)
CHANGELOG.TXT:	- On Write() method, blank lines at the beginning of a page or column are now automatically removed.
CHANGELOG.TXT:5.5.002 (2010-06-24)
CHANGELOG.TXT:	- ToUnicode Identity-H name was replaced with a full CMap (to avoid preflight syntax error).
CHANGELOG.TXT:	- Bug #3020638 "str_split() not available in php4" was fixed.
CHANGELOG.TXT:	- Bug #3020665 "file_get_contents() too many parameters for php4" was fixed.
CHANGELOG.TXT:5.5.001 (2010-06-23)
CHANGELOG.TXT:	- A problem on image streams was fixed.
CHANGELOG.TXT:5.5.000 (2010-06-22)
CHANGELOG.TXT:	- Several PDF syntax errors (and related bugs) were fixed.
CHANGELOG.TXT:	- Bug #3019090 "/Length values are wrong if AES encryption is used" was fixed.
CHANGELOG.TXT:------------------------------------------------------------
CHANGELOG.TXT:5.4.003 (2010-06-19)
CHANGELOG.TXT:	- A problem related to page boxes was fixed.
CHANGELOG.TXT:	- Bug #3016920 "Font subsetting issues when editing pdf" was partially fixed (Note that flattening transparency layers is currently incompatible with TrueTypeUnicode fonts).
CHANGELOG.TXT:5.4.002 (2010-06-18)
CHANGELOG.TXT:	- A problem related with setProtection() method was fixed.
CHANGELOG.TXT:5.4.001 (2010-06-18)
CHANGELOG.TXT:	- A problem related with setProtection() method was fixed.
CHANGELOG.TXT:5.4.000 (2010-06-18)
CHANGELOG.TXT:	- The method setSignatureAppearance() was added, check the example n. 52.
CHANGELOG.TXT:	- Several problems related to font subsetting were fixed.
CHANGELOG.TXT:------------------------------------------------------------
CHANGELOG.TXT:5.3.010 (2010-06-15)
CHANGELOG.TXT:	- Previous release was corrupted.
CHANGELOG.TXT:5.3.009 (2010-06-15)
CHANGELOG.TXT:	- Bug #3015934 "Bullets don't display correctly" was fixed.
CHANGELOG.TXT:5.3.008 (2010-06-13)
CHANGELOG.TXT:	- This version fixes some problems of SVG rasterization.
CHANGELOG.TXT:5.3.007 (2010-06-13)
CHANGELOG.TXT:	- This version improves SVG support.
CHANGELOG.TXT:5.3.006 (2010-06-10)
CHANGELOG.TXT:	- This version includes a change in uniqid calls for backward compatibility with PHP4.
CHANGELOG.TXT:5.3.005 (2010-06-09)
CHANGELOG.TXT:	- The method getPageSizeFromFormat() was changed to include all standard page formats (includes 281 page formats + variation).
CHANGELOG.TXT:5.3.004 (2010-06-08)
CHANGELOG.TXT:	- Bug #3013291 "HTML table cell width" was fixed.
CHANGELOG.TXT:	- Bug #3013294 "HTML table cell alignment" was fixed.
CHANGELOG.TXT:	- The columns widths of HTML tables are now inherited from the first row.
CHANGELOG.TXT:5.3.003 (2010-06-08)
CHANGELOG.TXT:	- Bug #3013102 "HTML table header misaligned after page break" was fixed.
CHANGELOG.TXT:5.3.002 (2010-06-07)
CHANGELOG.TXT:	- The methods setFontSubsetting() and setFontSubsetting() were added to control the default font subsetting mode (see example n. 1).
CHANGELOG.TXT:	- Bug #3012596 "Whitespace should not appeared after use Thai top characters" was fixed.
CHANGELOG.TXT:	- Examples n. 1, 14, and 54 were updated.
CHANGELOG.TXT:5.3.001 (2010-06-06)
CHANGELOG.TXT:	- Barcode PDF417 was improved to support Macro Code Blocks (see example n. 50).
CHANGELOG.TXT:5.3.000 (2010-06-05)
CHANGELOG.TXT:	- License was changed to GNU-LGPLv3 (see the updated LICENSE.TXT file).
CHANGELOG.TXT:	- PDF417 barcode support was added (check the example n. 50).
CHANGELOG.TXT:	- The method write2DBarcode() was improved (some parameters were added and other changed - check example n. 50).
CHANGELOG.TXT:------------------------------------------------------------
CHANGELOG.TXT:5.2.000 (2010-06-02)
CHANGELOG.TXT:	- IMPORTANT: Support for font subsetting was added by default to reduce the size of documents using large unicode font files.
CHANGELOG.TXT:	- The signature of the SetFont() and AddFont() methods were changed to include the font subsetting option (subsetting is applied by default).
CHANGELOG.TXT:	- Examples 14 and 54 were updated.
CHANGELOG.TXT:------------------------------------------------------------
CHANGELOG.TXT:5.1.002 (2010-05-27)
CHANGELOG.TXT:	- Bug #3007818 "SetAutoPageBreak fails with MultiCell" was fixed.
CHANGELOG.TXT:	- A bug related to MultiCell() minimun height was fixed.
CHANGELOG.TXT:5.1.001 (2010-05-26)
CHANGELOG.TXT:	- The problem of blank page after table was fixed.
CHANGELOG.TXT:5.1.000 (2010-05-25)
CHANGELOG.TXT:	- This version includes support for CSS (Cascading Style Sheets) (see example n. 61).
CHANGELOG.TXT:	- The convertHTMLColorToDec() method was improved.
CHANGELOG.TXT:------------------------------------------------------------
CHANGELOG.TXT:5.0.014 (2010-05-21)
CHANGELOG.TXT:	- A problem on color and style of HTML links was fixed.
CHANGELOG.TXT:	- A bug relative to gradients was fixed.
CHANGELOG.TXT:	- The getStringHeight() method was added and getNumLines() method was improved.
CHANGELOG.TXT:	- All examples were updated.
CHANGELOG.TXT:5.0.013 (2010-05-19)
CHANGELOG.TXT:	- A bug related to page-breaks and table cells was fixed.
CHANGELOG.TXT:5.0.012 (2010-05-19)
CHANGELOG.TXT:	- Page orientation bug was fixed.
CHANGELOG.TXT:	- The access to method setPageFormat() was changed to 'protected' because it is not intended to be directly called.
CHANGELOG.TXT:5.0.011 (2010-05-19)
CHANGELOG.TXT:	- Page orientation bug was fixed.
CHANGELOG.TXT:	- Bug #3003966 "Multiple columns and nested lists" was fixed.
CHANGELOG.TXT:5.0.010 (2010-05-17)
CHANGELOG.TXT:	- The methods setPageFormat(), setPageOrientation() and related methods were extended to include page boxes, page rotations and page transitions.
CHANGELOG.TXT:	- The method setPageBoxes() was added to set page boundaries (MediaBox, CropBox, BleedBox, TrimBox, ArtBox);
CHANGELOG.TXT:	- A bug relative to underline, overline and linethrough was fixed.
CHANGELOG.TXT:5.0.009 (2010-05-16)
CHANGELOG.TXT:	- Bug #3002381 "Multiple columns and nested lists" was fixed.
CHANGELOG.TXT:5.0.008 (2010-05-15)
CHANGELOG.TXT:	- Bug "Columns WriteHTML and Justification" was fixed.
CHANGELOG.TXT:5.0.007 (2010-05-14)
CHANGELOG.TXT:	- Bug #3001347 "Bug when using  WriteHTML with setEqualColumns()" was fixed.
CHANGELOG.TXT:	- Bug #3001505 "problem with sup and sub tags at the beginning of a line" was fixed.
CHANGELOG.TXT:5.0.006 (2010-05-13)
CHANGELOG.TXT:	- Length of hr tag was fixed.
CHANGELOG.TXT:	- An error on 2d barcode method was fixed.
CHANGELOG.TXT:5.0.005 (2010-05-12)
CHANGELOG.TXT:	- WARNING: The logic of permissions on the SetProtection() method has been inverted and extended (see example 16). Now you have to specify the features you want to block.
CHANGELOG.TXT:	- SetProtection() method was extended to support RSA and AES 128 encryption and public-keys (see example 16).
CHANGELOG.TXT:	- Bug #2999489 "setEqualColumns() and TOC uses wrong columns" was fixed (see the example 10).
CHANGELOG.TXT:5.0.004 (2010-05-10)
CHANGELOG.TXT:	- HTML line alignment when using sub and sup tags was fixed.
CHANGELOG.TXT:5.0.003 (2010-05-07)
CHANGELOG.TXT:	- Horizontal alignment was fixed for images and barcodes. Now the X coordinate is always relative to the left margin. Use GetAbsX() instead of GetX() to get the X relative to left margin.
CHANGELOG.TXT:	- Header() method was changed to account for new image alignment rules.
CHANGELOG.TXT:5.0.002 (2010-05-06)
CHANGELOG.TXT:	- Bookmark() and related methods were fixed to accept HTML code.
CHANGELOG.TXT:	- A problem on HTML links was fixed.
CHANGELOG.TXT:5.0.001 (2010-05-06)
CHANGELOG.TXT:	- Protected method _putstream was re-added for backward compatibility.
CHANGELOG.TXT:	- The following method were added to display HTML Table Of Content (see example n. 59):
CHANGELOG.TXT:5.0.000 (2010-05-05)
CHANGELOG.TXT:	- Method ImageSVG() was added to embedd SVG images (see example n. 58). Note that not all SVG images are supported.
CHANGELOG.TXT:	- Method setRasterizeVectorImages() was added to enable/disable rasterization for vector images via ImageMagick library.
CHANGELOG.TXT:	- Method RoundedRectXY() was added.
CHANGELOG.TXT:	- Method PieSectorXY() was added.
CHANGELOG.TXT:	- Gradient() method is now public and support new features.
CHANGELOG.TXT:	- Shading to transparency is now supported.
CHANGELOG.TXT:	- Image alignments were fixed.
CHANGELOG.TXT:	- Support for dynamic images were improved.
CHANGELOG.TXT:	- PDF_IMAGE_SCALE_RATIO has been changed to 1.25 for better compatibility with SVG.
CHANGELOG.TXT:	- RAW and RAW2 modes were added to 2D Barcodes (see example n. 50).
CHANGELOG.TXT:	- Automatic padding feature was added on barcodes (see examples n. 27 and 50).
CHANGELOG.TXT:	- Bug #2995003 "Reproduced thead bug" was fixed.
CHANGELOG.TXT:	- The Output() method now accepts FI and FD destinations to save the document on server before sending it to the client.
CHANGELOG.TXT:	- Ellipse() method was improved and fixed (see page 2 of example n. 12).
CHANGELOG.TXT:------------------------------------------------------------
CHANGELOG.TXT:4.9.018 (2010-04-21)
CHANGELOG.TXT:	- Bug item #2990356 "Current font size not respected with more than two HTML <p>" was fixed.
CHANGELOG.TXT:4.9.017 (2010-04-21)
CHANGELOG.TXT:	- Bug item #2990224 "Different behaviour for equivalent HTML strings" was fixed.
CHANGELOG.TXT:	- Bug item #2990314 "Dash is not appearing with SHY character" was fixed.
CHANGELOG.TXT:4.9.016 (2010-04-20)
CHANGELOG.TXT:	- An error on htmlcolors.php was fixed.
CHANGELOG.TXT:	- getImageFileType() method was improved.
CHANGELOG.TXT:	- GIF images with transparency are now better supported.
CHANGELOG.TXT:	- Automatic page orientation was improved.
CHANGELOG.TXT:4.9.015 (2010-04-20)
CHANGELOG.TXT:	- A new method copyPage() was added to clone pages (see example n. 44).
CHANGELOG.TXT:	- Support for text overline was added.
CHANGELOG.TXT:	- Underline and linethrough methods were fixed.
CHANGELOG.TXT:	- Bug #2989058 "SHY character causes unnecessary word-wrapping" was fixed.
CHANGELOG.TXT:4.9.014 (2010-04-18)
CHANGELOG.TXT:	- Bug item #2988845 was fixed.
CHANGELOG.TXT:4.9.013 (2010-04-15)
CHANGELOG.TXT:	- Image() and ImageEPS() methods were fixed and improved; $fitonpage parameter was added.
CHANGELOG.TXT:4.9.012 (2010-04-12)
CHANGELOG.TXT:	- The hyphenateText() method was added to automatically hyphenate text (see example n. 46).
CHANGELOG.TXT:4.9.011 (2010-04-07)
CHANGELOG.TXT:	- Vertical alignments for Cell() method were improved (see example n. 57).
CHANGELOG.TXT:4.9.010 (2010-04-06)
CHANGELOG.TXT:	- Signature of Cell() method now includes new parameters for vertical alignment (see example n. 57).
CHANGELOG.TXT:	- Text() method was extended to include all Cell() parameters.
CHANGELOG.TXT:	- HTML line alignment procedure was changed to fix some bugs.
CHANGELOG.TXT:4.9.009 (2010-04-05)
CHANGELOG.TXT:	- Text() method was fixed for backward compatibility.
CHANGELOG.TXT:4.9.008 (2010-04-03)
CHANGELOG.TXT:	- Additional line space after table header was removed.
CHANGELOG.TXT:	- Support for HTML lists in multicolumn mode was added.
CHANGELOG.TXT:	- The method setTextRenderingMode() was added to set text rendering modes (see the example n. 26).
CHANGELOG.TXT:	- The following HTML attributes were added to set text rendering modes (see the example n. 26): stroke, strokecolor, fill.
CHANGELOG.TXT:4.9.007 (2010-04-03)
CHANGELOG.TXT:	- Font Descent computation was fixed (patch #2981441).
CHANGELOG.TXT:4.9.006 (2010-04-02)
CHANGELOG.TXT:	- The constant K_TCPDF_CALLS_IN_HTML was added on configuration file to enable/disable the ability to call TCPDF methods in HTML.
CHANGELOG.TXT:	- The usage of tcpdf tag in HTML mode was changed to remove the possible security flaw offered by the eval() function (thanks to Matthias Hecker for spotting this security problem). See the new example n. 49 for further information.
CHANGELOG.TXT:4.9.005 (2010-04-01)
CHANGELOG.TXT:	- Bug# 2980354 "Wrong File attachment description with security" was fixed.
CHANGELOG.TXT:	- Several problems with HTML line alignment were fixed.
CHANGELOG.TXT:	- The constant K_THAI_TOPCHAR was added on configuration file to enable/disable the special procedure used to avoid the overlappind of symbols on Thai language.
CHANGELOG.TXT:	- A problem with font name directory was fixed.
CHANGELOG.TXT:	- A bug on _destroy() method was fixed.
CHANGELOG.TXT:4.9.004 (2010-03-31)
CHANGELOG.TXT:	- Patch #979681 "GetCharWidth - default character width" was applied (bugfix).
CHANGELOG.TXT:4.9.003 (2010-03-30)
CHANGELOG.TXT:	- Problem of first <br /> on multiple columns was fixed.
CHANGELOG.TXT:	- HTML line alignment was fixed.
CHANGELOG.TXT:	- A QR-code bug was fixed.
CHANGELOG.TXT:4.9.002 (2010-03-29)
CHANGELOG.TXT:	- Patch #2978349 "$ignore_min_height is ignored in function Cell()" was applied.
CHANGELOG.TXT:	- Bug #2978607 "2D Barcodes are wrong" was fixed.
CHANGELOG.TXT:	- A problem with HTML block tags was fixed.
CHANGELOG.TXT:	- Artificial italic for CID-0 fonts was added.
CHANGELOG.TXT:	- Several multicolumn bugs were fixed.
CHANGELOG.TXT:	- Support for HTML tables on multicolumn was added.
CHANGELOG.TXT:4.9.001 (2010-03-28)
CHANGELOG.TXT:	- QR Code minor bug was fixed.
CHANGELOG.TXT:	- Multicolumn mode was added (see the new example n. 10).
CHANGELOG.TXT:	- The following methods were added: setEqualColumns(), setColumnsArray(), selectColumn().
CHANGELOG.TXT:	- Thai diacritics support were changed (note that this is incompatible with html justification).
CHANGELOG.TXT:4.9.000 (2010-03-27)
CHANGELOG.TXT:	- QR Code (2D barcode) support was added (see example n. 50).
CHANGELOG.TXT:	- The following methods were added to print crop and registration marks (see example n. 56): colorRegistrationBar(), cropMark(), registrationMark().
CHANGELOG.TXT:	- Limited support for CSS line-height property was added.
CHANGELOG.TXT:	- Gradient method now supports Gray, RGB and CMYK space color.
CHANGELOG.TXT:	- Example n. 51 was updated.
CHANGELOG.TXT:	- Vertical alignment of font inside cell was fixed.
CHANGELOG.TXT:	- Support for multiple Thai diacritics was added.
CHANGELOG.TXT:	- Bug item #2974929 "Duplicate case values" was fixed.
CHANGELOG.TXT:	- Bug item #2976729 "File attachment not working with security" was fixed.
CHANGELOG.TXT:------------------------------------------------------------
CHANGELOG.TXT:4.8.039 (2010-03-20)
CHANGELOG.TXT:	- Problems related to custom locale settings were fixed.
CHANGELOG.TXT:	- Problems related to HTML on Header and Footer were fixed.
CHANGELOG.TXT:4.8.038 (2010-03-13)
CHANGELOG.TXT:	- Various bugs related to page-break in HTML mode were fixed.
CHANGELOG.TXT:	- Bug item #2968974 "Another <thead> pagebreak problem" was fixed.
CHANGELOG.TXT:	- Bug item #2969276 "justification problem" was fixed.
CHANGELOG.TXT:	- Bug item #2969289 "bug when using justified text and custom headers" was fixed.
CHANGELOG.TXT:	- Images are now automatically resized to be contained on the page.
CHANGELOG.TXT:	- Some HTML line alignments were fixed.
CHANGELOG.TXT:	- Signature of AddPage() and SetMargins() methods were changed to include an option to set default page margins.
CHANGELOG.TXT:4.8.037 (2010-03-03)
CHANGELOG.TXT:	- Bug item #2962068 was fixed.
CHANGELOG.TXT:	- Bug item #2967017 "Problems with <thead> and pagebreaks" was fixed.
CHANGELOG.TXT:	- Bug item #2967023 "table header lost with pagebreak" was fixed.
CHANGELOG.TXT:	- Bug item #2967032 "Header lost with nested tables" was fixed.
CHANGELOG.TXT:4.8.036 (2010-02-24)
CHANGELOG.TXT:	- Automatic page break for HTML images was improved.
CHANGELOG.TXT:	- Example 10 was updated.
CHANGELOG.TXT:	- Japanese was removed from example 8 because the freeserif font doesn't contain japanese (you can display it using arialunicid0 font).
CHANGELOG.TXT:4.8.035 (2010-02-23)
CHANGELOG.TXT:	- Automatic page break for HTML images was added.
CHANGELOG.TXT:	- Support for multicolumn HTML was added (example 10 was updated).
CHANGELOG.TXT:4.8.034 (2010-02-17)
CHANGELOG.TXT:	- Language files were updated.
CHANGELOG.TXT:4.8.033 (2010-02-12)
CHANGELOG.TXT:	- A bug related to protection mode with links was fixed.
CHANGELOG.TXT:4.8.032 (2010-02-04)
CHANGELOG.TXT:	- A bug related to $maxh parameter on Write() and MultiCell() was fixed.
CHANGELOG.TXT:	- Support for body tag was added.
CHANGELOG.TXT:4.8.031 (2010-01-30)
CHANGELOG.TXT:	- Bug item #2941589 "paragraph justify not working on some non-C locales" was fixed.
CHANGELOG.TXT:4.8.030 (2010-01-27)
CHANGELOG.TXT:	- Some text alignment cases were fixed.
CHANGELOG.TXT:4.8.029 (2010-01-27)
CHANGELOG.TXT:	- Bug item #2941057 "TOC Error in PDF File Output" was fixed.
CHANGELOG.TXT:	- Some text alignment cases were fixed.
CHANGELOG.TXT:4.8.028 (2010-01-26)
CHANGELOG.TXT:	- Text alignment for RTL mode was fixed.
CHANGELOG.TXT:4.8.027 (2010-01-25)
CHANGELOG.TXT:	- Bug item #2938412 "Table related problems - thead, nobr, table width" was fixed.
CHANGELOG.TXT:4.8.026 (2010-01-19)
CHANGELOG.TXT:	- The misspelled word "length" was replaced with "length" in some variables and comments.
CHANGELOG.TXT:4.8.025 (2010-01-18)
CHANGELOG.TXT:	- addExtGState() method was improved to reuse existing ExtGState objects.
CHANGELOG.TXT:4.8.024 (2010-01-15)
CHANGELOG.TXT:	- Justification mode for HTML was fixed (Bug item #2932470).
CHANGELOG.TXT:4.8.023 (2010-01-15)
CHANGELOG.TXT:	- Bug item #2932470 "Some HTML entities breaks justification" was fixed.
CHANGELOG.TXT:4.8.022 (2010-01-14)
CHANGELOG.TXT:	- Source code documentation was fixed.
CHANGELOG.TXT:4.8.021 (2010-01-03)
CHANGELOG.TXT:	- A Bug relative to Table Of Content index was fixed.
CHANGELOG.TXT:4.8.020 (2009-12-21)
CHANGELOG.TXT:	- Bug item #2918545 "Display problem of the first row of a table with larger font" was fixed.
CHANGELOG.TXT:	- A Bug relative to table rowspan mode was fixed.
CHANGELOG.TXT:4.8.019 (2009-12-16)
CHANGELOG.TXT:	- Bug item #2915684 "Image size" was fixed.
CHANGELOG.TXT:	- Bug item #2914995 "Image jpeg quality" was fixed.
CHANGELOG.TXT:	- The signature of the Image() method was changed (check the documentation for the $resize parameter).
CHANGELOG.TXT:4.8.018 (2009-12-15)
CHANGELOG.TXT:	- Bug item #2914352 "write error" was fixed.
CHANGELOG.TXT:4.8.017 (2009-11-27)
CHANGELOG.TXT:	- THEAD problem when table is used on header/footer was fixed.
CHANGELOG.TXT:	- A first line alignment on HTML justification was fixed.
CHANGELOG.TXT:	- Method getImageFileType() was added.
CHANGELOG.TXT:	- Images with unknown extension and type are now supported via ImageMagick PHP extension.
CHANGELOG.TXT:4.8.016 (2009-11-21)
CHANGELOG.TXT:	- Document Information Dictionary was fixed.
CHANGELOG.TXT:	- CSS attributes 'page-break-before', 'page-break-after' and 'page-break-inside' are now supported.
CHANGELOG.TXT:	- Problem of unclosed last page was fixed.
CHANGELOG.TXT:	- Problem of 'thead' unnecessarily repeated on the next page was fixed.
CHANGELOG.TXT:4.8.015 (2009-11-20)
CHANGELOG.TXT:	- A problem with some PNG transparency images was fixed.
CHANGELOG.TXT:	- Bug #2900762 "Sort issues in Bookmarks" was fixed.
CHANGELOG.TXT:	- Text justification was fixed for various modes: underline, strikeout and background.
CHANGELOG.TXT:4.8.014 (2009-11-04)
CHANGELOG.TXT:	- Bug item #2891316 "writeHTML, underlining replacing spaces" was fixed.
CHANGELOG.TXT:	- The handling of temporary RTL text direction mode was fixed.
CHANGELOG.TXT:4.8.013 (2009-10-26)
CHANGELOG.TXT:	- Bug item #2884729 "Problem with word-wrap and hyphen" was fixed.
CHANGELOG.TXT:4.8.012 (2009-10-23)
CHANGELOG.TXT:	- Table cell alignments for RTL booklet mode were fixed.
CHANGELOG.TXT:	- Images and barcode alignments for booklet mode were fixed.
CHANGELOG.TXT:4.8.011 (2009-10-22)
CHANGELOG.TXT:	- DejaVu fonts were updated to latest version.
CHANGELOG.TXT:4.8.010 (2009-10-21)
CHANGELOG.TXT:	- Bookmark for TOC page was added.
CHANGELOG.TXT:	- Signature of addTOC() method is changed.
CHANGELOG.TXT:	- Bookmarks are now automatically sorted by page and Y position.
CHANGELOG.TXT:	- Example n. 45 was updated.
CHANGELOG.TXT:	- Example n. 55 was added to display all charactes available on core fonts.
CHANGELOG.TXT:4.8.009 (2009-09-30)
CHANGELOG.TXT:	- Compatibility with PHP 5.3 was improved.
CHANGELOG.TXT:	- All examples were updated.
CHANGELOG.TXT:	- Index file for examples was added.
CHANGELOG.TXT:4.8.008 (2009-09-29)
CHANGELOG.TXT:	- Example 49 was updated.
CHANGELOG.TXT:	- Underline and linethrough now works with cell stretching mode.
CHANGELOG.TXT:4.8.007 (2009-09-23)
CHANGELOG.TXT:	- Infinite loop problem caused by nobr attribute was fixed.
CHANGELOG.TXT:4.8.006 (2009-09-23)
CHANGELOG.TXT:	- Bug item #2864522 "No images if DOCUMENT_ROOT=='/'" was fixed.
CHANGELOG.TXT:	- Support for text-indent CSS attribute was added.
CHANGELOG.TXT:	- Method rollbackTransaction() was changed to support self-reassignment of previous object (check source code documentation).
CHANGELOG.TXT:	- Support for the HTML "nobr" attribute was added to avoid splitting a table or a table row on two pages (i.e.: <tr nobr="true">...</tr>).
CHANGELOG.TXT:4.8.005 (2009-09-17)
CHANGELOG.TXT:	- A bug relative to multiple transformations and annotations was fixed.
CHANGELOG.TXT:4.8.004 (2009-09-16)
CHANGELOG.TXT:	- A bug on _putannotsrefs() method was fixed.
CHANGELOG.TXT:4.8.003 (2009-09-15)
CHANGELOG.TXT:	- Bug item #2858754 "Division by zero" was fixed.
CHANGELOG.TXT:	- A bug relative to HTML list items was fixed.
CHANGELOG.TXT:	- A bug relative to form fields on multiple pages was fixed.
CHANGELOG.TXT:	- PolyLine() method was added (see example n. 12).
CHANGELOG.TXT:	- Signature of Polygon() method was changed.
CHANGELOG.TXT:4.8.002 (2009-09-12)
CHANGELOG.TXT:	- A problem related to CID-0 fonts offset was fixed: if the $cw[1] entry on the CID-0 font file is not defined, then a CID keys offset is introduced.
CHANGELOG.TXT:4.8.001 (2009-09-09)
CHANGELOG.TXT:	- The appearance streams (AP) for anotations form fields was fixed (see examples n. 14 and 54).
CHANGELOG.TXT:	- Radiobuttons were fixed.
CHANGELOG.TXT:4.8.000 (2009-09-07)
CHANGELOG.TXT:	- This version includes some support for Forms fields (see example n. 14) and XHTML forms (see example n. 54).
CHANGELOG.TXT:	- The following methods were changed to work without JavaScript: TextField(), RadioButton(), ListBox(), ComboBox(), CheckBox(), Button().
CHANGELOG.TXT:	- Support for Widget annotations was improved.
CHANGELOG.TXT:	- Alignment of annotation objects was fixed (examples 36 and 41 were updated).
CHANGELOG.TXT:	- addJavascriptObject() method was added.
CHANGELOG.TXT:	- Signature of Image() method was changed.
CHANGELOG.TXT:	- htmlcolors.php file was updated.
CHANGELOG.TXT:------------------------------------------------------------
CHANGELOG.TXT:4.7.003 (2009-09-03)
CHANGELOG.TXT:	- Support for TCPDF methods on HTML was improved (see example n. 49).
CHANGELOG.TXT:4.7.002 (2009-09-02)
CHANGELOG.TXT:	- Bug item #2848892 "writeHTML + table: Gaps between rows" was fixed.
CHANGELOG.TXT:	- JavaScript support was fixed (see example n. 53).
CHANGELOG.TXT:4.7.001 (2009-08-30)
CHANGELOG.TXT:	- The Polygon() and Arrow() methods were fixed and improved (see example n. 12).
CHANGELOG.TXT:4.7.000 (2009-08-29)
CHANGELOG.TXT:	- This is a major release.
CHANGELOG.TXT:	- Some procedures were internally optimized.
CHANGELOG.TXT:	- The problem of mixed signature and annotations was fixed (example n. 52).
CHANGELOG.TXT:4.6.030 (2009-08-29)
CHANGELOG.TXT:	- IMPORTANT: percentages on table cell widths are now relative to the full table width (as in standard HTML).
CHANGELOG.TXT:	- Various minor bugs were fixed.
CHANGELOG.TXT:	- Example n. 52 (digital signature) was updated.
CHANGELOG.TXT:4.6.029 (2009-08-26)
CHANGELOG.TXT:	- PHP4 version was fixed.
CHANGELOG.TXT:4.6.028 (2009-08-25)
CHANGELOG.TXT:	- Signature algorithm was finally fixed (see example n. 52).
CHANGELOG.TXT:4.6.027 (2009-08-24)
CHANGELOG.TXT:	- TCPDF now supports unembedded TrueTypeUnicode Fonts (just comment the $file entry on the fonts' php file.
CHANGELOG.TXT:4.6.026 (2009-08-21)
CHANGELOG.TXT:	- Bug #2841693 "Problem with MultiCell and ishtml and justification" was fixed.
CHANGELOG.TXT:	- Signature functions were improved but not yet fixed (tcpdf.crt and example n. 52 were updated).
CHANGELOG.TXT:4.6.025 (2009-08-17)
CHANGELOG.TXT:	- Carriage returns (\r) were removed from source code.
CHANGELOG.TXT:	- Problem related to set_magic_quotes_runtime() depracated was fixed.
CHANGELOG.TXT:4.6.024 (2009-08-07)
CHANGELOG.TXT:	- Bug item #2833556 "justification using other units than mm" was fixed.
CHANGELOG.TXT:	- Documentation was fixed/updated.
CHANGELOG.TXT:4.6.023 (2009-08-02)
CHANGELOG.TXT:	- Bug item #2830537 "MirrorH can show mask for transparent PNGs" was fixed.
CHANGELOG.TXT:4.6.022 (2009-07-24)
CHANGELOG.TXT:	- A bug relative to single line printing when using WriteHTMLCell() was fixed.
CHANGELOG.TXT:	- Signature support were improved but is still experimental.
CHANGELOG.TXT:	- Fonts Free and Dejavu were updated to latest versions.
CHANGELOG.TXT:4.6.021 (2009-07-20)
CHANGELOG.TXT:	- Bug item #2824015 "XHTML Ampersand &amp; in hyperlink bug" was fixed.
CHANGELOG.TXT:	- Bug item #2824036 "Image as hyperlink in table, text displaced at page break" was fixed.
CHANGELOG.TXT:	- Links alignment on justified text was fixed.
CHANGELOG.TXT:	- Unicode "\u" modifier was added to re_spaces variable by default.
CHANGELOG.TXT:4.6.020 (2009-07-16)
CHANGELOG.TXT:	- Bug item #2821921 "issue in example 18" was fixed.
CHANGELOG.TXT:	- Signature of SetRTL() method was changed.
CHANGELOG.TXT:4.6.019 (2009-07-13)
CHANGELOG.TXT:	- Bug item #2820703 "xref table broken" was fixed.
CHANGELOG.TXT:4.6.018 (2009-07-10)
CHANGELOG.TXT:	- Bug item #2819319 "Text over text" was fixed.
CHANGELOG.TXT:	- Method Arrow() was added to print graphic arrows (example 12 was updated).
CHANGELOG.TXT:4.6.017 (2009-07-05)
CHANGELOG.TXT:	- Bug item #2816079 "Example 48 not working" was fixed.
CHANGELOG.TXT:	- The signature of the checkPageBreak() was changed. The parameter $addpage was added to turn off the automatic page creation.
CHANGELOG.TXT:4.6.016 (2009-06-16)
CHANGELOG.TXT:	- Method setSpacesRE() was added to set the regular expression used for detecting withespaces or word separators. If you are using chinese, try: setSpacesRE('/[\s\p{Z}\p{Lo}]/');, otherwise you can use setSpacesRE('/[\s\p{Z}]/');
CHANGELOG.TXT:	- The method _putinfo() now automatically fills the metadata with '?' in case of empty string.
CHANGELOG.TXT:4.6.015 (2009-06-11)
CHANGELOG.TXT:	- Bug #2804667 "word wrap bug" was fixed.
CHANGELOG.TXT:4.6.014 (2009-06-04)
CHANGELOG.TXT:	- Bug #2800931 "Table thead tag bug" was fixed.
CHANGELOG.TXT:	- A bug related to <pre> tag was fixed.
CHANGELOG.TXT:4.6.013 (2009-05-28)
CHANGELOG.TXT:	- List bullets position was fixed for RTL languages.
CHANGELOG.TXT:4.6.012 (2009-05-23)
CHANGELOG.TXT:	- setUserRights() method doesn't work anymore unless you call the setSignature() method with the Adobe private key!
CHANGELOG.TXT:4.6.011 (2009-05-18)
CHANGELOG.TXT:	- Signature of the Image() method was changed to include the new $fitbox parameter (see source code documentation).
CHANGELOG.TXT:4.6.010 (2009-05-17)
CHANGELOG.TXT:	- Image() method was improved: now is possible to specify the maximum dimensions for a constraint box defined by $w and $h parameters, and setting the $resize parameter to null.
CHANGELOG.TXT:	- <tcpdf> tag indent problem was fixed.
CHANGELOG.TXT:	- $y parameter was added to checkPageBreak() method.
CHANGELOG.TXT:	- Bug n. 2791773 "writeHTML" was fixed.
CHANGELOG.TXT:4.6.009 (2009-05-13)
CHANGELOG.TXT:	- xref table for embedded files was fixed.
CHANGELOG.TXT:4.6.008 (2009-05-07)
CHANGELOG.TXT:	- setSignature() method was improved (but is still experimental).
CHANGELOG.TXT:	- Example n. 52 was added.
CHANGELOG.TXT:4.6.007 (2009-05-05)
CHANGELOG.TXT:	- Bug #2786685 "writeHtmlCell and <br /> in custom footer" was fixed.
CHANGELOG.TXT:	- Table header repeating bug was fixed.
CHANGELOG.TXT:	- Some newlines and tabs are now automatically removed from HTML strings.
CHANGELOG.TXT:4.6.006 (2009-04-28)
CHANGELOG.TXT:	- Support for "<a name="...">...</a>" was added.
CHANGELOG.TXT:	- By default TCPDF requires PCRE Unicode support turned on but now works also without it (with limited ability to detect some Unicode blank spaces).
CHANGELOG.TXT:4.6.005 (2009-04-25)
CHANGELOG.TXT:	- Points (pt) conversion in getHTMLUnitToUnits() was fixed.
CHANGELOG.TXT:	- Default tcpdf.pem certificate file was added.
CHANGELOG.TXT:	- Experimental support for signing document was added but it is not yet completed (some help is needed - I think that the calculation of the ByteRange is OK and the problem is on the signature calculation).
CHANGELOG.TXT:4.6.004 (2009-04-23)
CHANGELOG.TXT:	- Method deletePage() was added to delete pages (see example n. 44).
CHANGELOG.TXT:4.6.003 (2009-04-21)
CHANGELOG.TXT:	- The caching mechanism of the UTF8StringToArray() method was fixed.
CHANGELOG.TXT:4.6.002 (2009-04-20)
CHANGELOG.TXT:	- Documentation of rollbackTransaction() method was fixed.
CHANGELOG.TXT:	- The setImageScale() and getImageScale() methods now set and get the adjusting parameter used by pixelsToUnits() method.
CHANGELOG.TXT:	- HTML images now support other units of measure than pixels (getHTMLUnitToUnits() is now used instead of pixelsToUnits()).
CHANGELOG.TXT:	- WARNING: PDF_IMAGE_SCALE_RATIO has been changed by default to 1.
CHANGELOG.TXT:4.6.001 (2009-04-17)
CHANGELOG.TXT:	- Spaces between HTML block tags are now automatically removed.
CHANGELOG.TXT:	- The bug related to cMargin changes between tables was fixed.
CHANGELOG.TXT:4.6.000 (2009-04-16)
CHANGELOG.TXT:	- WARNING: THIS VERSION CHANGES THE BEHAVIOUR OF $x and $y parameters for several TCPDF methods:
CHANGELOG.TXT:	- Some error caused by 'empty' function were fixed.
CHANGELOG.TXT:	- Default color for convertHTMLColorToDec() method was changed to white and the return value for invalid color is false.
CHANGELOG.TXT:	- HTML on footer bug was fixed.
CHANGELOG.TXT:	- The following examples were fixed: 5,7,10,17,19,20,21,33,42,43.
CHANGELOG.TXT:4.5.043 (2009-04-15)
CHANGELOG.TXT:	- Barcode class (barcode.php) was extended to include new linear barcode types (see example n. 27):
CHANGELOG.TXT:		C39 : CODE 39 - ANSI MH10.8M-1983 - USD-3 - 3 of 9
CHANGELOG.TXT:		C93 : CODE 93 - USS-93
CHANGELOG.TXT:		EAN2 : 2-Digits UPC-Based Extension
CHANGELOG.TXT:		EAN5 : 5-Digits UPC-Based Extension
CHANGELOG.TXT:		UPCA : UPC-A
CHANGELOG.TXT:		UPCE : UPC-E
CHANGELOG.TXT:		RMS4CC : RMS4CC (Royal Mail 4-state Customer Code) - CBC (Customer Bar Code)
CHANGELOG.TXT:		KIX : KIX (Klant index - Customer index)
CHANGELOG.TXT:		IMB: Intelligent Mail Barcode - Onecode - USPS-B-3200 (NOTE: requires BCMath PHP extension)
CHANGELOG.TXT:		PHARMA2T : PHARMACODE TWO-TRACKS
CHANGELOG.TXT:4.5.042 (2009-04-15)
CHANGELOG.TXT:	- Method Write() was fixed for the strings containing only zero value.
CHANGELOG.TXT:4.5.041 (2009-04-14)
CHANGELOG.TXT:	- Barcode methods were fixed.
CHANGELOG.TXT:4.5.040 (2009-04-14)
CHANGELOG.TXT:	- Method Write() was fixed to handle empty strings.
CHANGELOG.TXT:4.5.039 (2009-04-11)
CHANGELOG.TXT:	- Support for linear barcodes was extended (see example n. 27 and barcodes.php documentation).
CHANGELOG.TXT:4.5.038 (2009-04-10)
CHANGELOG.TXT:	- Write() method was improved to support separators for Japanese, Korean, Chinese Traditional and Chinese Simplified.
CHANGELOG.TXT:4.5.037 (2009-04-09)
CHANGELOG.TXT:	- General performances were improved.
CHANGELOG.TXT:	- The signature of the method utf8Bidi() was changed.
CHANGELOG.TXT:	- The method UniArrSubString() was added.
CHANGELOG.TXT:	- Experimental support for 2D barcodes were added (see example n. 50 and 2dbarcodes.php class).
CHANGELOG.TXT:4.5.036 (2009-04-03)
CHANGELOG.TXT:	- TCPDF methods can be called inside the HTML code (see example n. 49).
CHANGELOG.TXT:	- All tag attributes, such as <p align="center"> must be enclosed within double quotes.
CHANGELOG.TXT:4.5.035 (2009-03-28)
CHANGELOG.TXT:	- Bug #2717436 "writeHTML rowspan problem (continued)" was fixed.
CHANGELOG.TXT:	- Bug #2719090 "writeHTML fix follow up" was fixed.
CHANGELOG.TXT:	- The method _putuserrights() was changed to avoid Adobe Reader 9.1 crash. This broken the 'trick' that was used to display forms in Acrobat Reader.
CHANGELOG.TXT:4.5.034 (2009-03-27)
CHANGELOG.TXT:	- Bug #2716914 "Bug writeHTML of a table in body and footer related with pb" was fixed.
CHANGELOG.TXT:	- Bug #2717056 ] "writeHTML problem when setting tr style" was fixed.
CHANGELOG.TXT:	- The signature of the Cell() method was changed.
CHANGELOG.TXT:4.5.033 (2009-03-27)
CHANGELOG.TXT:	- The support for rowspan/colspan on HTML tables was improved (see example n. 48).
CHANGELOG.TXT:4.5.032 (2009-03-23)
CHANGELOG.TXT:	- setPrintFooter(false) bug was fixed.
CHANGELOG.TXT:4.5.031 (2009-03-20)
CHANGELOG.TXT:	- Table header support was extended to multiple pages.
CHANGELOG.TXT:4.5.030 (2009-03-20)
CHANGELOG.TXT:	- thead tag is now supported on HTML tables (header rows are repeated after page breaks).
CHANGELOG.TXT:	- The startTransaction() was improved to autocommit.
CHANGELOG.TXT:	- List bullets now uses the foreground color (putHtmlListBullet()).
CHANGELOG.TXT:4.5.029 (2009-03-19)
CHANGELOG.TXT:	- The following methods were added to UNDO commands (see example 47): startTransaction(), commitTransaction(), rollbackTransaction().
CHANGELOG.TXT:	- All examples were updated.
CHANGELOG.TXT:4.5.028 (2009-03-18)
CHANGELOG.TXT:	- Bug #2690945 "List Bugs" was fixed.
CHANGELOG.TXT:	- HTML text alignment on lists was fixed.
CHANGELOG.TXT:	- The constant PDF_FONT_MONOSPACED was added to the configuration file to define the default monospaced font.
CHANGELOG.TXT:	- The following methods were fixed: getPageWidth(), getPageHeight(), getBreakMargin().
CHANGELOG.TXT:	- All examples were updated.
CHANGELOG.TXT:4.5.027 (2009-03-16)
CHANGELOG.TXT:	- Method getPageDimensions() was added to get page dimensions.
CHANGELOG.TXT:	- The signature of the following methos were changed: getPageWidth(), getPageHeight(), getBreakMargin().
CHANGELOG.TXT:	- _parsepng() method was fixed for PNG URL images (fread bug).
CHANGELOG.TXT:4.5.026 (2009-03-11)
CHANGELOG.TXT:	- Bug #2681793 affecting URL images with spaces was fixed.
CHANGELOG.TXT:4.5.025 (2009-03-10)
CHANGELOG.TXT:	- A small bug affecting hyphenation support was fixed.
CHANGELOG.TXT:	- The method SetDefaultMonospacedFont() was added to define the default monospaced font.
CHANGELOG.TXT:4.5.024 (2009-03-07)
CHANGELOG.TXT:	- The bug #2666493 was fixed "Footer corrupts document".
CHANGELOG.TXT:4.5.023 (2009-03-06)
CHANGELOG.TXT:	- The bug #2666688 was fixed "Rowspan in tables".
CHANGELOG.TXT:4.5.022 (2009-03-05)
CHANGELOG.TXT:	- The bug #2659676 was fixed "refer to #2157099 test 4 < BR > problem still not fixed".
CHANGELOG.TXT:	- addTOC() function bug was fixed.
CHANGELOG.TXT:4.5.020 (2009-03-03)
CHANGELOG.TXT:	- The following bug was fixed: "function removeSHY corrupts unicode".
CHANGELOG.TXT:4.5.019 (2009-02-28)
CHANGELOG.TXT:	- The problem of decimal separator using different locale was fixed.
CHANGELOG.TXT:	- The text hyphenation is now supported (see example n. 46).
CHANGELOG.TXT:4.5.018 (2009-02-26)
CHANGELOG.TXT:	- The _destroy() method was added to unset all class variables and frees memory.
CHANGELOG.TXT:	- Now it's possible to call Output() method multiple times.
CHANGELOG.TXT:4.5.017 (2009-02-24)
CHANGELOG.TXT:	- A minor bug that raises a PHP warning was fixed.
CHANGELOG.TXT:4.5.016 (2009-02-24)
CHANGELOG.TXT:	- Bug item #2631200 "getNumLines() counts wrong" was fixed.
CHANGELOG.TXT:	- Multiple attachments bug was fixed.
CHANGELOG.TXT:	- All class variables are now cleared on Output() for memory otpimization.
CHANGELOG.TXT:4.5.015 (2009-02-18)
CHANGELOG.TXT:	- Bug item #2612553 "function Write() must not break a line on &nbsp;  character" was fixed.
CHANGELOG.TXT:4.5.014 (2009-02-13)
CHANGELOG.TXT:	- Bug item #2595015 "POSTNET Barcode Checksum Error" was fixed (on barcode.php).
CHANGELOG.TXT:	- Pagebreak bug for barcode was fixed.
CHANGELOG.TXT:4.5.013 (2009-02-12)
CHANGELOG.TXT:	- border attribute is now supported on HTML images (only accepts the same values accepted by Cell()).
CHANGELOG.TXT:4.5.012 (2009-02-12)
CHANGELOG.TXT:	- An error on image border feature was fixed.
CHANGELOG.TXT:4.5.011 (2009-02-12)
CHANGELOG.TXT:	- HTML links for images are now supported.
CHANGELOG.TXT:	- height attribute is now supported on HTML cells.
CHANGELOG.TXT:	- $border parameter was added to Image() and ImageEps() methods.
CHANGELOG.TXT:	- The method getNumLines() was added to estimate the number of lines required for the specified text.
CHANGELOG.TXT:4.5.010 (2009-01-29)
CHANGELOG.TXT:	- Bug n. 2546108 "BarCode Y position" was fixed.
CHANGELOG.TXT:4.5.009 (2009-01-26)
CHANGELOG.TXT:	- Bug n. 2538094 "Empty pdf file created" was fixed.
CHANGELOG.TXT:4.5.008 (2009-01-26)
CHANGELOG.TXT:	- setPage() method was fixed to correctly restore graphic states.
CHANGELOG.TXT:	- Source code was cleaned up for performances.
CHANGELOG.TXT:4.5.007 (2009-01-24)
CHANGELOG.TXT:	- checkPageBreak() and write1DBarcode() methods were fixed.
CHANGELOG.TXT:	- Source code was cleaned up for performances.
CHANGELOG.TXT:	- barcodes.php was updated.
CHANGELOG.TXT:4.5.006 (2009-01-23)
CHANGELOG.TXT:	- getHTMLUnitToPoints() method was replaced by getHTMLUnitToUnits() to fix HTML units bugs.
CHANGELOG.TXT:4.5.005 (2009-01-23)
CHANGELOG.TXT:	- Page closing bug was fixed.
CHANGELOG.TXT:4.5.004 (2009-01-21)
CHANGELOG.TXT:	- The access of convertHTMLColorToDec() method was changed to public
CHANGELOG.TXT:	- Fixed bug on UL tag.
CHANGELOG.TXT:4.5.003 (2009-01-19)
CHANGELOG.TXT:	- Fonts on different folders are now supported.
CHANGELOG.TXT:4.5.002 (2009-01-07)
CHANGELOG.TXT:	- addTOC() function was improved (see example n. 45).
CHANGELOG.TXT:4.5.001 (2009-01-04)
CHANGELOG.TXT:	- The signature of startPageGroup() function was changed.
CHANGELOG.TXT:	- Method Footer() was improved to automatically print page or page-group number (see example n. 23).
CHANGELOG.TXT:	- Protected method formatTOCPageNumber() was added to customize the format of page numbers on the Table Of Content.
CHANGELOG.TXT:	- The signature of addTOC() was changed to include the font used for page numbers.
CHANGELOG.TXT:4.5.000 (2009-01-03)
CHANGELOG.TXT:	- A new $diskcache parameter was added to class constructor to enable disk caching and reduce RAM memory usage (see example n. 43).
CHANGELOG.TXT:	- The method movePageTo() was added to move pages to previous positions (see example n. 44).
CHANGELOG.TXT:	- The methods getAliasNumPage() and getPageNumGroupAlias() were added to get the alias for page number (needed when using movepageTo()).
CHANGELOG.TXT:	- The methods addTOC() was added to print a Table Of Content (see example n. 45).
CHANGELOG.TXT:	- Imagick class constant was removed for better compatibility with PHP4.
CHANGELOG.TXT:	- All existing examples were updated and new examples were added.
CHANGELOG.TXT:4.4.009 (2008-12-29)
CHANGELOG.TXT:	- Examples 1 and 35 were fixed.
CHANGELOG.TXT:4.4.008 (2008-12-28)
CHANGELOG.TXT:	- Bug #2472169 "Unordered bullet size not adjusted for unit type" was fixed.
CHANGELOG.TXT:4.4.007 (2008-12-23)
CHANGELOG.TXT:	- Bug #2459935 "no unit conversion for header line" was fixed.
CHANGELOG.TXT:	- Example n. 42 for image alpha channel was added.
CHANGELOG.TXT:	- All examples were updated.
CHANGELOG.TXT:4.4.006 (2008-12-11)
CHANGELOG.TXT:	- Method setLIsymbol() was changed to reflect latest changes in HTML list handling.
CHANGELOG.TXT:4.4.005 (2008-12-10)
CHANGELOG.TXT:	- Bug item #2413870 "ordered list override value" was fixed.
CHANGELOG.TXT:4.4.004 (2008-12-10)
CHANGELOG.TXT:	- The protected method getHTMLUnitToPoints() was added to accept various HTML units of measure (em, ex, px, in, cm, mm, pt, pc, %).
CHANGELOG.TXT:	- The method intToRoman() was added to convert integer number to Roman representation.
CHANGELOG.TXT:	- Support fot HTML lists was improved: the CSS property list-style-type is now supported.
CHANGELOG.TXT:4.4.003 (2008-12-09)
CHANGELOG.TXT:	- Bug item #2412147 "Warning on line 3367" was fixed.
CHANGELOG.TXT:	- Method setHtmlLinksStyle() was added to set default HTML link colors and font style.
CHANGELOG.TXT:	- Method addHtmlLink() was changed to use color and style defined on the inline CSS.
CHANGELOG.TXT:4.4.002 (2008-12-09)
CHANGELOG.TXT:	- Borders on Multicell() were fixed.
CHANGELOG.TXT:	- Problem of Multicell() on Header function (Bug item #2407579) was fixed.
CHANGELOG.TXT:	- Problem on graphics tranformations applied to Multicell() was fixed.
CHANGELOG.TXT:	- Support for ImageMagick was added.
CHANGELOG.TXT:	- Width calculation for nested tables was fixed.
CHANGELOG.TXT:4.4.001 (2008-12-08)
CHANGELOG.TXT:	- Some missing core fonts were added on fonts directory.
CHANGELOG.TXT:	- CID0 fonts rendering was fixed.
CHANGELOG.TXT:	- HTML support was improved (<pre> and <tt> tags are now supported).
CHANGELOG.TXT:	- Bug item #2406022 "Left padding bug in MultiCell with maxh" was fixed.
CHANGELOG.TXT:4.4.000 (2008-12-07)
CHANGELOG.TXT:	- File attachments are now supported (see example n. 41).
CHANGELOG.TXT:	- Font functions were optimized to reduce document size.
CHANGELOG.TXT:	- makefont.php was updated.
CHANGELOG.TXT:	- Linux binaries were added on /fonts/utils
CHANGELOG.TXT:	- All fonts were updated.
CHANGELOG.TXT:	- $autopadding parameter was added to Multicell() to disable automatic padding features.
CHANGELOG.TXT:	- $maxh parameter was added to Multicell() and Write() to set a maximum height.
CHANGELOG.TXT:4.3.009 (2008-12-05)
CHANGELOG.TXT:	- Bug item #2392989 (Custom header + setlinewidth + cell border bug) was fixed.
CHANGELOG.TXT:4.3.008 (2008-12-05)
CHANGELOG.TXT:	- Bug item #2390566 "rect bug" was fixed.
CHANGELOG.TXT:	- File path was fixed for font embedded files.
CHANGELOG.TXT:	- SetFont() method signature was changed to include the font filename.
CHANGELOG.TXT:	- Some font-related methods were improved.
CHANGELOG.TXT:	- Methods getFontFamily() and getFontStyle() were added.
CHANGELOG.TXT:4.3.007 (2008-12-03)
CHANGELOG.TXT:	- PNG alpha channel is now supported (GD library is required).
CHANGELOG.TXT:	- AddFont() function now support custom font file path on $file parameter.
CHANGELOG.TXT:	- The default width variable ($dw) is now always defined for any font.
CHANGELOG.TXT:	- The 'Style' attribute on CID-0 fonts was removed because of protection bug.
CHANGELOG.TXT:4.3.006 (2008-12-01)
CHANGELOG.TXT:	- A regular expression on getHtmlDomArray() to find HTML tags was fixed.
CHANGELOG.TXT:4.3.005 (2008-11-25)
CHANGELOG.TXT:	- makefont.php was fixed.
CHANGELOG.TXT:	- Bug item #2339877 was fixed (false loop condition detected on WriteHTML()).
CHANGELOG.TXT:	- Bug item #2336733 was fixed (lasth value update on Multicell() when border and fill are disabled).
CHANGELOG.TXT:	- Bug item #2342303 was fixed (automatic page-break on Image() and ImageEPS()).
CHANGELOG.TXT:4.3.004 (2008-11-19)
CHANGELOG.TXT:	- Function _textstring() was fixed (bug 2309051).
CHANGELOG.TXT:	- All examples were updated.
CHANGELOG.TXT:4.3.003 (2008-11-18)
CHANGELOG.TXT:	- CID-0 font bug was fixed.
CHANGELOG.TXT:	- Some functions were optimized.
CHANGELOG.TXT:	- Function getGroupPageNoFormatted() was added.
CHANGELOG.TXT:	- Example n. 23 was updated.
CHANGELOG.TXT:4.3.002 (2008-11-17)
CHANGELOG.TXT:	- Bug item #2305518 "CID-0 font don't work with encryption" was fixed.
CHANGELOG.TXT:4.3.001 (2008-11-17)
CHANGELOG.TXT:	- Bug item #2300007 "download mimetype pdf" was fixed.
CHANGELOG.TXT:	- Double quotes were replaced by single quotes to improve PHP performances.
CHANGELOG.TXT:	- A bug relative to HTML cell borders was fixed.
CHANGELOG.TXT:4.3.000 (2008-11-14)
CHANGELOG.TXT:	- The function setOpenCell() was added to set the top/bottom cell sides to be open or closed when the cell cross the page.
CHANGELOG.TXT:	- A bug relative to list items indentation was fixed.
CHANGELOG.TXT:	- A bug relative to borders on HTML tables and Multicell was fixed.
CHANGELOG.TXT:	- A bug relative to rowspanned cells was fixed.
CHANGELOG.TXT:	- A bug relative to html images across pages was fixed.
CHANGELOG.TXT:4.2.009 (2008-11-13)
CHANGELOG.TXT:	- Spaces between li tags are now automatically removed.
CHANGELOG.TXT:4.2.008 (2008-11-12)
CHANGELOG.TXT:	- A bug relative to fill color on next page was fixed.
CHANGELOG.TXT:4.2.007 (2008-11-12)
CHANGELOG.TXT:	- The function setListIndentWidth() was added to set custom indentation widht for HTML lists.
CHANGELOG.TXT:4.2.006 (2008-11-06)
CHANGELOG.TXT:	- A bug relative to HTML justification was fixed.
CHANGELOG.TXT:4.2.005 (2008-11-06)
CHANGELOG.TXT:	- A bug relative to HTML justification was fixed.
CHANGELOG.TXT:	- The methods formatPageNumber() and PageNoFormatted() were added to format page numbers.
CHANGELOG.TXT:	- Default Footer() method was changed to use PageNoFormatted() instead of PageNo().
CHANGELOG.TXT:	- Example 6 was updated.
CHANGELOG.TXT:4.2.004 (2008-11-04)
CHANGELOG.TXT:	- Bug item n. 2217039 "filename handling improvement" was fixed.
CHANGELOG.TXT:4.2.003 (2008-10-31)
CHANGELOG.TXT:	- Font style bug was fixed.
CHANGELOG.TXT:4.2.002 (2008-10-31)
CHANGELOG.TXT:	- Bug item #2210922 (htm element br not work) was fixed.
CHANGELOG.TXT:	- Write() function was improved to support margin changes.
CHANGELOG.TXT:4.2.001 (2008-10-30)
CHANGELOG.TXT:	- setHtmlVSpace($tagvs) function was added to set custom vertical spaces for HTML tags.
CHANGELOG.TXT:	- writeHTML() function now support margin changes during execution.
CHANGELOG.TXT:	- Signature of addHTMLVertSpace() function is changed.
CHANGELOG.TXT:4.2.000 (2008-10-29)
CHANGELOG.TXT:	- htmlcolors.php was changed to support class-loaders.
CHANGELOG.TXT:	- ImageEps() function was improved in performances.
CHANGELOG.TXT:	- Signature of Link() And Annotation() functions were changed.
CHANGELOG.TXT:	- (Bug item #2198926) Links and Annotations alignment were fixed (support for geometric tranformations was added).
CHANGELOG.TXT:	- rowspan mode for HTML table cells was improved and fixed.
CHANGELOG.TXT:	- Booklet mode for double-sided pages was added; see SetBooklet() function and example n. 40.
CHANGELOG.TXT:	- lastPage() signature is changed.
CHANGELOG.TXT:	- Signature of Write() function is changed.
CHANGELOG.TXT:	- Some HTML justification problems were fixed.
CHANGELOG.TXT:	- Some functions were fixed to better support RTL mode.
CHANGELOG.TXT:	- Example n. 10 was changed to support RTL mode.
CHANGELOG.TXT:	- All examples were updated.
CHANGELOG.TXT:4.1.004 (2008-10-23)
CHANGELOG.TXT:	- unicode_data.php was changed to support class-loaders.
CHANGELOG.TXT:	- Bug item #2186040/2 (writeHTML margin problem) was fixed.
CHANGELOG.TXT:4.1.003 (2008-10-22)
CHANGELOG.TXT:	- Bug item #2185399 was fixed (rowspan and page break).
CHANGELOG.TXT:	- Bugs item #2186040 was fixed (writeHTML margin problem).
CHANGELOG.TXT:	- Newline after table was removed.
CHANGELOG.TXT:4.1.002 (2008-10-21)
CHANGELOG.TXT:	- Bug item #2184525 was fixed (rowspan on HTML cell).
CHANGELOG.TXT:4.1.001 (2008-10-21)
CHANGELOG.TXT:	- Support for "start" attribute was added to HTML ordered list.
CHANGELOG.TXT:	- unicode_data.php file was changed to include UTF-8 to ASCII table.
CHANGELOG.TXT:	- Some functions were modified to better support UTF-8 extensions to core fonts.
CHANGELOG.TXT:	- Support for images on HTML lists was improved.
CHANGELOG.TXT:	- Examples n. 1 and 6 were updated.
CHANGELOG.TXT:4.1.000 (2008-10-18)
CHANGELOG.TXT:	- Page-break bug using HTML content was fixed.
CHANGELOG.TXT:	- The "false" parameter was reintroduced to class_exists function on PHP5 version to avoid autoload.
CHANGELOG.TXT:	- addHtmlLink() function was improved to support internal links (i.e.: <a href="#23">link to page 23</a>).
CHANGELOG.TXT:	- Justification alignment is now supported on HTML (see example n. 39).
CHANGELOG.TXT:	- example_006.php was updated.
CHANGELOG.TXT:4.0.033 (2008-10-13)
CHANGELOG.TXT:	- Bug n. 2157099 was fixed.
CHANGELOG.TXT:	- SetX() and SetY() functions were improved.
CHANGELOG.TXT:	- SetY() includes a new parameter to avoid the X reset.
CHANGELOG.TXT:4.0.032 (2008-10-10)
CHANGELOG.TXT:	- Bug n. 2156926 was fixed (bold, italic, underlined, linethrough).
CHANGELOG.TXT:	- setStyle() method was removed.
CHANGELOG.TXT:	- Configuration file was changed to use helvetica (non-unicode) font by default.
CHANGELOG.TXT:	- The use of mixed font types was improved.
CHANGELOG.TXT:	- All examples were updated.
CHANGELOG.TXT:4.0.031 (2008-10-09)
CHANGELOG.TXT:	- _putannots() and _putbookmarks() links alignments were fixed.
CHANGELOG.TXT:4.0.030 (2008-10-07)
CHANGELOG.TXT:	- _putbookmarks() function was fixed.
CHANGELOG.TXT:	- _putannots() was fixed to include internal links.
CHANGELOG.TXT:4.0.029 (2008-09-27)
CHANGELOG.TXT:	- Infinite loop bug was fixed [Bug item #130309].
CHANGELOG.TXT:	- Multicell() problem on Header() was fixed.
CHANGELOG.TXT:4.0.028 (2008-09-26)
CHANGELOG.TXT:	- setLIsymbol() was added to set the LI symbol used on UL lists.
CHANGELOG.TXT:	- Missing $padding and $encryption_key variables declarations were added [Bug item #2129058].
CHANGELOG.TXT:4.0.027 (2008-09-19)
CHANGELOG.TXT:	- Bug #2118588 "Undefined offset in tcpdf.php on line 9581" was fixed.
CHANGELOG.TXT:	- arailunicid0.php font was updated.
CHANGELOG.TXT:	- The problem of javascript form fields duplication after saving was fixed.
CHANGELOG.TXT:4.0.026 (2008-09-17)
CHANGELOG.TXT:	- convertHTMLColorToDec() function was improved to support rgb(RR,GG,BB) notation.
CHANGELOG.TXT:	- The following inline CSS attributes are now supported: text-decoration, color, background-color and font-size names: xx-small, x-small, small, medium, large, x-large, xx-large
CHANGELOG.TXT:	- Example n. 6 was updated.
CHANGELOG.TXT:4.0.025 (2008-09-15)
CHANGELOG.TXT:	- _putcidfont0 function was improved to include CJK fonts (Chinese, Japanese, Korean, CJK, Asian fonts) without embedding.
CHANGELOG.TXT:	- arialunicid0 font was added (see the new example n. 38).
CHANGELOG.TXT:	- The following Unicode to CID-0 tables were added on fonts folder: uni2cid_ak12.php, uni2cid_aj16.php, uni2cid_ag15.php, uni2cid_ac15.php.
CHANGELOG.TXT:4.0.024 (2008-09-12)
CHANGELOG.TXT:	- "stripos" function was replaced with "strpos + strtolower" for backward compatibility with PHP4.
CHANGELOG.TXT:	- support for Spot Colors were added. Check the new example n. 37 and the following new functions:
CHANGELOG.TXT:	- Bookmark() function was improved to fix wrong levels.
CHANGELOG.TXT:	- $lasth changes after header/footer calls were fixed.
CHANGELOG.TXT:4.0.023 (2008-09-05)
CHANGELOG.TXT:	- Some HTML related problems were fixed.
CHANGELOG.TXT:	- Image alignment on HTML was changed, now it always defaults to the normal mode (see example_006.php).
CHANGELOG.TXT:4.0.022 (2008-08-28)
CHANGELOG.TXT:	- Line height on HTML was fixed.
CHANGELOG.TXT:	- Image inside an HTML cell problem was fixed.
CHANGELOG.TXT:	- A new "zarbold" persian font was added.
CHANGELOG.TXT:4.0.021 (2008-08-24)
CHANGELOG.TXT:	- HTTP headers were fixed on Output function().
CHANGELOG.TXT:	- getAliasNbPages() and getPageGroupAlias() functions were changed to support non-unicode fonts on unicode documents.
CHANGELOG.TXT:	- Function Write() was fixed.
CHANGELOG.TXT:	- The problem of additional vertical spaces on HTML was fixed.
CHANGELOG.TXT:	- The problem of frame around HTML links was fixed.
CHANGELOG.TXT:4.0.020 (2008-08-15)
CHANGELOG.TXT:	- "[2052259] WriteHTML <u> & <b>" bug was fixed.
CHANGELOG.TXT:4.0.019 (2008-08-13)
CHANGELOG.TXT:	- "Rowspan on first cell" bug was fixed.
CHANGELOG.TXT:4.0.018 (2008-08-08)
CHANGELOG.TXT:	- Default cellpadding for HTML tables was fixed.
CHANGELOG.TXT:	- Annotation() function was added to support some PDF annotations (see example_036.php and section 8.4 of PDF reference 1.7).
CHANGELOG.TXT:	- HTML links are now correclty shifted during line alignments.
CHANGELOG.TXT:	- function getAliasNbPages() was added and Footer() was updated.
CHANGELOG.TXT:	- RowSpan mode for HTML tables was fixed.
CHANGELOG.TXT:	- Bugs item #2043610 "Multiple sizes vertical align wrong" was fixed.
CHANGELOG.TXT:	- ImageEPS() function was improved and RTL alignment was fixed (see example_032.php).
CHANGELOG.TXT:4.0.017 (2008-08-05)
CHANGELOG.TXT:	- Missing CNZ and CEO style modes were added to Rect() function.
CHANGELOG.TXT:	- Fonts utils were updated to include support for OpenType fonts.
CHANGELOG.TXT:	- getLastH() function was added.
CHANGELOG.TXT:4.0.016 (2008-07-30)
CHANGELOG.TXT:	- setPageMark() function was added. This function must be called after calling Image() function for a background image.
CHANGELOG.TXT:4.0.015 (2008-07-29)
CHANGELOG.TXT:	- Some functions were changed to support different page formats (see example_028.php).
CHANGELOG.TXT:	- The signature of setPage() function is changed.
CHANGELOG.TXT:4.0.014 (2008-07-29)
CHANGELOG.TXT:	- K_PATH_MAIN calculation on tcpdf_config.php was fixed.
CHANGELOG.TXT:	- HTML support for EPS/AI images was added (see example_006.php).
CHANGELOG.TXT:	- Bugs item #2030807 "Truncated text on multipage html fields" was fixed.
CHANGELOG.TXT:	- PDF header bug was fixed.
CHANGELOG.TXT:	- helvetica was added as default font family.
CHANGELOG.TXT:	- Stroke mode was fixed on Text function.
CHANGELOG.TXT:	- several minor bugs were fixed.
CHANGELOG.TXT:4.0.013 (2008-07-27)
CHANGELOG.TXT:	- Bugs item #2027799 " Big spaces between lines after page break" was fixed.
CHANGELOG.TXT:	- K_PATH_MAIN calculation on tcpdf_config.php was changed.
CHANGELOG.TXT:	- Function setVisibility() was fixed to avoid the "Incorrect PDEObject type" error message.
CHANGELOG.TXT:4.0.012 (2008-07-24)
CHANGELOG.TXT:	- Addpage(), Header() and Footer() functions were changed to simplify the implementation of external header/footer functions.
CHANGELOG.TXT:	- The following functions were added:
CHANGELOG.TXT:4.0.011 (2008-07-23)
CHANGELOG.TXT:	- Font support was improved.
CHANGELOG.TXT:	- The folder /fonts/utils contains new utilities and instructions for embedd font files.
CHANGELOG.TXT:	- Documentation was updated.
CHANGELOG.TXT:4.0.010 (2008-07-22)
CHANGELOG.TXT:	- HTML tables were fixed to work across pages.
CHANGELOG.TXT:	- Header() and Footer() functions were updated to preserve previous settings.
CHANGELOG.TXT:	- example_035.php was added.
CHANGELOG.TXT:4.0.009 (2008-07-21)
CHANGELOG.TXT:	- UTF8StringToArray() function was fixed for non-unicode mode.
CHANGELOG.TXT:4.0.008 (2008-07-21)
CHANGELOG.TXT:	- Barcodes alignment was fixed (see example_027.php).
CHANGELOG.TXT:	- unicode_data.php was updated.
CHANGELOG.TXT:	- Arabic shaping for "Zero-Width Non-Joiner" character (U+200C) was fixed.
CHANGELOG.TXT:4.0.007 (2008-07-18)
CHANGELOG.TXT:	- str_split was replaced by preg_split for compatibility with PHP4 version.
CHANGELOG.TXT:	- Clipping mode was added to all graphic functions by using parameter $style = "CNZ" or "CEO" (see example_034.php).
CHANGELOG.TXT:4.0.006 (2008-07-16)
CHANGELOG.TXT:	- HTML rowspan bug was fixed.
CHANGELOG.TXT:	- Line style for MultiCell() was fixed.
CHANGELOG.TXT:	- WriteHTML() function was improved.
CHANGELOG.TXT:	- CODE128C barcode was fixed (barcodes.php).
CHANGELOG.TXT:4.0.005 (2008-07-11)
CHANGELOG.TXT:	- Bug [2015715] "PHP Error/Warning" was fixed.
CHANGELOG.TXT:4.0.004 (2008-07-09)
CHANGELOG.TXT:	- HTML cell internal padding was fixed.
CHANGELOG.TXT:4.0.003 (2008-07-08)
CHANGELOG.TXT:	- Removed URL encoding when F option is selected on Output() function.
CHANGELOG.TXT:	- fixed some minor bugs in html tables.
CHANGELOG.TXT:4.0.002 (2008-07-07)
CHANGELOG.TXT:	- Bug [2000861] was still unfixed and has been fixed.
CHANGELOG.TXT:4.0.001 (2008-07-05)
CHANGELOG.TXT:	- Bug [2000861] was fixed.
CHANGELOG.TXT:4.0.000 (2008-07-03)
CHANGELOG.TXT:	- THIS IS A MAIN RELEASE THAT INCLUDES SEVERAL NEW FEATURES AND BUGFIXES
CHANGELOG.TXT:	- Signature fo SetTextColor() and SetFillColor() functions was changed (parameter $storeprev was removed).
CHANGELOG.TXT:	- HTML support was completely rewritten and improved (see example 6).
CHANGELOG.TXT:	- Alignments parameters were fixed.
CHANGELOG.TXT:	- Functions GetArrStringWidth() and GetStringWidth() now include font parameters.
CHANGELOG.TXT:	- Fonts support was improved.
CHANGELOG.TXT:	- All core fonts were replaced and moved to fonts/ directory.
CHANGELOG.TXT:	- The following functions were added: getMargins(), getFontSize(), getFontSizePt().
CHANGELOG.TXT:	- File config/tcpdf_config_old.php was renamed tcpdf_config_alt.php and updated.
CHANGELOG.TXT:	- Multicell and WriteHTMLCell fill function was fixed.
CHANGELOG.TXT:	- Several minor bugs were fixed.
CHANGELOG.TXT:	- barcodes.php was updated.
CHANGELOG.TXT:	- All examples were updated.
CHANGELOG.TXT:------------------------------------------------------------
CHANGELOG.TXT:3.1.001 (2008-06-13)
CHANGELOG.TXT:	- Bug [1992515] "K_PATH_FONTS default value wrong" was fixed.
CHANGELOG.TXT:	- Vera font was removed, DejaVu font and Free fonts were updated.
CHANGELOG.TXT:	- Image handling was improved.
CHANGELOG.TXT:	- All examples were updated.
CHANGELOG.TXT:3.1.000 (2008-06-11)
CHANGELOG.TXT:	- setPDFVersion() was added to change the default PDF version (currently 1.7).
CHANGELOG.TXT:	- setViewerPreferences() was added to control the way the document is to be presented on the screen or printed (see example 29).
CHANGELOG.TXT:	- SetDisplayMode() signature was changed (new options were added).
CHANGELOG.TXT:	- LinearGradient(), RadialGradient(), CoonsPatchMesh() functions were added to print various color gradients (see example 30).
CHANGELOG.TXT:	- PieSector() function was added to render render pie charts (see example 31).
CHANGELOG.TXT:	- ImageEps() was added to display EPS and AI images with limited support (see example 32).
CHANGELOG.TXT:	- writeBarcode() function is now depracated, a new write1DBarcode() function was added. The barcode directory was removed and a new barcodes.php file was added.
CHANGELOG.TXT:	- The new write1DBarcode() function support more barcodes and do not need the GD library (see example 027). All barcodes are directly written to PDF using graphic functions.
CHANGELOG.TXT:	- HTML lists were improved and could be nested (you may now represent trees).
CHANGELOG.TXT:	- AddFont() bug was fixed.
CHANGELOG.TXT:	- _putfonts() bug was fixed.
CHANGELOG.TXT:	- graphics functions were fixed.
CHANGELOG.TXT:	- unicode_data.php file was updated (fixed).
CHANGELOG.TXT:	- almohanad font was updated.
CHANGELOG.TXT:	- example 18 was updated (Farsi and Arabic languages).
CHANGELOG.TXT:	- source code cleanup.
CHANGELOG.TXT:	- All examples were updated and new examples were added.
CHANGELOG.TXT:3.0.015 (2008-06-06)
CHANGELOG.TXT:	- AddPage() function signature is changed to include page format.
CHANGELOG.TXT:	- example 28 was added to show page format changes.
CHANGELOG.TXT:	- setPageUnit() function was added to change the page units of measure.
CHANGELOG.TXT:	- setPageFormat() function was added to change the page format and orientation between pages.
CHANGELOG.TXT:	- setPageOrientation() function was added to change the page orientation.
CHANGELOG.TXT:	- Arabic font shaping was fixed for laa letter and square boxes (see the example 18).
CHANGELOG.TXT:3.0.014 (2008-06-04)
CHANGELOG.TXT:	- Arabic font shaping was fixed.
CHANGELOG.TXT:	- setDefaultTableColumns() function was added.
CHANGELOG.TXT:	- $cell_height_ratio variable was added.
CHANGELOG.TXT:	- setCellHeightRatio() function was added to define the default height of cell repect font height.
CHANGELOG.TXT:3.0.013 (2008-06-03)
CHANGELOG.TXT:	- Multicell height parameter was fixed.
CHANGELOG.TXT:	- Arabic font shaping was improved.
CHANGELOG.TXT:	- unicode_data.php was updated.
CHANGELOG.TXT:3.0.012 (2008-05-30)
CHANGELOG.TXT:	- K_PATH_MAIN and K_PATH_URL constants are now automatically set on config file.
CHANGELOG.TXT:	- DOCUMENT_ROOT constant was fixed for IIS Webserver (config file was updated).
CHANGELOG.TXT:	- Arabic font shaping was improved.
CHANGELOG.TXT:	- TranslateY() function was fixed (bug [1977962]).
CHANGELOG.TXT:	- setVisibility() function was fixed.
CHANGELOG.TXT:	- writeBarcode() function was fixed to scale using $xref parameter.
CHANGELOG.TXT:	- All examples were updated.
CHANGELOG.TXT:3.0.011 (2008-05-23)
CHANGELOG.TXT:	- CMYK color support was added to all graphic functions.
CHANGELOG.TXT:	- HTML table support was improved:
CHANGELOG.TXT:	  -- now it's possible to include additional html tags inside a cell;
CHANGELOG.TXT:	  -- colspan attribute was added.
CHANGELOG.TXT:	- example 006 was updated.
CHANGELOG.TXT:3.0.010 (2008-05-21)
CHANGELOG.TXT:	- fixed $laa_array inclusion on utf8Bidi() function.
CHANGELOG.TXT:3.0.009 (2008-05-20)
CHANGELOG.TXT:	- unicode_data.php was updated.
CHANGELOG.TXT:	- Arabic laa letter problem was fixed.
CHANGELOG.TXT:3.0.008 (2008-05-12)
CHANGELOG.TXT:	- Arabic support was fixed and improved (unicode_data.php was updated).
CHANGELOG.TXT:	- Polycurve() function was added to draw a poly-Bezier curve.
CHANGELOG.TXT:	- list items alignment was fixed.
CHANGELOG.TXT:	- example 6 was updated.
CHANGELOG.TXT:3.0.007 (2008-05-06)
CHANGELOG.TXT:	- Arabic support was fixed and improved.
CHANGELOG.TXT:	- AlMohanad (arabic) font was added.
CHANGELOG.TXT:	- C128 barcode bugs were fixed.
CHANGELOG.TXT:3.0.006 (2008-04-21)
CHANGELOG.TXT:	- Condition to check negative width values was added.
CHANGELOG.TXT:3.0.005 (2008-04-18)
CHANGELOG.TXT:	- back-Slash character escape was fixed on writeHTML() function.
CHANGELOG.TXT:	- Exampe 6 was updated.
CHANGELOG.TXT:3.0.004 (2008-04-11)
CHANGELOG.TXT:	- Bug [1939304] (Right to Left Issue) was fixed.
CHANGELOG.TXT:3.0.003 (2008-04-07)
CHANGELOG.TXT:	- Bug [1934523](Words between HTML tags in cell not kept on one line) was fixed.
CHANGELOG.TXT:	- "face" attribute of "font" tag is now fully supported.
CHANGELOG.TXT:3.0.002 (2008-04-01)
CHANGELOG.TXT:	- Write() functions now return the number of cells and not the number of lines.
CHANGELOG.TXT:	- TCPDF is released under LGPL 2.1, or any later version.
CHANGELOG.TXT:3.0.001 (2008-05-28)
CHANGELOG.TXT:	- _legacyparsejpeg() and _legacyparsepng() were renamed _parsejpeg() and _parsepng().
CHANGELOG.TXT:	- function writeBarcode() was fixed.
CHANGELOG.TXT:	- all examples were updated.
CHANGELOG.TXT:	- example 27 was added to show various barcodes.
CHANGELOG.TXT:3.0.000 (2008-03-27)
CHANGELOG.TXT:	- private function pixelsToMillimeters() was changed to public function pixelsToUnits() to fix html image size bug.
CHANGELOG.TXT:	- Image-related functions were rewritten.
CHANGELOG.TXT:	- resize parameter was added to Image() signature to reduce the image size and fit width and height (see example 9).
CHANGELOG.TXT:	- TCPDF now supports all images supported by GD library: GD, GD2, GD2PART, GIF, JPEG, PNG, BMP, XBM, XPM.
CHANGELOG.TXT:	- CMYK support was added to SetDrawColor(), SetFillColor(), SetTextColor() (see example 22).
CHANGELOG.TXT:	- Page Groups were added (see example 23).
CHANGELOG.TXT:	- setVisibility() function was added to restrict the rendering of some elements to screen or printout (see example 24).
CHANGELOG.TXT:	- All private variables and functions were changed to protected.
CHANGELOG.TXT:	- setAlpha() function was added to give transparency support for all objects (see example 25).
CHANGELOG.TXT:	- Clipping and stroke modes were added to Text() function (see example 26).
CHANGELOG.TXT:	- All examples were moved to "examples" directory.
CHANGELOG.TXT:	- function setJPEGQuality() was added to set the JPEG image comrpession (see example 9).
CHANGELOG.TXT:2.9.000 (2008-03-26)
CHANGELOG.TXT:	- htmlcolors.php file was added to include html colors.
CHANGELOG.TXT:	- Support for HTML color names and three-digit hexadecimal color codes was added.
CHANGELOG.TXT:	- private function convertColorHexToDec() was renamed convertHTMLColorToDec().
CHANGELOG.TXT:	- color and bgcolor attributes are now supported on all HTML tags (color nesting is also supported).
CHANGELOG.TXT:	- Write() function were fixed.
CHANGELOG.TXT:	- example_006.php was updated.
CHANGELOG.TXT:	- private function setUserRights() was added to release user rights on Acrobat Reader (this allows to display forms, see example 14)
CHANGELOG.TXT:2.8.000 (2008-03-20)
CHANGELOG.TXT:	- Private variables were changed to protected.
CHANGELOG.TXT:	- Function Write() was fixed and improved.
CHANGELOG.TXT:	- Support for dl, dt, dd, del HTML tags was introduced.
CHANGELOG.TXT:	- Line-trought mode was added for HTML and text.
CHANGELOG.TXT:	- Text vertical alignment on cells were fixed.
CHANGELOG.TXT:	- Examples were updated to reflect changes.
CHANGELOG.TXT:2.7.002 (2008-03-13)
CHANGELOG.TXT:	- Bug "[1912142] Encrypted PDF created/modified date" was fixed.
CHANGELOG.TXT:2.7.001 (2008-03-10)
CHANGELOG.TXT:	- Cell justification was fixed for non-unicode mode.
CHANGELOG.TXT:2.7.000 (2008-03-09)
CHANGELOG.TXT:	- Cell() stretching mode 4 (forced character spacing) was fixed.
CHANGELOG.TXT:	- writeHTMLCell() now uses Multicell() to write.
CHANGELOG.TXT:	- Multicell() has a new parameter $ishtml to act as writeHTMLCell().
CHANGELOG.TXT:	- Write() speed was improved for non-arabic strings.
CHANGELOG.TXT:	- Example n. 20 was changed.
CHANGELOG.TXT:2.6.000 (2008-03-07)
CHANGELOG.TXT:	- various alignments bugs were fixed.
CHANGELOG.TXT:2.5.000 (2008-03-07)
CHANGELOG.TXT:	- Several bugs were fixed.
CHANGELOG.TXT:	- example_019.php was added to test non-unicode mode using old fonts.
CHANGELOG.TXT:2.4.000 (2008-03-06)
CHANGELOG.TXT:	- RTL support was deeply improved.
CHANGELOG.TXT:	- GetStringWidth() was fixed to support RTL languages.
CHANGELOG.TXT:	- Text() RTL alignment was fixed.
CHANGELOG.TXT:	- Some functions were added: GetArrStringWidth(), GetCharWidth(), uniord(), utf8Bidi().
CHANGELOG.TXT:	- example_018.php was added and test_unicode.php was removed.
CHANGELOG.TXT:2.3.000 (2008-03-05)
CHANGELOG.TXT:	- MultiCell() signature is changed. Now support multiple columns across pages (see example_017).
CHANGELOG.TXT:	- Write() signature is changed. Now support the cell mode to be used with MultiCell.
CHANGELOG.TXT:	- Header() and Footer() were changed.
CHANGELOG.TXT:	- The following functions were added: UTF8ArrSubString() and unichr().
CHANGELOG.TXT:	- Examples were updated to reflect last changes.
CHANGELOG.TXT:2.2.004 (2008-03-04)
CHANGELOG.TXT:	- Several examples were added.
CHANGELOG.TXT:	- AddPage() Header() and Footer() were fixed.
CHANGELOG.TXT:	- Documentation is now available on http://www.tcpdf.org
CHANGELOG.TXT:2.2.003 (2008-03-03)
CHANGELOG.TXT:	- [1894853] Performance of MultiCell() was improved.
CHANGELOG.TXT:	- RadioButton and ListBox functions were added.
CHANGELOG.TXT:	- javascript form functions were rewritten and properties names are changed. The properties function supported by form fields are listed on Possible values are listed on http://www.adobe.com/devnet/acrobat/pdfs/js_developer_guide.pdf.
CHANGELOG.TXT:2.2.002 (2008-02-28)
CHANGELOG.TXT:	- [1900495] html images path was fixed.
CHANGELOG.TXT:	- Legacy image functions were reintroduced to allow PNG and JPEG support without GD library.
CHANGELOG.TXT:2.2.001 (2008-02-16)
CHANGELOG.TXT:	- The bug "[1894700] bug with replace relative path" was fixed
CHANGELOG.TXT:	- Justification was fixed
CHANGELOG.TXT:2.2.000 (2008-02-12)
CHANGELOG.TXT:	- fixed javascript bug introduced with latest release
CHANGELOG.TXT:2.1.002 (2008-02-12)
CHANGELOG.TXT:	- Justify function was fixed on PHP4 version.
CHANGELOG.TXT:	- Bookmank function was added ([1578250] Table of contents).
CHANGELOG.TXT:	- Javascript and Form fields support was added ([1796359] Form fields).
CHANGELOG.TXT:2.1.001 (2008-02-10)
CHANGELOG.TXT:	- The bug "[1885776] Race Condition in function justitfy" was fixed.
CHANGELOG.TXT:	- The bug "[1890217] xpdf complains that pdf is incorrect" was fixed.
CHANGELOG.TXT:2.1.000 (2008-01-07)
CHANGELOG.TXT:	- FPDF_FONTPATH constant was changed to K_PATH_FONTS on config file
CHANGELOG.TXT:	- Bidirectional Algorithm to correctly reverse bidirectional languages was added.
CHANGELOG.TXT:	- SetLeftMargin, SetTopMargin, SetRightMargin functions were fixed.
CHANGELOG.TXT:	- SetCellPadding function was added.
CHANGELOG.TXT:	- writeHTML was updated with new parameters.
CHANGELOG.TXT:	- Text function was fixed.
CHANGELOG.TXT:	- MultiCell function was fixed, now works also across multiple pages.
CHANGELOG.TXT:	- Line width was fixed on Header and Footer functions and <hr> tag.
CHANGELOG.TXT:	- "GetImageSize" was renamed "getimagesize".
CHANGELOG.TXT:	- Document version was changed from 1.3 to 1.5.
CHANGELOG.TXT:	- _begindoc() function was fixed.
CHANGELOG.TXT:	- ChangeDate was fixed and ModDate was added.
CHANGELOG.TXT:	- The following functions were added:
CHANGELOG.TXT:	  GetNumChars() : count the number of (UTF-8) characters in a string.
CHANGELOG.TXT:	- $stretch parameter was added to Cell() function to fit text on cell:
CHANGELOG.TXT:	- Line function was fixed for RTL.
CHANGELOG.TXT:	- Graphic transformation functions were added [1811158]:
CHANGELOG.TXT:	- Graphic function were added/updated [1688549]:
CHANGELOG.TXT:2.0.000 (2008-01-04)
CHANGELOG.TXT:	- RTL (Right-To-Left) languages support was added. Language direction is set using the $l['a_meta_dir'] setting on /configure/language/xxx.php language files.
CHANGELOG.TXT:	- setRTL($enable) method was added to manually enable/disable the RTL text direction.
CHANGELOG.TXT:	- The attribute "dir" was added to support custom text direction on HTML tags. Possible values are: ltr - for Left-To-Right and RTL for Right-To-Left.
CHANGELOG.TXT:	- RC4 40bit encryption was added. Check the SetProtection method.
CHANGELOG.TXT:	- [1815213] Improved image support for GIF, JPEG, PNG formats.
CHANGELOG.TXT:	- [1800094] Attribute "value" was added to ordered list items <li>.
CHANGELOG.TXT:	- Image function now has a new "align" parameter that indicates the alignment of the pointer next to image insertion and relative to image height. The value can be:
CHANGELOG.TXT:			T: top-right for LTR or top-left for RTL
CHANGELOG.TXT:			M: middle-right for LTR or middle-left for RTL
CHANGELOG.TXT:			B: bottom-right for LTR or bottom-left for RTL
CHANGELOG.TXT:	- Attribute "align" was added to <img> html tag to set the above image "align" parameter. Possible values are:
CHANGELOG.TXT:			top: top-right for LTR or top-left for RTL
CHANGELOG.TXT:			middle: middle-right for LTR or middle-left for RTL
CHANGELOG.TXT:			bottom: bottom-right for LTR or bottom-left for RTL
CHANGELOG.TXT:	- [1798103] newline was added after </ul>, </ol> and </p> tages.
CHANGELOG.TXT:	- [1816393] Documentation was updated.
CHANGELOG.TXT:	- 'ln' parameter was fixed on writeHTMLCell. Now it's possible to print two or more columns across several pages;
CHANGELOG.TXT:	- The method lastPage() was added to move the pointer on the last page;
CHANGELOG.TXT:------------------------------------------------------------
CHANGELOG.TXT:1.53.0.TC034 (2007-07-30)
CHANGELOG.TXT:	- fixed htmlentities conversion.
CHANGELOG.TXT:	- MultiCell() function returns the number of cells.
CHANGELOG.TXT:1.53.0.TC033 (2007-07-30)
CHANGELOG.TXT:	- fixed bug 1762550: case sensitive for font files
CHANGELOG.TXT:	- NOTE: all fonts files names must be in lowercase!
CHANGELOG.TXT:1.53.0.TC032 (2007-07-27)
CHANGELOG.TXT:	- setLastH method was added to resolve bug 1689071.
CHANGELOG.TXT:	- all fonts names were converted in lowercase (bug 1713005).
CHANGELOG.TXT:	- bug 1740954 was fixed.
CHANGELOG.TXT:	- justification was added as Cell option.
CHANGELOG.TXT:1.53.0.TC031 (2007-03-20)
CHANGELOG.TXT:	- ToUnicode CMap were added on _puttruetypeunicode function. Now you may search and copy unicode text.
CHANGELOG.TXT:1.53.0.TC030 (2007-03-06)
CHANGELOG.TXT:	- fixed bug on PHP4 version.
CHANGELOG.TXT:1.53.0.TC029 (2007-03-06)
CHANGELOG.TXT:	- DejaVu Fonts were added.
CHANGELOG.TXT:1.53.0.TC028 (2007-03-03)
CHANGELOG.TXT:	- MultiCell function signature were changed: the $ln parameter were added. Check documentation for further information.
CHANGELOG.TXT:	- Greek language were added on example sentences.
CHANGELOG.TXT:	- setPrintHeader() and setPrintFooter() functions were added to enable or disable page header and footer.
CHANGELOG.TXT:1.53.0.TC027 (2006-12-14)
CHANGELOG.TXT:	- $attr['face'] bug were fixed.
CHANGELOG.TXT:	- K_TCPDF_EXTERNAL_CONFIG control where introduced on /config/tcpdf_config.php to use external configuration files.
CHANGELOG.TXT:1.53.0.TC026 (2006-10-28)
CHANGELOG.TXT:	- writeHTML function call were fixed on examples.
CHANGELOG.TXT:1.53.0.TC025 (2006-10-27)
CHANGELOG.TXT:	- Bugs item #1421290 were fixed (0D - 0A substitution in some characters)
CHANGELOG.TXT:	- Bugs item #1573174 were fixed (MultiCell documentation)
CHANGELOG.TXT:1.53.0.TC024 (2006-09-26)
CHANGELOG.TXT:	- getPageHeight() function were fixed (bug 1543476).
CHANGELOG.TXT:	- fixed missing breaks on closedHTMLTagHandler function (bug 1535263).
CHANGELOG.TXT:	- fixed extra spaces on Write function (bug 1535262).
CHANGELOG.TXT:1.53.0.TC023 (2006-08-04)
CHANGELOG.TXT:	- paths to barcode directory were fixed.
CHANGELOG.TXT:	- documentation were updated.
CHANGELOG.TXT:1.53.0.TC022 (2006-07-16)
CHANGELOG.TXT:	- fixed bug: [ 1516858 ] Probs with PHP autoloader and class_exists()
CHANGELOG.TXT:1.53.0.TC021 (2006-07-01)
CHANGELOG.TXT:	- HTML attributes with whitespaces are now supported (thanks to Nelson Benitez for his support)
CHANGELOG.TXT:1.53.0.TC020 (2006-06-23)
CHANGELOG.TXT:	- code cleanup
CHANGELOG.TXT:1.53.0.TC019 (2006-05-21)
CHANGELOG.TXT:	- fixed <strong> and <em> closing tags
CHANGELOG.TXT:1.53.0.TC018 (2006-05-18)
CHANGELOG.TXT:	- fixed font names bug
CHANGELOG.TXT:1.53.0.TC017 (2006-05-18)
CHANGELOG.TXT:	- the TTF2UFM utility to convert True Type fonts for TCPDF were included on fonts folder.
CHANGELOG.TXT:	- new free unicode fonts were included on /fonts/freefont.
CHANGELOG.TXT:	- test_unicode.php example were exended.
CHANGELOG.TXT:	- parameter $fill were added on Write, writeHTML and writeHTMLCell functions.
CHANGELOG.TXT:	- documentation were updated.
CHANGELOG.TXT:1.53.0.TC016 (2006-03-09)
CHANGELOG.TXT:	- fixed closing <strong> tag on html parser.
CHANGELOG.TXT:1.53.0.TC016 (2005-08-28)
CHANGELOG.TXT:	- fpdf.php and tcpdf.php files were joined in one single class (you can still extend TCPDF with your own class).
CHANGELOG.TXT:	- fixed problem when mb_internal_encoding is set.
CHANGELOG.TXT:1.53.0.TC014 (2005-05-29)
CHANGELOG.TXT:	- fixed WriteHTMLCell new page issue.
CHANGELOG.TXT:1.53.0.TC013 (2005-05-29)
CHANGELOG.TXT:	- fixed WriteHTMLCell across pages.
CHANGELOG.TXT:1.53.0.TC012 (2005-05-29)
CHANGELOG.TXT:	- font color attribute bug were fixed.
CHANGELOG.TXT:1.53.0.TC011 (2005-03-31)
CHANGELOG.TXT:	- SetFont function were fixed (thank Sjaak Lauwers for bug notice).
CHANGELOG.TXT:1.53.0.TC010 (2005-03-22)
CHANGELOG.TXT:	- the html functions were improved (thanks to Manfred Vervuert for bug reporting).
CHANGELOG.TXT:1.53.0.TC009 (2005-03-19)
CHANGELOG.TXT:	- a wrong reference to convertColorHexToDec were fixed.
CHANGELOG.TXT:1.53.0.TC008 (2005-02-07)
CHANGELOG.TXT:	- removed some extra bytes from PHP files.
CHANGELOG.TXT:1.53.0.TC007 (2005-01-08)
CHANGELOG.TXT:	- fill attribute were removed from writeHTMLCell method.
CHANGELOG.TXT:1.53.0.TC006 (2005-01-08)
CHANGELOG.TXT:	- the documentation were updated.
CHANGELOG.TXT:1.53.0.TC005 (2005-01-05)
CHANGELOG.TXT:	- Steven Wittens's unicode methods were removed.
CHANGELOG.TXT:	- All unicode methods were rewritten from scratch.
CHANGELOG.TXT:	- TCPDF is now licensed as LGPL.
CHANGELOG.TXT:1.53.0.TC004 (2005-01-04)
CHANGELOG.TXT:	- this changelog were added.
CHANGELOG.TXT:	- removed commercial fonts for licensing issue.
CHANGELOG.TXT:	- Bitstream Vera Fonts were added (http://www.bitstream.com/font_rendering/products/dev_fonts/vera.html).
CHANGELOG.TXT:	- Now the AddFont and SetFont functions returns the basic font if the styled version do not exist.
CHANGELOG.TXT:EOF --------------------------------------------------------
LICENSE.TXT:  2002-2019 Nicola Asuni - Tecnick.com LTD
LICENSE.TXT:       of the Library that is interface-compatible with the Linked
LICENSE.TXT:share and change all versions of a program--to make sure it remains free
LICENSE.TXT:software on general-purpose computers, but in those that do, we wish to
LICENSE.TXT:patents cannot be used to render the program non-free.
LICENSE.TXT:  "Copyright" also means copyright-like laws that apply to other kinds of
LICENSE.TXT:for making modifications to it.  "Object code" means any non-source
LICENSE.TXT:System Libraries, or general-purpose tools or generally available free
LICENSE.TXT:  3. Protecting Users' Legal Rights From Anti-Circumvention Law.
LICENSE.TXT:non-permissive terms added in accord with section 7 apply to the code;
LICENSE.TXT:  6. Conveying Non-Source Forms.
LICENSE.TXT:machine-readable Corresponding Source under the terms of this License,
LICENSE.TXT:    e) Convey the object code using peer-to-peer transmission, provided
LICENSE.TXT:commercial, industrial or non-consumer uses, unless such uses represent
LICENSE.TXT:  All other non-permissive additional terms are considered "further
LICENSE.TXT:  Additional terms, permissive or non-permissive, may be stated in the
LICENSE.TXT:occurring solely as a consequence of using peer-to-peer transmission
LICENSE.TXT:(including a cross-claim or counterclaim in a lawsuit) alleging that
LICENSE.TXT:  Each contributor grants you a non-exclusive, worldwide, royalty-free
LICENSE.TXT:conditioned on the non-exercise of one or more of the rights that are
LICENSE.TXT:<http://www.gnu.org/philosophy/why-not-lgpl.html>.
README.md:[![Donate via PayPal](https://img.shields.io/badge/donate-paypal-87ceeb.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&currency_code=GBP&business=paypal@tecnick.com&item_name=donation%20for%20TCPDF%20project)
README.md:*Please consider supporting this project by making a donation via [PayPal](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&currency_code=GBP&business=paypal@tecnick.com&item_name=donation%20for%20TCPDF%20project)*
README.md:* **copyright**   2002-2021 Nicola Asuni - Tecnick.com LTD
README.md:* **license**     http://www.gnu.org/copyleft/lesser.html GNU-LGPL v3 (see LICENSE.TXT)
README.md:A new version of this library is under development at https://github.com/tecnickcom/tc-lib-pdf and as a consequence this version will not receive any additional development or support.
README.md:PHP library for generating PDF documents on-the-fly.
README.md:* UTF-8 Unicode and Right-To-Left languages;
README.md:* TrueTypeUnicode, OpenTypeUnicode v1, TrueType, OpenType v1, Type1 and CID-0 fonts;
README.md:* 1D and 2D barcodes: CODE 39, ANSI MH10.8M-1983, USD-3, 3 of 9, CODE 93, USS-93, Standard 2 of 5, Interleaved 2 of 5, CODE 128 A/B/C, 2 and 5 Digits UPC-Based Extension, EAN 8, EAN 13, UPC-A, UPC-E, MSI, POSTNET, PLANET, RMS4CC (Royal Mail 4-state Customer Code), CBC (Customer Bar Code), KIX (Klant index - Customer index), Intelligent Mail Barcode, Onecode, USPS-B-3200, CODABAR, CODE 11, PHARMACODE, PHARMACODE TWO-TRACKS, Datamatrix, QR-Code, PDF417;
README.md:* no-write page regions;
README.md:* page compression (requires php-zlib extension);
README.md:* PDF/A-1b support.
README.md:All the PHP files on the fonts directory are subject to the general TCPDF license (GNU-LGPLv3),
README.md:The binary files (.z) that begins with the prefix "free" have been extracted from the GNU FreeFont collection (GNU-GPLv3).
README.md:For the details of Copyright, License and other information, please check the files inside the directory fonts/freefont-20120503
README.md:For the details of Copyright, License and other information, please check the files inside the directory fonts/dejavu-fonts-ttf-2.33
README.md:Link : http://dejavu-fonts.org
README.md:The binary files (.z) that begins with the prefix "ae" have been extracted from the Arabeyes.org collection (GNU-GPLv2).
README.md:TCPDF includes the sRGB.icc profile from the icc-profiles-free Debian package:
README.md:https://packages.debian.org/source/stable/icc-profiles-free
composer.json:        "PDFD32000-2008",
composer.json:    "license": "LGPL-3.0-only",
tcpdf.php:// Begin       : 2002-08-03
tcpdf.php:// Last Update : 2021-12-31
tcpdf.php:// Author      : Nicola Asuni - Tecnick.com LTD - www.tecnick.com - info@tecnick.com
tcpdf.php:// License     : GNU-LGPL v3 (http://www.gnu.org/copyleft/lesser.html)
tcpdf.php:// -------------------------------------------------------------------
tcpdf.php:// Copyright (C) 2002-2021 Nicola Asuni - Tecnick.com LTD
tcpdf.php:// -------------------------------------------------------------------
tcpdf.php://  * UTF-8 Unicode and Right-To-Left languages;
tcpdf.php://  * TrueTypeUnicode, TrueType, Type1 and CID-0 fonts;
tcpdf.php://  * 1D and 2D barcodes: CODE 39, ANSI MH10.8M-1983, USD-3, 3 of 9, CODE 93, USS-93, Standard 2 of 5, Interleaved 2 of 5, CODE 128 A/B/C, 2 and 5 Digits UPC-Based Extension, EAN 8, EAN 13, UPC-A, UPC-E, MSI, POSTNET, PLANET, RMS4CC (Royal Mail 4-state Customer Code), CBC (Customer Bar Code), KIX (Klant index - Customer index), Intelligent Mail Barcode, Onecode, USPS-B-3200, CODABAR, CODE 11, PHARMACODE, PHARMACODE TWO-TRACKS, Datamatrix, QR-Code, PDF417;
tcpdf.php://  * no-write page regions;
tcpdf.php://  * page compression (requires php-zlib extension);
tcpdf.php://	* PDF/A-1b support
tcpdf.php: * <li>UTF-8 Unicode and Right-To-Left languages;</li>
tcpdf.php: * <li>TrueTypeUnicode, TrueType, Type1 and CID-0 fonts;</li>
tcpdf.php: * <li>1D and 2D barcodes: CODE 39, ANSI MH10.8M-1983, USD-3, 3 of 9, CODE 93, USS-93, Standard 2 of 5, Interleaved 2 of 5, CODE 128 A/B/C, 2 and 5 Digits UPC-Based Extension, EAN 8, EAN 13, UPC-A, UPC-E, MSI, POSTNET, PLANET, RMS4CC (Royal Mail 4-state Customer Code), CBC (Customer Bar Code), KIX (Klant index - Customer index), Intelligent Mail Barcode, Onecode, USPS-B-3200, CODABAR, CODE 11, PHARMACODE, PHARMACODE TWO-TRACKS, Datamatrix, QR-Code, PDF417;</li>
tcpdf.php: * <li>no-write page regions;</li>
tcpdf.php: * <li>page compression (requires php-zlib extension);</li>
tcpdf.php: * <li>PDF/A-1b support.</li>
tcpdf.php:// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
tcpdf.php: * @author Nicola Asuni - info@tecnick.com
tcpdf.php:	 * Buffer holding in-memory PDF.
tcpdf.php:	 * @since 5.9.000 (2010-10-03)
tcpdf.php:	 * @since 5.9.000 (2010-10-04)
tcpdf.php:	 * @since 2.8.000 (2007-03-29)
tcpdf.php:	 * @since 2.8.000 (2007-03-29)
tcpdf.php:	 * The right-bottom (or left-bottom for RTL) corner X coordinate of last inserted image.
tcpdf.php:	 * @since 2002-07-31
tcpdf.php:	 * The right-bottom corner Y coordinate of last inserted image.
tcpdf.php:	 * @since 2002-07-31
tcpdf.php:	 * @since 2004-06-14
tcpdf.php:	 * @since 2005-01-02
tcpdf.php:	 * ID of the stored default header template (-1 = not set).
tcpdf.php:	 * @phpstan-var array{0: string, 1: string, 2: float|null}
tcpdf.php:	 * @phpstan-var array{0: string, 1: string, 2: float|null}
tcpdf.php:	 * @since 5.9.174 (2012-07-25)
tcpdf.php:	 * @phpstan-var array{0: int, 1: int, 2: int}
tcpdf.php:	 * @since 5.9.174 (2012-07-25)
tcpdf.php:	 * @phpstan-var array{0: int, 1: int, 2: int}
tcpdf.php:	 * @since 5.9.174 (2012-07-25)
tcpdf.php:	 * @phpstan-var array{0: int, 1: int, 2: int}
tcpdf.php:	 * @since 5.9.174 (2012-07-25)
tcpdf.php:	 * @phpstan-var array{0: int, 1: int, 2: int}
tcpdf.php:	 * @since 5.9.174 (2012-07-25)
tcpdf.php:	protected $encoding = 'UTF-8';
tcpdf.php:	 * Boolean flag to indicate if the document language is Right-To-Left.
tcpdf.php:	// --- Variables used for document encryption:
tcpdf.php:	 * @since 2.0.000 (2008-01-02)
tcpdf.php:	 * @since 5.0.005 (2010-05-11)
tcpdf.php:	 * @since 2.0.000 (2008-01-02)
tcpdf.php:	 * @since 2.0.000 (2008-01-02)
tcpdf.php:	 * @since 5.0.005 (2010-05-12)
tcpdf.php:	// --- bookmark ---
tcpdf.php:	 * @since 2.1.002 (2008-02-12)
tcpdf.php:	 * @since 2.1.002 (2008-02-12)
tcpdf.php:	// --- javascript and form ---
tcpdf.php:	 * @since 2.1.002 (2008-02-12)
tcpdf.php:	 * @since 2.1.002 (2008-02-12)
tcpdf.php:	 * @since 2.8.000 (2008-03-19)
tcpdf.php:	 * Array with additional document-wide usage rights for the document.
tcpdf.php:	 * @since 5.8.014 (2010-08-23)
tcpdf.php:	 * @since 3.0.000 (2008-03-27)
tcpdf.php:	 * @since 3.0.000 (2008-03-27)
tcpdf.php:	 * @since 3.0.000 (2008-03-27)
tcpdf.php:	 * @since 3.0.000 (2008-03-27)
tcpdf.php:	 * @since 3.0.000 (2008-03-27)
tcpdf.php:	 * Set the default JPEG compression quality (1-100).
tcpdf.php:	 * @since 3.0.000 (2008-03-27)
tcpdf.php:	 * @since 3.0.014 (2008-05-23)
tcpdf.php:	 * @since 3.1.000 (2008-06-09)
tcpdf.php:	 * @since 3.1.000 (2008-06-09)
tcpdf.php:	 * @since 3.1.000 (2008-06-09)
tcpdf.php:	 * @since 3.2.000 (2008-06-26)
tcpdf.php:	 * @since 5.7.000 (2010-08-03)
tcpdf.php:	 * @since 5.8.007 (2010-08-18)
tcpdf.php:	 * @since 4.6.021 (2009-07-20)
tcpdf.php:	 * @since 3.2.000 (2008-07-01)
tcpdf.php:	 * @since 4.0.014 (2008-07-29)
tcpdf.php:	 * @since 3.2.000 (2008-07-01)
tcpdf.php:	 * @since 3.2.000 (2008-07-01)
tcpdf.php:	 * @since 4.0.006 (2008-07-16)
tcpdf.php:	 * @since 4.0.006 (2008-07-16)
tcpdf.php:	 * @since 4.0.006 (2008-07-16)
tcpdf.php:	 * @since 4.0.006 (2008-07-16)
tcpdf.php:	 * Boolean flag to indicate if marked-content sequence is open.
tcpdf.php:	 * @since 4.0.013 (2008-07-28)
tcpdf.php:	 * @since 4.0.021 (2008-08-24)
tcpdf.php:	 * @since 4.0.024 (2008-09-12)
tcpdf.php:	 * @since 4.0.028 (2008-09-26)
tcpdf.php:	 * @since 4.1.000 (2008-10-18)
tcpdf.php:	 * @since 4.2.000 (2008-10-29)
tcpdf.php:	 * @since 4.8.005 (2009-09-17)
tcpdf.php:	 * Booklet mode for double-sided pages.
tcpdf.php:	 * @since 4.2.000 (2008-10-29)
tcpdf.php:	 * @since 4.2.000 (2008-10-29)
tcpdf.php:	 * @since 4.2.001 (2008-10-30)
tcpdf.php:	 * @since 4.2.007 (2008-11-12)
tcpdf.php:	protected $customlistindent = -1;
tcpdf.php:	 * @since 4.2.010 (2008-11-14)
tcpdf.php:	 * @since 4.4.000 (2008-12-07)
tcpdf.php:	 * @since 4.4.001 (2008-12-08)
tcpdf.php:	 * @since 4.4.002 (2008-12-09)
tcpdf.php:	 * @since 4.4.003 (2008-12-09)
tcpdf.php:	 * @since 4.4.003 (2008-12-09)
tcpdf.php:	 * @since 4.5.000 (2008-12-31)
tcpdf.php:	 * @since 4.5.000 (2008-12-31)
tcpdf.php:	 * @since 4.5.000 (2008-12-31)
tcpdf.php:	 * @since 4.5.000 (2008-12-31)
tcpdf.php:	 * @since 4.5.000 (2008-12-31)
tcpdf.php:	 * @since 4.5.000 (2009-01-02)
tcpdf.php:	 * @since 4.5.000 (2009-01-02)
tcpdf.php:	 * @since 4.8.001 (2009-09-09)
tcpdf.php:	 * @since 4.5.000 (2009-01-02)
tcpdf.php:	 * @since 4.5.025 (2009-03-10)
tcpdf.php:	 * @since 4.5.029 (2009-03-19)
tcpdf.php:	 * @since 4.5.029 (2009-03-19)
tcpdf.php:	 * @since 4.5.030 (2009-03-20)
tcpdf.php:	 * @since 4.5.030 (2009-03-20)
tcpdf.php:	 * @since 4.6.005 (2009-04-24)
tcpdf.php:	 * @since 4.6.005 (2009-04-24)
tcpdf.php:	 * @since 4.6.005 (2009-04-24)
tcpdf.php:	 * @since 5.3.011 (2010-06-16)
tcpdf.php:	 * @since 5.9.101 (2011-07-06)
tcpdf.php:	 * @since 6.0.085 (2014-06-19)
tcpdf.php:	 * @since 6.0.085 (2014-06-19)
tcpdf.php:	 * Regular expression used to find blank characters (required for word-wrapping).
tcpdf.php:	 * @since 4.6.006 (2009-04-28)
tcpdf.php:	 * @since 5.5.011 (2010-07-09)
tcpdf.php:	 * @since 4.6.022 (2009-06-23)
tcpdf.php:	 * @since 4.7.000 (2009-08-29)
tcpdf.php:	 * @since 4.8.000 (2009-09-07)
tcpdf.php:	 * @since 4.8.000 (2009-09-07)
tcpdf.php:	 * @since 4.8.000 (2009-09-07)
tcpdf.php:	 * @since 4.8.000 (2009-09-07)
tcpdf.php:	 * @since 4.8.000 (2009-09-07)
tcpdf.php:	protected $form_enctype = 'application/x-www-form-urlencoded';
tcpdf.php:	 * @since 4.8.000 (2009-09-07)
tcpdf.php:	 * @since 4.8.001 (2009-09-09)
tcpdf.php:	 * @since 4.8.001 (2009-09-09)
tcpdf.php:	 * @since 4.8.001 (2009-09-09)
tcpdf.php:	 * Text indentation value (used for text-indent CSS attribute).
tcpdf.php:	 * @since 4.8.006 (2009-09-23)
tcpdf.php:	 * @since 4.8.006 (2009-09-23)
tcpdf.php:	 * @since 4.9.001 (2010-03-28)
tcpdf.php:	 * @since 4.8.027 (2010-01-25)
tcpdf.php:	 * @since 4.9.001 (2010-03-28)
tcpdf.php:	 * @since 4.9.001 (2010-03-28)
tcpdf.php:	 * @since 4.9.001 (2010-03-28)
tcpdf.php:	 * @since 4.9.001 (2010-03-28)
tcpdf.php:	 * @since 5.8.000 (2010-08-11)
tcpdf.php:	 * @since 5.8.000 (2010-08-11)
tcpdf.php:	 * @since 4.9.008 (2010-04-03)
tcpdf.php:	 * @since 4.9.008 (2010-04-03)
tcpdf.php:	 * @since 4.9.008 (2010-04-03)
tcpdf.php:	 * @since 5.0.000 (2010-04-22)
tcpdf.php:	 * @since 5.0.000 (2010-04-26)
tcpdf.php:	 * @since 5.3.002 (2010-06-07)
tcpdf.php:	 * @since 5.5.008 (2010-07-02)
tcpdf.php:	 * @since 5.8.014 (2010-08-23)
tcpdf.php:	 * @since 5.8.017 (2010-08-24)
tcpdf.php:	 * @since 5.8.017 (2010-08-24)
tcpdf.php:	 * @since 5.9.000 (2010-09-29)
tcpdf.php:	 * @since 5.9.000 (2010-09-29)
tcpdf.php:	 * Array of no-write regions.
tcpdf.php:	 * @since 5.9.003 (2010-10-14)
tcpdf.php:	 * @since 5.9.102 (2011-07-13)
tcpdf.php:	 * @since 5.9.097 (2011-06-23)
tcpdf.php:	 * @since 5.9.097 (2011-06-23)
tcpdf.php:	 * @since 5.9.204 (2013-01-23)
tcpdf.php:	 * @since 5.0.000 (2010-05-05)
tcpdf.php:	 * @since 5.0.000 (2010-05-02)
tcpdf.php:	 * @since 5.0.000 (2010-05-02)
tcpdf.php:	 * @since 5.0.000 (2010-05-02)
tcpdf.php:	 * @since 5.0.000 (2010-05-02)
tcpdf.php:	 * @since 5.0.000 (2010-05-02)
tcpdf.php:	 * @since 5.0.000 (2010-04-26)
tcpdf.php:	 * @since 5.0.000 (2010-05-02)
tcpdf.php:	 * @since 5.8.022 (2010-08-31)
tcpdf.php:	 * @since 5.0.000 (2010-05-02)
tcpdf.php:	 * @since 5.0.000 (2010-05-02)
tcpdf.php:	 * @since 5.8.013 (2010-08-23)
tcpdf.php:	 * @since 5.0.000 (2010-05-02)
tcpdf.php:		'alignment-baseline' => 'auto',
tcpdf.php:		'baseline-shift' => 'baseline',
tcpdf.php:		'clip-path' => 'none',
tcpdf.php:		'clip-rule' => 'nonzero',
tcpdf.php:		'color-interpolation' => 'sRGB',
tcpdf.php:		'color-interpolation-filters' => 'linearRGB',
tcpdf.php:		'color-profile' => 'auto',
tcpdf.php:		'color-rendering' => 'auto',
tcpdf.php:		'dominant-baseline' => 'auto',
tcpdf.php:		'enable-background' => 'accumulate',
tcpdf.php:		'fill-opacity' => 1,
tcpdf.php:		'fill-rule' => 'nonzero',
tcpdf.php:		'flood-color' => 'black',
tcpdf.php:		'flood-opacity' => 1,
tcpdf.php:		'font-family' => 'helvetica',
tcpdf.php:		'font-size' => 'medium',
tcpdf.php:		'font-size-adjust' => 'none',
tcpdf.php:		'font-stretch' => 'normal',
tcpdf.php:		'font-style' => 'normal',
tcpdf.php:		'font-variant' => 'normal',
tcpdf.php:		'font-weight' => 'normal',
tcpdf.php:		'glyph-orientation-horizontal' => '0deg',
tcpdf.php:		'glyph-orientation-vertical' => 'auto',
tcpdf.php:		'image-rendering' => 'auto',
tcpdf.php:		'letter-spacing' => 'normal',
tcpdf.php:		'lighting-color' => 'white',
tcpdf.php:		'marker-end' => 'none',
tcpdf.php:		'marker-mid' => 'none',
tcpdf.php:		'marker-start' => 'none',
tcpdf.php:		'pointer-events' => 'visiblePainted',
tcpdf.php:		'shape-rendering' => 'auto',
tcpdf.php:		'stop-color' => 'black',
tcpdf.php:		'stop-opacity' => 1,
tcpdf.php:		'stroke-dasharray' => 'none',
tcpdf.php:		'stroke-dashoffset' => 0,
tcpdf.php:		'stroke-linecap' => 'butt',
tcpdf.php:		'stroke-linejoin' => 'miter',
tcpdf.php:		'stroke-miterlimit' => 4,
tcpdf.php:		'stroke-opacity' => 1,
tcpdf.php:		'stroke-width' => 1,
tcpdf.php:		'text-anchor' => 'start',
tcpdf.php:		'text-decoration' => 'none',
tcpdf.php:		'text-rendering' => 'auto',
tcpdf.php:		'unicode-bidi' => 'normal',
tcpdf.php:		'word-spacing' => 'normal',
tcpdf.php:		'writing-mode' => 'lr-tb',
tcpdf.php:		'text-color' => 'black',
tcpdf.php:	 * @since 5.9.121 (2011-09-28)
tcpdf.php:	 * @since 5.9.121 (2011-09-27)
tcpdf.php:	 * version of PDF/A mode (1 - 3).
tcpdf.php:	 * @since 6.2.26 (2019-03-12)
tcpdf.php:	 * Document creation date-time
tcpdf.php:	 * @since 5.9.152 (2012-03-22)
tcpdf.php:	 * Document modification date-time
tcpdf.php:	 * @since 5.9.152 (2012-03-22)
tcpdf.php:	 * @since 5.9.128 (2011-10-06)
tcpdf.php:	 * @since 6.3.0 (2019-09-19)
tcpdf.php:	 * (Check the "Entries in a Graphics State Parameter Dictionary" on PDF 32000-1:2008).
tcpdf.php:	 * @since 5.9.152 (2012-03-23)
tcpdf.php:	 * (Check the "Entries in a Graphics State Parameter Dictionary" on PDF 32000-1:2008).
tcpdf.php:	 * @since 5.9.152 (2012-03-23)
tcpdf.php:	 * @since 5.9.152 (2012-03-23)
tcpdf.php:	 * @since 5.9.152 (2012-03-23)
tcpdf.php:	 * @since 5.9.1632 (2012-06-05)
tcpdf.php:     * @since 6.3.5 (2020-09-28)
tcpdf.php:	 * @since 6.4 (2020-07-23)
tcpdf.php:	//------------------------------------------------------------
tcpdf.php:	//------------------------------------------------------------
tcpdf.php:	 * @param string $encoding Charset encoding (used only when converting back html entities); default is UTF-8.
tcpdf.php:	public function __construct($orientation='P', $unit='mm', $format='A4', $unicode=true, $encoding='UTF-8', $diskcache=false, $pdfa=false) {
tcpdf.php:		$this->file_id = md5(TCPDF_STATIC::getRandomSeed('TCPDF'.$orientation.$unit.$serformat.$encoding));
tcpdf.php:		$this->font_obj_ids = array();
tcpdf.php:		$this->page_obj_id = array();
tcpdf.php:		$this->form_obj_id = array();
tcpdf.php:			$this->pdfa_mode = true;
tcpdf.php:			$this->pdfa_version = $pdfa;  // 1 or 3
tcpdf.php:			$this->pdfa_mode = false;
tcpdf.php:		$this->force_srgb = false;
tcpdf.php:		$this->rtl = false;
tcpdf.php:		$this->tmprtl = false;
tcpdf.php:		$this->_dochecks();
tcpdf.php:		$this->isunicode = $unicode;
tcpdf.php:		$this->page = 0;
tcpdf.php:		$this->transfmrk[0] = array();
tcpdf.php:		$this->pagedim = array();
tcpdf.php:		$this->n = 2;
tcpdf.php:		$this->buffer = '';
tcpdf.php:		$this->pages = array();
tcpdf.php:		$this->state = 0;
tcpdf.php:		$this->fonts = array();
tcpdf.php:		$this->FontFiles = array();
tcpdf.php:		$this->diffs = array();
tcpdf.php:		$this->images = array();
tcpdf.php:		$this->links = array();
tcpdf.php:		$this->gradients = array();
tcpdf.php:		$this->InFooter = false;
tcpdf.php:		$this->lasth = 0;
tcpdf.php:		$this->FontFamily = defined('PDF_FONT_NAME_MAIN')?PDF_FONT_NAME_MAIN:'helvetica';
tcpdf.php:		$this->FontStyle = '';
tcpdf.php:		$this->FontSizePt = 12;
tcpdf.php:		$this->underline = false;
tcpdf.php:		$this->overline = false;
tcpdf.php:		$this->linethrough = false;
tcpdf.php:		$this->DrawColor = '0 G';
tcpdf.php:		$this->FillColor = '0 g';
tcpdf.php:		$this->TextColor = '0 g';
tcpdf.php:		$this->ColorFlag = false;
tcpdf.php:		$this->pdflayers = array();
tcpdf.php:		$this->encrypted = false;
tcpdf.php:		$this->last_enc_key = '';
tcpdf.php:		$this->CoreFonts = array(
tcpdf.php:			'courierB'=>'Courier-Bold',
tcpdf.php:			'courierI'=>'Courier-Oblique',
tcpdf.php:			'courierBI'=>'Courier-BoldOblique',
tcpdf.php:			'helveticaB'=>'Helvetica-Bold',
tcpdf.php:			'helveticaI'=>'Helvetica-Oblique',
tcpdf.php:			'helveticaBI'=>'Helvetica-BoldOblique',
tcpdf.php:			'times'=>'Times-Roman',
tcpdf.php:			'timesB'=>'Times-Bold',
tcpdf.php:			'timesI'=>'Times-Italic',
tcpdf.php:			'timesBI'=>'Times-BoldItalic',
tcpdf.php:		$this->setPageUnit($unit);
tcpdf.php:		$this->setPageFormat($format, $orientation);
tcpdf.php:		$margin = 28.35 / $this->k;
tcpdf.php:		$this->setMargins($margin, $margin);
tcpdf.php:		$this->clMargin = $this->lMargin;
tcpdf.php:		$this->crMargin = $this->rMargin;
tcpdf.php:		$this->setCellPaddings($cpadding, 0, $cpadding, 0);
tcpdf.php:		$this->setCellMargins(0, 0, 0, 0);
tcpdf.php:		$this->LineWidth = 0.57 / $this->k;
tcpdf.php:		$this->linestyleWidth = sprintf('%F w', ($this->LineWidth * $this->k));
tcpdf.php:		$this->linestyleCap = '0 J';
tcpdf.php:		$this->linestyleJoin = '0 j';
tcpdf.php:		$this->linestyleDash = '[] 0 d';
tcpdf.php:		$this->setAutoPageBreak(true, (2 * $margin));
tcpdf.php:		$this->setDisplayMode('fullwidth');
tcpdf.php:		$this->setCompression();
tcpdf.php:		$this->setPDFVersion();
tcpdf.php:		$this->tcpdflink = true;
tcpdf.php:		$this->encoding = $encoding;
tcpdf.php:		$this->HREF = array();
tcpdf.php:		$this->getFontsList();
tcpdf.php:		$this->fgcolor = array('R' => 0, 'G' => 0, 'B' => 0);
tcpdf.php:		$this->strokecolor = array('R' => 0, 'G' => 0, 'B' => 0);
tcpdf.php:		$this->bgcolor = array('R' => 255, 'G' => 255, 'B' => 255);
tcpdf.php:		$this->extgstates = array();
tcpdf.php:		$this->setTextShadow();
tcpdf.php:		$this->sign = false;
tcpdf.php:		$this->tsa_timestamp = false;
tcpdf.php:		$this->tsa_data = array();
tcpdf.php:		$this->signature_appearance = array('page' => 1, 'rect' => '0 0 0 0', 'name' => 'Signature');
tcpdf.php:		$this->empty_signature_appearance = array();
tcpdf.php:		$this->ur['enabled'] = false;
tcpdf.php:		$this->ur['document'] = '/FullSave';
tcpdf.php:		$this->ur['annots'] = '/Create/Delete/Modify/Copy/Import/Export';
tcpdf.php:		$this->ur['form'] = '/Add/Delete/FillIn/Import/Export/SubmitStandalone/SpawnTemplate';
tcpdf.php:		$this->ur['signature'] = '/Modify';
tcpdf.php:		$this->ur['ef'] = '/Create/Delete/Modify/Import';
tcpdf.php:		$this->ur['formex'] = '';
tcpdf.php:		$this->jpeg_quality = 75;
tcpdf.php:		TCPDF_FONTS::utf8Bidi(array(), '', false, $this->isunicode, $this->CurrentFont);
tcpdf.php:		$this->setFont($this->FontFamily, $this->FontStyle, $this->FontSizePt);
tcpdf.php:		$this->setHeaderFont(array($this->FontFamily, $this->FontStyle, $this->FontSizePt));
tcpdf.php:		$this->setFooterFont(array($this->FontFamily, $this->FontStyle, $this->FontSizePt));
tcpdf.php:		if ($this->isunicode AND (@preg_match('/\pL/u', 'a') == 1)) {
tcpdf.php:			// \xa0   : Unicode Character 'NO-BREAK SPACE' (U+00A0)
tcpdf.php:			//$this->setSpacesRE('/(?!\xa0)[\s\p{Z}\p{Lo}]/u');
tcpdf.php:			$this->setSpacesRE('/(?!\xa0)[\s\p{Z}]/u');
tcpdf.php:			$this->setSpacesRE('/[^\S\xa0]/');
tcpdf.php:		$this->default_form_prop = array('lineWidth'=>1, 'borderStyle'=>'solid', 'fillColor'=>array(255, 255, 255), 'strokeColor'=>array(128, 128, 128));
tcpdf.php:		$this->doc_creation_timestamp = time();
tcpdf.php:		$this->doc_modification_timestamp = $this->doc_creation_timestamp;
tcpdf.php:		$this->default_graphic_vars = $this->getGraphicVars();
tcpdf.php:		$this->header_xobj_autoreset = false;
tcpdf.php:		$this->custom_xmp = '';
tcpdf.php:		$this->custom_xmp_rdf = '';
tcpdf.php:		$this->_destroy(true);
tcpdf.php:	 * @since 3.0.015 (2008-06-06)
tcpdf.php:				$this->k = 1;
tcpdf.php:				$this->k = $this->dpi / 25.4;
tcpdf.php:				$this->k = $this->dpi / 2.54;
tcpdf.php:				$this->k = $this->dpi;
tcpdf.php:				$this->Error('Incorrect unit: '.$unit);
tcpdf.php:		$this->pdfunit = $unit;
tcpdf.php:		if (isset($this->CurOrientation)) {
tcpdf.php:			$this->setPageOrientation($this->CurOrientation);
tcpdf.php:	 * <li>['MediaBox']['llx'] : lower-left x coordinate</li>
tcpdf.php:	 * <li>['MediaBox']['lly'] : lower-left y coordinate</li>
tcpdf.php:	 * <li>['MediaBox']['urx'] : upper-right x coordinate</li>
tcpdf.php:	 * <li>['MediaBox']['ury'] : upper-right y coordinate</li>
tcpdf.php:	 * <li>['CropBox']['llx'] : lower-left x coordinate</li>
tcpdf.php:	 * <li>['CropBox']['lly'] : lower-left y coordinate</li>
tcpdf.php:	 * <li>['CropBox']['urx'] : upper-right x coordinate</li>
tcpdf.php:	 * <li>['CropBox']['ury'] : upper-right y coordinate</li>
tcpdf.php:	 * <li>['BleedBox']['llx'] : lower-left x coordinate</li>
tcpdf.php:	 * <li>['BleedBox']['lly'] : lower-left y coordinate</li>
tcpdf.php:	 * <li>['BleedBox']['urx'] : upper-right x coordinate</li>
tcpdf.php:	 * <li>['BleedBox']['ury'] : upper-right y coordinate</li>
tcpdf.php:	 * <li>['TrimBox']['llx'] : lower-left x coordinate</li>
tcpdf.php:	 * <li>['TrimBox']['lly'] : lower-left y coordinate</li>
tcpdf.php:	 * <li>['TrimBox']['urx'] : upper-right x coordinate</li>
tcpdf.php:	 * <li>['TrimBox']['ury'] : upper-right y coordinate</li>
tcpdf.php:	 * <li>['ArtBox']['llx'] : lower-left x coordinate</li>
tcpdf.php:	 * <li>['ArtBox']['lly'] : lower-left y coordinate</li>
tcpdf.php:	 * <li>['ArtBox']['urx'] : upper-right x coordinate</li>
tcpdf.php:	 * <li>['ArtBox']['ury'] : upper-right y coordinate</li>
tcpdf.php:	 * <li>['BoxColorInfo'][BOXTYPE]['C'] : an array of three numbers in the range 0-255, representing the components in the DeviceRGB colour space.</li>
tcpdf.php:	 * <li>['trans']['Di'] : (Wipe, Glitter, Fly, Cover, Uncover and Push transition styles only) The direction in which the specified transition effect shall moves, expressed in degrees counterclockwise starting from a left-to-right direction. If the value is a number, it shall be one of: 0 = Left to right, 90 = Bottom to top (Wipe only), 180 = Right to left (Wipe only), 270 = Top to bottom, 315 = Top-left to bottom-right (Glitter only). If the value is a name, it shall be None, which is relevant only for the Fly transition when the value of SS is not 1.0. Default value: 0.</li>
tcpdf.php:	 * @since 3.0.015 (2008-06-06)
tcpdf.php:		if (!empty($format) AND isset($this->pagedim[$this->page])) {
tcpdf.php:			unset($this->pagedim[$this->page]);
tcpdf.php:			$this->fwPt = $pf[0];
tcpdf.php:			$this->fhPt = $pf[1];
tcpdf.php:				$this->pagedim = TCPDF_STATIC::setPageBoxes($this->page, 'MediaBox', $format['MediaBox']['llx'], $format['MediaBox']['lly'], $format['MediaBox']['urx'], $format['MediaBox']['ury'], false, $this->k, $this->pagedim);
tcpdf.php:				$this->fwPt = (($format['MediaBox']['urx'] - $format['MediaBox']['llx']) * $this->k);
tcpdf.php:				$this->fhPt = (($format['MediaBox']['ury'] - $format['MediaBox']['lly']) * $this->k);
tcpdf.php:					$pf = array(($format[0] * $this->k), ($format[1] * $this->k));
tcpdf.php:				$this->fwPt = $pf[0];
tcpdf.php:				$this->fhPt = $pf[1];
tcpdf.php:				$this->pagedim = TCPDF_STATIC::setPageBoxes($this->page, 'MediaBox', 0, 0, $this->fwPt, $this->fhPt, true, $this->k, $this->pagedim);
tcpdf.php:				$this->pagedim = TCPDF_STATIC::setPageBoxes($this->page, 'CropBox', $format['CropBox']['llx'], $format['CropBox']['lly'], $format['CropBox']['urx'], $format['CropBox']['ury'], false, $this->k, $this->pagedim);
tcpdf.php:				$this->pagedim = TCPDF_STATIC::setPageBoxes($this->page, 'BleedBox', $format['BleedBox']['llx'], $format['BleedBox']['lly'], $format['BleedBox']['urx'], $format['BleedBox']['ury'], false, $this->k, $this->pagedim);
tcpdf.php:				$this->pagedim = TCPDF_STATIC::setPageBoxes($this->page, 'TrimBox', $format['TrimBox']['llx'], $format['TrimBox']['lly'], $format['TrimBox']['urx'], $format['TrimBox']['ury'], false, $this->k, $this->pagedim);
tcpdf.php:				$this->pagedim = TCPDF_STATIC::setPageBoxes($this->page, 'ArtBox', $format['ArtBox']['llx'], $format['ArtBox']['lly'], $format['ArtBox']['urx'], $format['ArtBox']['ury'], false, $this->k, $this->pagedim);
tcpdf.php:				$this->pagedim[$this->page]['BoxColorInfo'] = $format['BoxColorInfo'];
tcpdf.php:				$this->pagedim[$this->page]['Rotate'] = intval($format['Rotate']);
tcpdf.php:				$this->pagedim[$this->page]['PZ'] = floatval($format['PZ']);
tcpdf.php:					$this->pagedim[$this->page]['trans']['Dur'] = floatval($format['trans']['Dur']);
tcpdf.php:					$this->pagedim[$this->page]['trans']['S'] = $format['trans']['S'];
tcpdf.php:						$this->pagedim[$this->page]['trans']['Dm'] = $format['trans']['Dm'];
tcpdf.php:						$this->pagedim[$this->page]['trans']['M'] = $format['trans']['M'];
tcpdf.php:							$this->pagedim[$this->page]['trans']['Di'] = intval($format['trans']['Di']);
tcpdf.php:						$this->pagedim[$this->page]['trans']['SS'] = floatval($format['trans']['SS']);
tcpdf.php:						$this->pagedim[$this->page]['trans']['B'] = 'true';
tcpdf.php:					$this->pagedim[$this->page]['trans']['S'] = 'R';
tcpdf.php:					$this->pagedim[$this->page]['trans']['D'] = floatval($format['trans']['D']);
tcpdf.php:					$this->pagedim[$this->page]['trans']['D'] = 1;
tcpdf.php:		$this->setPageOrientation($orientation);
tcpdf.php:	 * @param boolean|null $autopagebreak Boolean indicating if auto-page-break mode should be on or off.
tcpdf.php:	 * @since 3.0.015 (2008-06-06)
tcpdf.php:		if (!isset($this->pagedim[$this->page]['MediaBox'])) {
tcpdf.php:			$this->pagedim = TCPDF_STATIC::setPageBoxes($this->page, 'MediaBox', 0, 0, $this->fwPt, $this->fhPt, true, $this->k, $this->pagedim);
tcpdf.php:		if (!isset($this->pagedim[$this->page]['CropBox'])) {
tcpdf.php:			$this->pagedim = TCPDF_STATIC::setPageBoxes($this->page, 'CropBox', $this->pagedim[$this->page]['MediaBox']['llx'], $this->pagedim[$this->page]['MediaBox']['lly'], $this->pagedim[$this->page]['MediaBox']['urx'], $this->pagedim[$this->page]['MediaBox']['ury'], true, $this->k, $this->pagedim);
tcpdf.php:		if (!isset($this->pagedim[$this->page]['BleedBox'])) {
tcpdf.php:			$this->pagedim = TCPDF_STATIC::setPageBoxes($this->page, 'BleedBox', $this->pagedim[$this->page]['CropBox']['llx'], $this->pagedim[$this->page]['CropBox']['lly'], $this->pagedim[$this->page]['CropBox']['urx'], $this->pagedim[$this->page]['CropBox']['ury'], true, $this->k, $this->pagedim);
tcpdf.php:		if (!isset($this->pagedim[$this->page]['TrimBox'])) {
tcpdf.php:			$this->pagedim = TCPDF_STATIC::setPageBoxes($this->page, 'TrimBox', $this->pagedim[$this->page]['CropBox']['llx'], $this->pagedim[$this->page]['CropBox']['lly'], $this->pagedim[$this->page]['CropBox']['urx'], $this->pagedim[$this->page]['CropBox']['ury'], true, $this->k, $this->pagedim);
tcpdf.php:		if (!isset($this->pagedim[$this->page]['ArtBox'])) {
tcpdf.php:			$this->pagedim = TCPDF_STATIC::setPageBoxes($this->page, 'ArtBox', $this->pagedim[$this->page]['CropBox']['llx'], $this->pagedim[$this->page]['CropBox']['lly'], $this->pagedim[$this->page]['CropBox']['urx'], $this->pagedim[$this->page]['CropBox']['ury'], true, $this->k, $this->pagedim);
tcpdf.php:		if (!isset($this->pagedim[$this->page]['Rotate'])) {
tcpdf.php:			$this->pagedim[$this->page]['Rotate'] = 0;
tcpdf.php:		if (!isset($this->pagedim[$this->page]['PZ'])) {
tcpdf.php:			$this->pagedim[$this->page]['PZ'] = 1;
tcpdf.php:		if ($this->fwPt > $this->fhPt) {
tcpdf.php:			$this->CurOrientation = $orientation;
tcpdf.php:			$this->wPt = $this->fhPt;
tcpdf.php:			$this->hPt = $this->fwPt;
tcpdf.php:			$this->CurOrientation = $default_orientation;
tcpdf.php:			$this->wPt = $this->fwPt;
tcpdf.php:			$this->hPt = $this->fhPt;
tcpdf.php:		if ((abs($this->pagedim[$this->page]['MediaBox']['urx'] - $this->hPt) < $this->feps) AND (abs($this->pagedim[$this->page]['MediaBox']['ury'] - $this->wPt) < $this->feps)){
tcpdf.php:			$this->pagedim = TCPDF_STATIC::swapPageBoxCoordinates($this->page, $this->pagedim);
tcpdf.php:		$this->w = ($this->wPt / $this->k);
tcpdf.php:		$this->h = ($this->hPt / $this->k);
tcpdf.php:			if (isset($this->AutoPageBreak)) {
tcpdf.php:				$autopagebreak = $this->AutoPageBreak;
tcpdf.php:			if (isset($this->bMargin)) {
tcpdf.php:				$bottommargin = $this->bMargin;
tcpdf.php:				$bottommargin = 2 * 28.35 / $this->k;
tcpdf.php:		$this->setAutoPageBreak($autopagebreak, $bottommargin);
tcpdf.php:		$this->pagedim[$this->page]['w'] = $this->wPt;
tcpdf.php:		$this->pagedim[$this->page]['h'] = $this->hPt;
tcpdf.php:		$this->pagedim[$this->page]['wk'] = $this->w;
tcpdf.php:		$this->pagedim[$this->page]['hk'] = $this->h;
tcpdf.php:		$this->pagedim[$this->page]['tm'] = $this->tMargin;
tcpdf.php:		$this->pagedim[$this->page]['bm'] = $bottommargin;
tcpdf.php:		$this->pagedim[$this->page]['lm'] = $this->lMargin;
tcpdf.php:		$this->pagedim[$this->page]['rm'] = $this->rMargin;
tcpdf.php:		$this->pagedim[$this->page]['pb'] = $autopagebreak;
tcpdf.php:		$this->pagedim[$this->page]['or'] = $this->CurOrientation;
tcpdf.php:		$this->pagedim[$this->page]['olm'] = $this->original_lMargin;
tcpdf.php:		$this->pagedim[$this->page]['orm'] = $this->original_rMargin;
tcpdf.php:	 * The pattern delimiter must be the forward-slash character "/".
tcpdf.php:	 * Non-Unicode or missing PCRE unicode support: "/[^\S\xa0]/"
tcpdf.php:	 *      \xa0   : Unicode Character 'NO-BREAK SPACE' (U+00A0)
tcpdf.php:	 * @since 4.6.016 (2009-06-15)
tcpdf.php:		$this->re_spaces = $re;
tcpdf.php:		$this->re_space = array();
tcpdf.php:			$this->re_space['p'] = $re_parts[1];
tcpdf.php:			$this->re_space['p'] = '[\s]';
tcpdf.php:			$this->re_space['m'] = $re_parts[2];
tcpdf.php:			$this->re_space['m'] = '';
tcpdf.php:	 * Enable or disable Right-To-Left language mode
tcpdf.php:	 * @param boolean $enable if true enable Right-To-Left language mode.
tcpdf.php:	 * @since 2.0.000 (2008-01-03)
tcpdf.php:		$resetx = ($resetx AND ($enable != $this->rtl));
tcpdf.php:		$this->rtl = $enable;
tcpdf.php:		$this->tmprtl = false;
tcpdf.php:			$this->Ln(0);
tcpdf.php:	 * @since 4.0.012 (2008-07-24)
tcpdf.php:		return $this->rtl;
tcpdf.php:	 * @since 2.1.000 (2008-01-09)
tcpdf.php:				if ($this->rtl) {
tcpdf.php:				if (!$this->rtl) {
tcpdf.php:		$this->tmprtl = $newmode;
tcpdf.php:	 * @since 4.8.014 (2009-11-04)
tcpdf.php:		return ($this->rtl OR ($this->tmprtl == 'R'));
tcpdf.php:		$this->lasth = $h;
tcpdf.php:		$height = ($fontsize * $this->cell_height_ratio);
tcpdf.php:			$height += ($this->cell_padding['T'] + $this->cell_padding['B']);
tcpdf.php:	 * @since 5.9.000 (2010-10-03)
tcpdf.php:		$this->lasth = $this->getCellHeight($this->FontSize);
tcpdf.php:	 * @since 4.0.017 (2008-08-05)
tcpdf.php:		return $this->lasth;
tcpdf.php:		$this->imgscale = $scale;
tcpdf.php:		return $this->imgscale;
tcpdf.php:	 * <ul><li>$this->pagedim[$this->page]['w'] = page width in points</li><li>$this->pagedim[$this->page]['h'] = height in points</li><li>$this->pagedim[$this->page]['wk'] = page width in user units</li><li>$this->pagedim[$this->page]['hk'] = page height in user units</li><li>$this->pagedim[$this->page]['tm'] = top margin</li><li>$this->pagedim[$this->page]['bm'] = bottom margin</li><li>$this->pagedim[$this->page]['lm'] = left margin</li><li>$this->pagedim[$this->page]['rm'] = right margin</li><li>$this->pagedim[$this->page]['pb'] = auto page break</li><li>$this->pagedim[$this->page]['or'] = page orientation</li><li>$this->pagedim[$this->page]['olm'] = original left margin</li><li>$this->pagedim[$this->page]['orm'] = original right margin</li><li>$this->pagedim[$this->page]['Rotate'] = The number of degrees by which the page shall be rotated clockwise when displayed or printed. The value shall be a multiple of 90.</li><li>$this->pagedim[$this->page]['PZ'] = The page's preferred zoom (magnification) factor.</li><li>$this->pagedim[$this->page]['trans'] : the style and duration of the visual transition to use when moving from another page to the given page during a presentation<ul><li>$this->pagedim[$this->page]['trans']['Dur'] = The page's display duration (also called its advance timing): the maximum length of time, in seconds, that the page shall be displayed during presentations before the viewer application shall automatically advance to the next page.</li><li>$this->pagedim[$this->page]['trans']['S'] = transition style : Split, Blinds, Box, Wipe, Dissolve, Glitter, R, Fly, Push, Cover, Uncover, Fade</li><li>$this->pagedim[$this->page]['trans']['D'] = The duration of the transition effect, in seconds.</li><li>$this->pagedim[$this->page]['trans']['Dm'] = (Split and Blinds transition styles only) The dimension in which the specified transition effect shall occur: H = Horizontal, V = Vertical. Default value: H.</li><li>$this->pagedim[$this->page]['trans']['M'] = (Split, Box and Fly transition styles only) The direction of motion for the specified transition effect: I = Inward from the edges of the page, O = Outward from the center of the pageDefault value: I.</li><li>$this->pagedim[$this->page]['trans']['Di'] = (Wipe, Glitter, Fly, Cover, Uncover and Push transition styles only) The direction in which the specified transition effect shall moves, expressed in degrees counterclockwise starting from a left-to-right direction. If the value is a number, it shall be one of: 0 = Left to right, 90 = Bottom to top (Wipe only), 180 = Right to left (Wipe only), 270 = Top to bottom, 315 = Top-left to bottom-right (Glitter only). If the value is a name, it shall be None, which is relevant only for the Fly transition when the value of SS is not 1.0. Default value: 0.</li><li>$this->pagedim[$this->page]['trans']['SS'] = (Fly transition style only) The starting or ending scale at which the changes shall be drawn. If M specifies an inward transition, the scale of the changes drawn shall progress from SS to 1.0 over the course of the transition. If M specifies an outward transition, the scale of the changes drawn shall progress from 1.0 to SS over the course of the transition. Default: 1.0. </li><li>$this->pagedim[$this->page]['trans']['B'] = (Fly transition style only) If true, the area that shall be flown in is rectangular and opaque. Default: false.</li></ul></li><li>$this->pagedim[$this->page]['MediaBox'] : the boundaries of the physical medium on which the page shall be displayed or printed<ul><li>$this->pagedim[$this->page]['MediaBox']['llx'] = lower-left x coordinate in points</li><li>$this->pagedim[$this->page]['MediaBox']['lly'] = lower-left y coordinate in points</li><li>$this->pagedim[$this->page]['MediaBox']['urx'] = upper-right x coordinate in points</li><li>$this->pagedim[$this->page]['MediaBox']['ury'] = upper-right y coordinate in points</li></ul></li><li>$this->pagedim[$this->page]['CropBox'] : the visible region of default user space<ul><li>$this->pagedim[$this->page]['CropBox']['llx'] = lower-left x coordinate in points</li><li>$this->pagedim[$this->page]['CropBox']['lly'] = lower-left y coordinate in points</li><li>$this->pagedim[$this->page]['CropBox']['urx'] = upper-right x coordinate in points</li><li>$this->pagedim[$this->page]['CropBox']['ury'] = upper-right y coordinate in points</li></ul></li><li>$this->pagedim[$this->page]['BleedBox'] : the region to which the contents of the page shall be clipped when output in a production environment<ul><li>$this->pagedim[$this->page]['BleedBox']['llx'] = lower-left x coordinate in points</li><li>$this->pagedim[$this->page]['BleedBox']['lly'] = lower-left y coordinate in points</li><li>$this->pagedim[$this->page]['BleedBox']['urx'] = upper-right x coordinate in points</li><li>$this->pagedim[$this->page]['BleedBox']['ury'] = upper-right y coordinate in points</li></ul></li><li>$this->pagedim[$this->page]['TrimBox'] : the intended dimensions of the finished page after trimming<ul><li>$this->pagedim[$this->page]['TrimBox']['llx'] = lower-left x coordinate in points</li><li>$this->pagedim[$this->page]['TrimBox']['lly'] = lower-left y coordinate in points</li><li>$this->pagedim[$this->page]['TrimBox']['urx'] = upper-right x coordinate in points</li><li>$this->pagedim[$this->page]['TrimBox']['ury'] = upper-right y coordinate in points</li></ul></li><li>$this->pagedim[$this->page]['ArtBox'] : the extent of the page's meaningful content<ul><li>$this->pagedim[$this->page]['ArtBox']['llx'] = lower-left x coordinate in points</li><li>$this->pagedim[$this->page]['ArtBox']['lly'] = lower-left y coordinate in points</li><li>$this->pagedim[$this->page]['ArtBox']['urx'] = upper-right x coordinate in points</li><li>$this->pagedim[$this->page]['ArtBox']['ury'] = upper-right y coordinate in points</li></ul></li></ul>
tcpdf.php:	 * @since 4.5.027 (2009-03-16)
tcpdf.php:			$pagenum = $this->page;
tcpdf.php:		return $this->pagedim[$pagenum];
tcpdf.php:			return $this->w;
tcpdf.php:		return $this->pagedim[$pagenum]['w'];
tcpdf.php:			return $this->h;
tcpdf.php:		return $this->pagedim[$pagenum]['h'];
tcpdf.php:			return $this->bMargin;
tcpdf.php:		return $this->pagedim[$pagenum]['bm'];
tcpdf.php:		return $this->k;
tcpdf.php:		$this->lMargin = $left;
tcpdf.php:		$this->tMargin = $top;
tcpdf.php:		if ($right == -1 OR $right === null) {
tcpdf.php:		$this->rMargin = $right;
tcpdf.php:			$this->original_lMargin = $this->lMargin;
tcpdf.php:			$this->original_rMargin = $this->rMargin;
tcpdf.php:		$this->lMargin = $margin;
tcpdf.php:		if (($this->page > 0) AND ($this->x < $margin)) {
tcpdf.php:			$this->x = $margin;
tcpdf.php:		$this->tMargin = $margin;
tcpdf.php:		if (($this->page > 0) AND ($this->y < $margin)) {
tcpdf.php:			$this->y = $margin;
tcpdf.php:		$this->rMargin = $margin;
tcpdf.php:		if (($this->page > 0) AND ($this->x > ($this->w - $margin))) {
tcpdf.php:			$this->x = $this->w - $margin;
tcpdf.php:	 * Set the same internal Cell padding for top, right, bottom, left-
tcpdf.php:	 * @since 2.1.000 (2008-01-09)
tcpdf.php:			$this->cell_padding['L'] = $pad;
tcpdf.php:			$this->cell_padding['T'] = $pad;
tcpdf.php:			$this->cell_padding['R'] = $pad;
tcpdf.php:			$this->cell_padding['B'] = $pad;
tcpdf.php:	 * @since 5.9.000 (2010-10-03)
tcpdf.php:			$this->cell_padding['L'] = $left;
tcpdf.php:			$this->cell_padding['T'] = $top;
tcpdf.php:			$this->cell_padding['R'] = $right;
tcpdf.php:			$this->cell_padding['B'] = $bottom;
tcpdf.php:	 * @since 5.9.000 (2010-10-03)
tcpdf.php:		return $this->cell_padding;
tcpdf.php:	 * @since 5.9.000 (2010-10-03)
tcpdf.php:			$this->cell_margin['L'] = $left;
tcpdf.php:			$this->cell_margin['T'] = $top;
tcpdf.php:			$this->cell_margin['R'] = $right;
tcpdf.php:			$this->cell_margin['B'] = $bottom;
tcpdf.php:	 * @since 5.9.000 (2010-10-03)
tcpdf.php:		return $this->cell_margin;
tcpdf.php:	 * @param string|array|int $brd Indicates if borders must be drawn around the cell. The value can be a number:<ul><li>0: no border (default)</li><li>1: frame</li></ul> or a string containing some or all of the following characters (in any order):<ul><li>L: left</li><li>T: top</li><li>R: right</li><li>B: bottom</li></ul> or an array of line styles for each border group - for example: array('LTRB' => array('width' => 2, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0, 0, 0)))
tcpdf.php:	 * @since 5.9.000 (2010-10-03)
tcpdf.php:		$cp = $this->cell_padding;
tcpdf.php:			$line_width = $this->LineWidth;
tcpdf.php:				is_numeric($this->cell_padding['T'])
tcpdf.php:				&& ($this->cell_padding['T'] < $adj)
tcpdf.php:				$this->cell_padding['T'] = $adj;
tcpdf.php:				is_numeric($this->cell_padding['R'])
tcpdf.php:				&& ($this->cell_padding['R'] < $adj)
tcpdf.php:				$this->cell_padding['R'] = $adj;
tcpdf.php:				is_numeric($this->cell_padding['B'])
tcpdf.php:				&& ($this->cell_padding['B'] < $adj)
tcpdf.php:				$this->cell_padding['B'] = $adj;
tcpdf.php:				is_numeric($this->cell_padding['L'])
tcpdf.php:				&& ($this->cell_padding['L'] < $adj)
tcpdf.php:				$this->cell_padding['L'] = $adj;
tcpdf.php:			'T' => ($this->cell_padding['T'] - $cp['T']),
tcpdf.php:			'R' => ($this->cell_padding['R'] - $cp['R']),
tcpdf.php:			'B' => ($this->cell_padding['B'] - $cp['B']),
tcpdf.php:			'L' => ($this->cell_padding['L'] - $cp['L']),
tcpdf.php:		$this->AutoPageBreak = $auto ? true : false;
tcpdf.php:		$this->bMargin = $margin;
tcpdf.php:		$this->PageBreakTrigger = $this->h - $margin;
tcpdf.php:	 * Return the auto-page-break mode (true or false).
tcpdf.php:	 * @return bool auto-page-break mode
tcpdf.php:		return $this->AutoPageBreak;
tcpdf.php:	 * @param string $layout The page layout. Possible values are:<ul><li>SinglePage Display one page at a time</li><li>OneColumn Display the pages in one column</li><li>TwoColumnLeft Display the pages in two columns, with odd-numbered pages on the left</li><li>TwoColumnRight Display the pages in two columns, with odd-numbered pages on the right</li><li>TwoPageLeft (PDF 1.5) Display the pages two at a time, with odd-numbered pages on the left</li><li>TwoPageRight (PDF 1.5) Display the pages two at a time, with odd-numbered pages on the right</li></ul>
tcpdf.php:	 * @param string $mode A name object specifying how the document should be displayed when opened:<ul><li>UseNone Neither document outline nor thumbnail images visible</li><li>UseOutlines Document outline visible</li><li>UseThumbs Thumbnail images visible</li><li>FullScreen Full-screen mode, with no menu bar, window controls, or any other window visible</li><li>UseOC (PDF 1.5) Optional content group panel visible</li><li>UseAttachments (PDF 1.6) Attachments panel visible</li></ul>
tcpdf.php:			$this->ZoomMode = $zoom;
tcpdf.php:			$this->Error('Incorrect zoom display mode: '.$zoom);
tcpdf.php:		$this->LayoutMode = TCPDF_STATIC::getPageLayoutMode($layout);
tcpdf.php:		$this->PageMode = TCPDF_STATIC::getPageMode($mode);
tcpdf.php:		$this->compress = false;
tcpdf.php:				if ( !$this->pdfa_mode) {
tcpdf.php:					$this->compress = true;
tcpdf.php:	 * Set flag to force sRGB_IEC61966-2.1 black scaled ICC color profile for the whole document.
tcpdf.php:	 * @since 5.9.121 (2011-09-28)
tcpdf.php:		$this->force_srgb = $mode ? true : false;
tcpdf.php:	 * @since 5.9.027 (2010-12-01)
tcpdf.php:		$this->docinfounicode = $unicode ? true : false;
tcpdf.php:		$this->title = $title;
tcpdf.php:		$this->subject = $subject;
tcpdf.php:		$this->author = $author;
tcpdf.php:		$this->keywords = $keywords;
tcpdf.php:		$this->creator = $creator;
tcpdf.php:		$this->allowLocalFiles = (bool) $allowLocalFiles;
tcpdf.php:		$this->_destroy(true);
tcpdf.php:		$this->state = 1;
tcpdf.php:		if ($this->state == 3) {
tcpdf.php:		if ($this->page == 0) {
tcpdf.php:			$this->AddPage();
tcpdf.php:		$this->endLayer();
tcpdf.php:		if ($this->tcpdflink) {
tcpdf.php:			$gvars = $this->getGraphicVars();
tcpdf.php:			$this->setEqualColumns();
tcpdf.php:			$this->lastpage(true);
tcpdf.php:			$this->setAutoPageBreak(false);
tcpdf.php:			$this->x = 0;
tcpdf.php:			$this->y = $this->h - (1 / $this->k);
tcpdf.php:			$this->lMargin = 0;
tcpdf.php:			$this->_outSaveGraphicsState();
tcpdf.php:			$this->setFont($font, '', 1);
tcpdf.php:			$this->setTextRenderingMode(0, false, false);
tcpdf.php:			$this->Cell(0, 0, $msg, 0, 0, 'L', 0, $lnk, 0, false, 'D', 'B');
tcpdf.php:			$this->_outRestoreGraphicsState();
tcpdf.php:			$this->setGraphicVars($gvars);
tcpdf.php:		$this->endPage();
tcpdf.php:		$this->_enddoc();
tcpdf.php:		$this->_destroy(false);
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		if (($pnum == $this->page) AND ($this->state == 2)) {
tcpdf.php:		if (($pnum > 0) AND ($pnum <= $this->numpages)) {
tcpdf.php:			$this->state = 2;
tcpdf.php:			//$gvars = $this->getGraphicVars();
tcpdf.php:			$oldpage = $this->page;
tcpdf.php:			$this->page = $pnum;
tcpdf.php:			$this->wPt = $this->pagedim[$this->page]['w'];
tcpdf.php:			$this->hPt = $this->pagedim[$this->page]['h'];
tcpdf.php:			$this->w = $this->pagedim[$this->page]['wk'];
tcpdf.php:			$this->h = $this->pagedim[$this->page]['hk'];
tcpdf.php:			$this->tMargin = $this->pagedim[$this->page]['tm'];
tcpdf.php:			$this->bMargin = $this->pagedim[$this->page]['bm'];
tcpdf.php:			$this->original_lMargin = $this->pagedim[$this->page]['olm'];
tcpdf.php:			$this->original_rMargin = $this->pagedim[$this->page]['orm'];
tcpdf.php:			$this->AutoPageBreak = $this->pagedim[$this->page]['pb'];
tcpdf.php:			$this->CurOrientation = $this->pagedim[$this->page]['or'];
tcpdf.php:			$this->setAutoPageBreak($this->AutoPageBreak, $this->bMargin);
tcpdf.php:			//$this->setGraphicVars($gvars);
tcpdf.php:				$this->lMargin = $this->pagedim[$this->page]['olm'];
tcpdf.php:				$this->rMargin = $this->pagedim[$this->page]['orm'];
tcpdf.php:				$this->setY($this->tMargin);
tcpdf.php:				if ($this->pagedim[$this->page]['olm'] != $this->pagedim[$oldpage]['olm']) {
tcpdf.php:					$deltam = $this->pagedim[$this->page]['olm'] - $this->pagedim[$this->page]['orm'];
tcpdf.php:					$this->lMargin += $deltam;
tcpdf.php:					$this->rMargin -= $deltam;
tcpdf.php:			$this->Error('Wrong page number on setPage() function: '.$pnum);
tcpdf.php:	 * @since 2.0.000 (2008-01-04)
tcpdf.php:		$this->setPage($this->getNumPages(), $resetmargins);
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		return $this->page;
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		return $this->numpages;
tcpdf.php:	 * @since 5.0.001 (2010-05-06)
tcpdf.php:		$this->AddPage($orientation, $format, $keepmargins, true);
tcpdf.php:	 * @since 5.0.001 (2010-05-06)
tcpdf.php:		$this->endPage(true);
tcpdf.php:	 * Adds a new page to the document. If a page is already present, the Footer() method is called first to output the footer (if enabled). Then the page is added, the current position set to the top-left corner according to the left and top margins (or top-right if in RTL mode), and Header() is called to display the header (if enabled).
tcpdf.php:	 * The origin of the coordinate system is at the top-left corner (or top-right for RTL) and increasing ordinates go downwards.
tcpdf.php:		if ($this->inxobj) {
tcpdf.php:		if (!isset($this->original_lMargin) OR $keepmargins) {
tcpdf.php:			$this->original_lMargin = $this->lMargin;
tcpdf.php:		if (!isset($this->original_rMargin) OR $keepmargins) {
tcpdf.php:			$this->original_rMargin = $this->rMargin;
tcpdf.php:		$this->endPage();
tcpdf.php:		$this->startPage($orientation, $format, $tocpage);
tcpdf.php:	 * @since 4.2.010 (2008-11-14)
tcpdf.php:		if (($this->page == 0) OR ($this->numpages > $this->page) OR (!$this->pageopen[$this->page])) {
tcpdf.php:		$this->setFooter();
tcpdf.php:		$this->_endpage();
tcpdf.php:		$this->pageopen[$this->page] = false;
tcpdf.php:			$this->tocpage = false;
tcpdf.php:	 * The origin of the coordinate system is at the top-left corner and increasing ordinates go downwards.
tcpdf.php:	 * @param boolean $tocpage if true the page is designated to contain the Table-Of-Content.
tcpdf.php:	 * @since 4.2.010 (2008-11-14)
tcpdf.php:			$this->tocpage = true;
tcpdf.php:		if ($this->tocpage) {
tcpdf.php:			$tmpoutlines = $this->outlines;
tcpdf.php:				if (!$outline['f'] AND ($outline['p'] > $this->numpages)) {
tcpdf.php:					$this->outlines[$key]['p'] = ($outline['p'] + 1);
tcpdf.php:			$tmpdests = $this->dests;
tcpdf.php:				if (!$dest['f'] AND ($dest['p'] > $this->numpages)) {
tcpdf.php:					$this->dests[$key]['p'] = ($dest['p'] + 1);
tcpdf.php:			$tmplinks = $this->links;
tcpdf.php:				if (!$link['f'] AND ($link['p'] > $this->numpages)) {
tcpdf.php:					$this->links[$key]['p'] = ($link['p'] + 1);
tcpdf.php:		if ($this->numpages > $this->page) {
tcpdf.php:			$this->setPage($this->page + 1);
tcpdf.php:			$this->setY($this->tMargin);
tcpdf.php:		if ($this->state == 0) {
tcpdf.php:			$this->Open();
tcpdf.php:		++$this->numpages;
tcpdf.php:		$this->swapMargins($this->booklet);
tcpdf.php:		$gvars = $this->getGraphicVars();
tcpdf.php:		$this->_beginpage($orientation, $format);
tcpdf.php:		$this->pageopen[$this->page] = true;
tcpdf.php:		$this->setGraphicVars($gvars);
tcpdf.php:		$this->setPageMark();
tcpdf.php:		$this->setHeader();
tcpdf.php:		$this->setGraphicVars($gvars);
tcpdf.php:		$this->setPageMark();
tcpdf.php:		$this->setTableHeader();
tcpdf.php:		$this->emptypagemrk[$this->page]= $this->pagelen[$this->page];
tcpdf.php:	 * Set start-writing mark on current page stream used to put borders and fills.
tcpdf.php:	 * @since 4.0.016 (2008-07-30)
tcpdf.php:		$this->intmrk[$this->page] = $this->pagelen[$this->page];
tcpdf.php:		$this->bordermrk[$this->page] = $this->intmrk[$this->page];
tcpdf.php:		$this->setContentMark();
tcpdf.php:	 * Set start-writing mark on selected page.
tcpdf.php:	 * @since 4.6.021 (2009-07-20)
tcpdf.php:			$page = $this->page;
tcpdf.php:		if (isset($this->footerlen[$page])) {
tcpdf.php:			$this->cntmrk[$page] = $this->pagelen[$page] - $this->footerlen[$page];
tcpdf.php:			$this->cntmrk[$page] = $this->pagelen[$page];
tcpdf.php:		$this->header_logo = $ln;
tcpdf.php:		$this->header_logo_width = $lw;
tcpdf.php:		$this->header_title = $ht;
tcpdf.php:		$this->header_string = $hs;
tcpdf.php:		$this->header_text_color = $tc;
tcpdf.php:		$this->header_line_color = $lc;
tcpdf.php:		$this->footer_text_color = $tc;
tcpdf.php:		$this->footer_line_color = $lc;
tcpdf.php:	 * @since 4.0.012 (2008-07-24)
tcpdf.php:		$ret['logo'] = $this->header_logo;
tcpdf.php:		$ret['logo_width'] = $this->header_logo_width;
tcpdf.php:		$ret['title'] = $this->header_title;
tcpdf.php:		$ret['string'] = $this->header_string;
tcpdf.php:		$ret['text_color'] = $this->header_text_color;
tcpdf.php:		$ret['line_color'] = $this->header_line_color;
tcpdf.php:		$this->header_margin = $hm;
tcpdf.php:	 * @since 4.0.012 (2008-07-24)
tcpdf.php:		return $this->header_margin;
tcpdf.php:		$this->footer_margin = $fm;
tcpdf.php:	 * @since 4.0.012 (2008-07-24)
tcpdf.php:		return $this->footer_margin;
tcpdf.php:		$this->print_header = $val ? true : false;
tcpdf.php:		$this->print_footer = $val ? true : false;
tcpdf.php:	 * Return the right-bottom (or left-bottom for RTL) corner X coordinate of last inserted image
tcpdf.php:		return $this->img_rb_x;
tcpdf.php:	 * Return the right-bottom (or left-bottom for RTL) corner Y coordinate of last inserted image
tcpdf.php:		return $this->img_rb_y;
tcpdf.php:		$this->header_xobjid = false;
tcpdf.php:		$this->header_xobj_autoreset = $val ? true : false;
tcpdf.php:		if ($this->header_xobjid === false) {
tcpdf.php:			$this->header_xobjid = $this->startTemplate($this->w, $this->tMargin);
tcpdf.php:			$headerfont = $this->getHeaderFont();
tcpdf.php:			$headerdata = $this->getHeaderData();
tcpdf.php:			$this->y = $this->header_margin;
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$this->x = $this->w - $this->original_rMargin;
tcpdf.php:				$this->x = $this->original_lMargin;
tcpdf.php:					$this->ImageEps(K_PATH_IMAGES.$headerdata['logo'], '', '', $headerdata['logo_width']);
tcpdf.php:					$this->ImageSVG(K_PATH_IMAGES.$headerdata['logo'], '', '', $headerdata['logo_width']);
tcpdf.php:					$this->Image(K_PATH_IMAGES.$headerdata['logo'], '', '', $headerdata['logo_width']);
tcpdf.php:				$imgy = $this->getImageRBY();
tcpdf.php:				$imgy = $this->y;
tcpdf.php:			$cell_height = $this->getCellHeight($headerfont[2] / $this->k);
tcpdf.php:			if ($this->getRTL()) {
tcpdf.php:				$header_x = $this->original_rMargin + ($headerdata['logo_width'] * 1.1);
tcpdf.php:				$header_x = $this->original_lMargin + ($headerdata['logo_width'] * 1.1);
tcpdf.php:			$cw = $this->w - $this->original_lMargin - $this->original_rMargin - ($headerdata['logo_width'] * 1.1);
tcpdf.php:			$this->setTextColorArray($this->header_text_color);
tcpdf.php:			$this->setFont($headerfont[0], 'B', $headerfont[2] + 1);
tcpdf.php:			$this->setX($header_x);
tcpdf.php:			$this->Cell($cw, $cell_height, $headerdata['title'], 0, 1, '', 0, '', 0);
tcpdf.php:			$this->setFont($headerfont[0], $headerfont[1], $headerfont[2]);
tcpdf.php:			$this->setX($header_x);
tcpdf.php:			$this->MultiCell($cw, $cell_height, $headerdata['string'], 0, '', 0, 1, '', '', true, 0, false, true, 0, 'T', false);
tcpdf.php:			$this->setLineStyle(array('width' => 0.85 / $this->k, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => $headerdata['line_color']));
tcpdf.php:			$this->setY((2.835 / $this->k) + max($imgy, $this->y));
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$this->setX($this->original_rMargin);
tcpdf.php:				$this->setX($this->original_lMargin);
tcpdf.php:			$this->Cell(($this->w - $this->original_lMargin - $this->original_rMargin), 0, '', 'T', 0, 'C');
tcpdf.php:			$this->endTemplate();
tcpdf.php:		if (!$this->header_xobj_autoreset AND $this->booklet AND (($this->page % 2) == 0)) {
tcpdf.php:			$dx = ($this->original_lMargin - $this->original_rMargin);
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$x = $this->w + $dx;
tcpdf.php:		$this->printTemplate($this->header_xobjid, $x, 0, 0, 0, '', '', false);
tcpdf.php:		if ($this->header_xobj_autoreset) {
tcpdf.php:			$this->header_xobjid = false;
tcpdf.php:		$cur_y = $this->y;
tcpdf.php:		$this->setTextColorArray($this->footer_text_color);
tcpdf.php:		$line_width = (0.85 / $this->k);
tcpdf.php:		$this->setLineStyle(array('width' => $line_width, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => $this->footer_line_color));
tcpdf.php:		$barcode = $this->getBarcode();
tcpdf.php:			$this->Ln($line_width);
tcpdf.php:			$barcode_width = round(($this->w - $this->original_lMargin - $this->original_rMargin) / 3);
tcpdf.php:				'position' => $this->rtl?'R':'L',
tcpdf.php:				'align' => $this->rtl?'R':'L',
tcpdf.php:			$this->write1DBarcode($barcode, 'C128', '', $cur_y + $line_width, '', (($this->footer_margin / 3) - $line_width), 0.3, $style, '');
tcpdf.php:		$w_page = isset($this->l['w_page']) ? $this->l['w_page'].' ' : '';
tcpdf.php:		if (empty($this->pagegroups)) {
tcpdf.php:			$pagenumtxt = $w_page.$this->getAliasNumPage().' / '.$this->getAliasNbPages();
tcpdf.php:			$pagenumtxt = $w_page.$this->getPageNumGroupAlias().' / '.$this->getPageGroupAlias();
tcpdf.php:		$this->setY($cur_y);
tcpdf.php:		if ($this->getRTL()) {
tcpdf.php:			$this->setX($this->original_rMargin);
tcpdf.php:			$this->Cell(0, 0, $pagenumtxt, 'T', 0, 'L');
tcpdf.php:			$this->setX($this->original_lMargin);
tcpdf.php:			$this->Cell(0, 0, $this->getAliasRightShift().$pagenumtxt, 'T', 0, 'R');
tcpdf.php:	 * @since 4.0.012 (2008-07-24)
tcpdf.php:		if (!$this->print_header OR ($this->state != 2)) {
tcpdf.php:		$this->InHeader = true;
tcpdf.php:		$this->setGraphicVars($this->default_graphic_vars);
tcpdf.php:		$temp_thead = $this->thead;
tcpdf.php:		$temp_theadMargins = $this->theadMargins;
tcpdf.php:		$lasth = $this->lasth;
tcpdf.php:		$newline = $this->newline;
tcpdf.php:		$this->_outSaveGraphicsState();
tcpdf.php:		$this->rMargin = $this->original_rMargin;
tcpdf.php:		$this->lMargin = $this->original_lMargin;
tcpdf.php:		$this->setCellPadding(0);
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$this->setXY($this->original_rMargin, $this->header_margin);
tcpdf.php:			$this->setXY($this->original_lMargin, $this->header_margin);
tcpdf.php:		$this->setFont($this->header_font[0], $this->header_font[1], $this->header_font[2]);
tcpdf.php:		$this->Header();
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$this->setXY($this->original_rMargin, $this->tMargin);
tcpdf.php:			$this->setXY($this->original_lMargin, $this->tMargin);
tcpdf.php:		$this->_outRestoreGraphicsState();
tcpdf.php:		$this->lasth = $lasth;
tcpdf.php:		$this->thead = $temp_thead;
tcpdf.php:		$this->theadMargins = $temp_theadMargins;
tcpdf.php:		$this->newline = $newline;
tcpdf.php:		$this->InHeader = false;
tcpdf.php:	 * @since 4.0.012 (2008-07-24)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:		$this->InFooter = true;
tcpdf.php:		$gvars = $this->getGraphicVars();
tcpdf.php:		$this->footerpos[$this->page] = $this->pagelen[$this->page];
tcpdf.php:		$this->_out("\n");
tcpdf.php:		if ($this->print_footer) {
tcpdf.php:			$this->setGraphicVars($this->default_graphic_vars);
tcpdf.php:			$this->current_column = 0;
tcpdf.php:			$this->num_columns = 1;
tcpdf.php:			$temp_thead = $this->thead;
tcpdf.php:			$temp_theadMargins = $this->theadMargins;
tcpdf.php:			$lasth = $this->lasth;
tcpdf.php:			$this->_outSaveGraphicsState();
tcpdf.php:			$this->rMargin = $this->original_rMargin;
tcpdf.php:			$this->lMargin = $this->original_lMargin;
tcpdf.php:			$this->setCellPadding(0);
tcpdf.php:			$footer_y = $this->h - $this->footer_margin;
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$this->setXY($this->original_rMargin, $footer_y);
tcpdf.php:				$this->setXY($this->original_lMargin, $footer_y);
tcpdf.php:			$this->setFont($this->footer_font[0], $this->footer_font[1], $this->footer_font[2]);
tcpdf.php:			$this->Footer();
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$this->setXY($this->original_rMargin, $this->tMargin);
tcpdf.php:				$this->setXY($this->original_lMargin, $this->tMargin);
tcpdf.php:			$this->_outRestoreGraphicsState();
tcpdf.php:			$this->lasth = $lasth;
tcpdf.php:			$this->thead = $temp_thead;
tcpdf.php:			$this->theadMargins = $temp_theadMargins;
tcpdf.php:		$this->setGraphicVars($gvars);
tcpdf.php:		$this->current_column = $gvars['current_column'];
tcpdf.php:		$this->num_columns = $gvars['num_columns'];
tcpdf.php:		$this->footerlen[$this->page] = $this->pagelen[$this->page] - $this->footerpos[$this->page] + 1;
tcpdf.php:		$this->InFooter = false;
tcpdf.php:	 * @since 5.9.091 (2011-06-15)
tcpdf.php:		return (($this->InHeader === false) AND ($this->InFooter === false));
tcpdf.php:	 * @since 4.5.030 (2009-03-25)
tcpdf.php:		if ($this->num_columns > 1) {
tcpdf.php:		if (isset($this->theadMargins['top'])) {
tcpdf.php:			// restore the original top-margin
tcpdf.php:			$this->tMargin = $this->theadMargins['top'];
tcpdf.php:			$this->pagedim[$this->page]['tm'] = $this->tMargin;
tcpdf.php:			$this->y = $this->tMargin;
tcpdf.php:		if (!TCPDF_STATIC::empty_string($this->thead) AND (!$this->inthead)) {
tcpdf.php:			$prev_lMargin = $this->lMargin;
tcpdf.php:			$prev_rMargin = $this->rMargin;
tcpdf.php:			$prev_cell_padding = $this->cell_padding;
tcpdf.php:			$this->lMargin = $this->theadMargins['lmargin'] + ($this->pagedim[$this->page]['olm'] - $this->pagedim[$this->theadMargins['page']]['olm']);
tcpdf.php:			$this->rMargin = $this->theadMargins['rmargin'] + ($this->pagedim[$this->page]['orm'] - $this->pagedim[$this->theadMargins['page']]['orm']);
tcpdf.php:			$this->cell_padding = $this->theadMargins['cell_padding'];
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$this->x = $this->w - $this->rMargin;
tcpdf.php:				$this->x = $this->lMargin;
tcpdf.php:			if ($this->theadMargins['cell']) {
tcpdf.php:				if ($this->rtl) {
tcpdf.php:					$this->x -= $this->cell_padding['R'];
tcpdf.php:					$this->x += $this->cell_padding['L'];
tcpdf.php:			$gvars = $this->getGraphicVars();
tcpdf.php:			if (!empty($this->theadMargins['gvars'])) {
tcpdf.php:				$this->setGraphicVars($this->theadMargins['gvars']);
tcpdf.php:				$this->rMargin = $gvars['rMargin'];
tcpdf.php:				$this->lMargin = $gvars['lMargin'];
tcpdf.php:			$this->writeHTML($this->thead, false, false, false, false, '');
tcpdf.php:			$this->setGraphicVars($gvars);
tcpdf.php:			if (!isset($this->theadMargins['top'])) {
tcpdf.php:				$this->theadMargins['top'] = $this->tMargin;
tcpdf.php:			if (!isset($this->columns[0]['th'])) {
tcpdf.php:				$this->columns[0]['th'] = array();
tcpdf.php:			$this->columns[0]['th']['\''.$this->page.'\''] = $this->y;
tcpdf.php:			$this->tMargin = $this->y;
tcpdf.php:			$this->pagedim[$this->page]['tm'] = $this->tMargin;
tcpdf.php:			$this->lasth = 0;
tcpdf.php:			$this->lMargin = $prev_lMargin;
tcpdf.php:			$this->rMargin = $prev_rMargin;
tcpdf.php:			$this->cell_padding = $prev_cell_padding;
tcpdf.php:		return $this->page;
tcpdf.php:	 * @since 6.0.038 (2013-09-30)
tcpdf.php:		return $this->spot_colors;
tcpdf.php:	 * @since 4.0.024 (2008-09-12)
tcpdf.php:		if (!isset($this->spot_colors[$name])) {
tcpdf.php:			$i = (1 + count($this->spot_colors));
tcpdf.php:			$this->spot_colors[$name] = array('C' => $c, 'M' => $m, 'Y' => $y, 'K' => $k, 'name' => $name, 'i' => $i);
tcpdf.php:	 * @since 5.9.125 (2011-10-03)
tcpdf.php:		$spotcolor = TCPDF_COLORS::getSpotColor($name, $this->spot_colors);
tcpdf.php:			$this->Error('Undefined spot color: '.$name.', you must add it using the AddSpotColor() method.');
tcpdf.php:		$pdfcolor = sprintf('/CS%d ', $this->spot_colors[$name]['i']);
tcpdf.php:				$this->DrawColor = $pdfcolor;
tcpdf.php:				$this->strokecolor = $spotcolor;
tcpdf.php:				$this->FillColor = $pdfcolor;
tcpdf.php:				$this->bgcolor = $spotcolor;
tcpdf.php:				$this->TextColor = $pdfcolor;
tcpdf.php:				$this->fgcolor = $spotcolor;
tcpdf.php:		$this->ColorFlag = ($this->FillColor != $this->TextColor);
tcpdf.php:		if ($this->state == 2) {
tcpdf.php:			$this->_out($pdfcolor);
tcpdf.php:		if ($this->inxobj) {
tcpdf.php:			$this->xobjects[$this->xobjid]['spot_colors'][$name] = $this->spot_colors[$name];
tcpdf.php:	 * @since 4.0.024 (2008-09-12)
tcpdf.php:		$this->setSpotColor('draw', $name, $tint);
tcpdf.php:	 * @since 4.0.024 (2008-09-12)
tcpdf.php:		$this->setSpotColor('fill', $name, $tint);
tcpdf.php:	 * @since 4.0.024 (2008-09-12)
tcpdf.php:		$this->setSpotColor('text', $name, $tint);
tcpdf.php:	 * @since 3.1.000 (2008-06-11)
tcpdf.php:			$c = isset($color[0]) ? $color[0] : -1;
tcpdf.php:			$m = isset($color[1]) ? $color[1] : -1;
tcpdf.php:			$y = isset($color[2]) ? $color[2] : -1;
tcpdf.php:			$k = isset($color[3]) ? $color[3] : -1;
tcpdf.php:				return $this->setColor($type, $c, $m, $y, $k, $ret, $name);
tcpdf.php:	 * @since 3.1.000 (2008-06-11)
tcpdf.php:		return $this->setColorArray('draw', $color, $ret);
tcpdf.php:	 * @since 3.1.000 (2008-6-11)
tcpdf.php:		return $this->setColorArray('fill', $color, $ret);
tcpdf.php:	 * @since 3.1.000 (2008-6-11)
tcpdf.php:		return $this->setColorArray('text', $color, $ret);
tcpdf.php:	 * @param float $col1 GRAY level for single color, or Red color for RGB (0-255), or CYAN color for CMYK (0-100).
tcpdf.php:	 * @param float $col2 GREEN color for RGB (0-255), or MAGENTA color for CMYK (0-100).
tcpdf.php:	 * @param float $col3 BLUE color for RGB (0-255), or YELLOW color for CMYK (0-100).
tcpdf.php:	 * @param float $col4 KEY (BLACK) color for CMYK (0-100).
tcpdf.php:	 * @since 5.9.125 (2011-10-03)
tcpdf.php:	public function setColor($type, $col1=0, $col2=-1, $col3=-1, $col4=-1, $ret=false, $name='') {
tcpdf.php:			$col2 = -1;
tcpdf.php:			$col3 = -1;
tcpdf.php:			$col4 = -1;
tcpdf.php:		if (($col2 == -1) AND ($col3 == -1) AND ($col4 == -1)) {
tcpdf.php:		} elseif ($col4 == -1) {
tcpdf.php:				$this->AddSpotColor($name, $col1, $col2, $col3, $col4);
tcpdf.php:				$pdfcolor = $this->setSpotColor($type, $name, 100);
tcpdf.php:				$this->DrawColor = $pdfcolor;
tcpdf.php:				$this->strokecolor = $intcolor;
tcpdf.php:				$this->FillColor = $pdfcolor;
tcpdf.php:				$this->bgcolor = $intcolor;
tcpdf.php:				$this->TextColor = $pdfcolor;
tcpdf.php:				$this->fgcolor = $intcolor;
tcpdf.php:		$this->ColorFlag = ($this->FillColor != $this->TextColor);
tcpdf.php:		if (($type != 'text') AND ($this->state == 2) AND $type !== 0) {
tcpdf.php:				$this->_out($pdfcolor);
tcpdf.php:	 * @param float $col1 GRAY level for single color, or Red color for RGB (0-255), or CYAN color for CMYK (0-100).
tcpdf.php:	 * @param float $col2 GREEN color for RGB (0-255), or MAGENTA color for CMYK (0-100).
tcpdf.php:	 * @param float $col3 BLUE color for RGB (0-255), or YELLOW color for CMYK (0-100).
tcpdf.php:	 * @param float $col4 KEY (BLACK) color for CMYK (0-100).
tcpdf.php:	public function setDrawColor($col1=0, $col2=-1, $col3=-1, $col4=-1, $ret=false, $name='') {
tcpdf.php:		return $this->setColor('draw', $col1, $col2, $col3, $col4, $ret, $name);
tcpdf.php:	 * @param float $col1 GRAY level for single color, or Red color for RGB (0-255), or CYAN color for CMYK (0-100).
tcpdf.php:	 * @param float $col2 GREEN color for RGB (0-255), or MAGENTA color for CMYK (0-100).
tcpdf.php:	 * @param float $col3 BLUE color for RGB (0-255), or YELLOW color for CMYK (0-100).
tcpdf.php:	 * @param float $col4 KEY (BLACK) color for CMYK (0-100).
tcpdf.php:	public function setFillColor($col1=0, $col2=-1, $col3=-1, $col4=-1, $ret=false, $name='') {
tcpdf.php:		return $this->setColor('fill', $col1, $col2, $col3, $col4, $ret, $name);
tcpdf.php:	 * @param float $col1 GRAY level for single color, or Red color for RGB (0-255), or CYAN color for CMYK (0-100).
tcpdf.php:	 * @param float $col2 GREEN color for RGB (0-255), or MAGENTA color for CMYK (0-100).
tcpdf.php:	 * @param float $col3 BLUE color for RGB (0-255), or YELLOW color for CMYK (0-100).
tcpdf.php:	 * @param float $col4 KEY (BLACK) color for CMYK (0-100).
tcpdf.php:	public function setTextColor($col1=0, $col2=-1, $col3=-1, $col4=-1, $ret=false, $name='') {
tcpdf.php:		return $this->setColor('text', $col1, $col2, $col3, $col4, $ret, $name);
tcpdf.php:	 * @param string $fontstyle Font style. Possible values are (case insensitive):<ul><li>empty string: regular</li><li>B: bold</li><li>I: italic</li><li>U: underline</li><li>D: line-through</li><li>O: overline</li></ul> or any combination. The default value is regular.
tcpdf.php:		return $this->GetArrStringWidth(TCPDF_FONTS::utf8Bidi(TCPDF_FONTS::UTF8StringToArray($s, $this->isunicode, $this->CurrentFont), $s, $this->tmprtl, $this->isunicode, $this->CurrentFont), $fontname, $fontstyle, $fontsize, $getarray);
tcpdf.php:	 * @since 2.4.000 (2008-03-06)
tcpdf.php:			$prev_FontFamily = $this->FontFamily;
tcpdf.php:			$prev_FontStyle = $this->FontStyle;
tcpdf.php:			$prev_FontSizePt = $this->FontSizePt;
tcpdf.php:			$this->setFont($fontname, $fontstyle, $fontsize, '', 'default', false);
tcpdf.php:		// convert UTF-8 array to Latin1 if required
tcpdf.php:		if ($this->isunicode AND (!$this->isUnicodeFont())) {
tcpdf.php:			$cw = $this->GetCharWidth($char, isset($sa[($ck + 1)]));
tcpdf.php:			$this->setFont($prev_FontFamily, $prev_FontStyle, $prev_FontSizePt, '', 'default', false);
tcpdf.php:	 * @param boolean $notlast If false ignore the font-spacing.
tcpdf.php:	 * @since 2.4.000 (2008-03-06)
tcpdf.php:		$chw = $this->getRawCharWidth($char);
tcpdf.php:		if (($this->font_spacing < 0) OR (($this->font_spacing > 0) AND $notlast)) {
tcpdf.php:			$chw += $this->font_spacing;
tcpdf.php:		if ($this->font_stretching != 100) {
tcpdf.php:			$chw *= ($this->font_stretching / 100);
tcpdf.php:	 * @since 5.9.000 (2010-09-28)
tcpdf.php:		if (isset($this->CurrentFont['cw'][intval($char)])) {
tcpdf.php:			$w = $this->CurrentFont['cw'][intval($char)];
tcpdf.php:		} elseif (isset($this->CurrentFont['dw'])) {
tcpdf.php:			$w = $this->CurrentFont['dw'];
tcpdf.php:		} elseif (isset($this->CurrentFont['cw'][32])) {
tcpdf.php:			$w = $this->CurrentFont['cw'][32];
tcpdf.php:		return $this->getAbsFontMeasure($w);
tcpdf.php:	 * @since 2.0.0001 (2008-01-07)
tcpdf.php:		if ($this->isUnicodeFont()) {
tcpdf.php:			return count(TCPDF_FONTS::UTF8StringToArray($s, $this->isunicode, $this->CurrentFont));
tcpdf.php:	 * Fill the list of available fonts ($this->fontlist).
tcpdf.php:	 * @since 4.0.013 (2008-07-28)
tcpdf.php:				if (substr($file, -4) == '.php') {
tcpdf.php:					array_push($this->fontlist, strtolower(basename($file, '.php')));
tcpdf.php:			$subset = $this->font_subsetting;
tcpdf.php:		if ($this->pdfa_mode) {
tcpdf.php:			if (!TCPDF_STATIC::empty_string($this->FontFamily)) {
tcpdf.php:				$family = $this->FontFamily;
tcpdf.php:				$this->Error('Empty font family');
tcpdf.php:		if (substr($family, -1) == 'I') {
tcpdf.php:			$family = substr($family, 0, -1);
tcpdf.php:		if (substr($family, -1) == 'B') {
tcpdf.php:			$family = substr($family, 0, -1);
tcpdf.php:		if ((!$this->isunicode) AND ($family == 'arial')) {
tcpdf.php:		if ($this->pdfa_mode AND (isset($this->CoreFonts[$family]))) {
tcpdf.php:			$this->underline = true;
tcpdf.php:			$this->underline = false;
tcpdf.php:		// line-through (deleted)
tcpdf.php:			$this->linethrough = true;
tcpdf.php:			$this->linethrough = false;
tcpdf.php:			$this->overline = true;
tcpdf.php:			$this->overline = false;
tcpdf.php:		$font_style = $style.($this->underline ? 'U' : '').($this->linethrough ? 'D' : '').($this->overline ? 'O' : '');
tcpdf.php:		$fb = $this->getFontBuffer($fontkey);
tcpdf.php:			if ($this->inxobj) {
tcpdf.php:				$this->xobjects[$this->xobjid]['fonts'][$fontkey] = $fb['i'];
tcpdf.php:			$this->Error('Could not include font definition file: '.$family.'');
tcpdf.php:			$this->Error('The font definition file has a bad format: '.$fontfile.'');
tcpdf.php:			$up = -100;
tcpdf.php:		++$this->numfonts;
tcpdf.php:			$name = $this->CoreFonts[$fontkey];
tcpdf.php:			$enc = 'Identity-H';
tcpdf.php:			if ($this->pdfa_mode) {
tcpdf.php:				$this->Error('All fonts must be embedded in PDF/A mode!');
tcpdf.php:			$this->Error('Unknow font type: '.$type.'');
tcpdf.php:		// create artificial font style variations if missing (only works with non-embedded fonts)
tcpdf.php:					$desc['ItalicAngle'] -= 11;
tcpdf.php:					$desc['ItalicAngle'] = -11;
tcpdf.php:		$this->setFontBuffer($fontkey, array('fontkey' => $fontkey, 'i' => $this->numfonts, 'type' => $type, 'name' => $name, 'desc' => $desc, 'up' => $up, 'ut' => $ut, 'cw' => $cw, 'cbbox' => $cbbox, 'dw' => $dw, 'enc' => $enc, 'cidinfo' => $cidinfo, 'file' => $file, 'ctg' => $ctg, 'subset' => $subset, 'subsetchars' => $subsetchars));
tcpdf.php:		if ($this->inxobj) {
tcpdf.php:			$this->xobjects[$this->xobjid]['fonts'][$fontkey] = $this->numfonts;
tcpdf.php:			$nb = count($this->diffs);
tcpdf.php:				if ($this->diffs[$i] == $diff) {
tcpdf.php:				$this->diffs[$d] = $diff;
tcpdf.php:			$this->setFontSubBuffer($fontkey, 'diff', $d);
tcpdf.php:			if (!isset($this->FontFiles[$file])) {
tcpdf.php:					$this->FontFiles[$file] = array('length1' => $originalsize, 'fontdir' => $fontdir, 'subset' => $subset, 'fontkeys' => array($fontkey));
tcpdf.php:					$this->FontFiles[$file] = array('length1' => $size1, 'length2' => $size2, 'fontdir' => $fontdir, 'subset' => $subset, 'fontkeys' => array($fontkey));
tcpdf.php:				$this->FontFiles[$file]['subset'] = ($this->FontFiles[$file]['subset'] AND $subset);
tcpdf.php:				if (!in_array($fontkey, $this->FontFiles[$file]['fontkeys'])) {
tcpdf.php:					$this->FontFiles[$file]['fontkeys'][] = $fontkey;
tcpdf.php:	 * @param string $family Family font. It can be either a name defined by AddFont() or one of the standard Type1 families (case insensitive):<ul><li>times (Times-Roman)</li><li>timesb (Times-Bold)</li><li>timesi (Times-Italic)</li><li>timesbi (Times-BoldItalic)</li><li>helvetica (Helvetica)</li><li>helveticab (Helvetica-Bold)</li><li>helveticai (Helvetica-Oblique)</li><li>helveticabi (Helvetica-BoldOblique)</li><li>courier (Courier)</li><li>courierb (Courier-Bold)</li><li>courieri (Courier-Oblique)</li><li>courierbi (Courier-BoldOblique)</li><li>symbol (Symbol)</li><li>zapfdingbats (ZapfDingbats)</li></ul> It is also possible to pass an empty string. In that case, the current family is retained.
tcpdf.php:			$size = $this->FontSizePt;
tcpdf.php:		$fontdata = $this->AddFont($family, $style, $fontfile, $subset);
tcpdf.php:		$this->FontFamily = $fontdata['family'];
tcpdf.php:		$this->FontStyle = $fontdata['style'];
tcpdf.php:		if (isset($this->CurrentFont['fontkey']) AND isset($this->CurrentFont['subsetchars'])) {
tcpdf.php:			$this->setFontSubBuffer($this->CurrentFont['fontkey'], 'subsetchars', $this->CurrentFont['subsetchars']);
tcpdf.php:		$this->CurrentFont = $this->getFontBuffer($fontdata['fontkey']);
tcpdf.php:		$this->setFontSize($size, $out);
tcpdf.php:		$this->FontSizePt = $size;
tcpdf.php:		$this->FontSize = $size / $this->k;
tcpdf.php:		if (isset($this->CurrentFont['desc']['FontBBox'])) {
tcpdf.php:			$bbox = explode(' ', substr($this->CurrentFont['desc']['FontBBox'], 1, -1));
tcpdf.php:			$font_height = ((intval($bbox[3]) - intval($bbox[1])) * $size / 1000);
tcpdf.php:		if (isset($this->CurrentFont['desc']['Ascent']) AND ($this->CurrentFont['desc']['Ascent'] > 0)) {
tcpdf.php:			$font_ascent = ($this->CurrentFont['desc']['Ascent'] * $size / 1000);
tcpdf.php:		if (isset($this->CurrentFont['desc']['Descent']) AND ($this->CurrentFont['desc']['Descent'] <= 0)) {
tcpdf.php:			$font_descent = (- $this->CurrentFont['desc']['Descent'] * $size / 1000);
tcpdf.php:			$font_descent = $font_height - $font_ascent;
tcpdf.php:			$font_descent = $font_height - $font_ascent;
tcpdf.php:			$font_ascent = $font_height - $font_descent;
tcpdf.php:		$this->FontAscent = ($font_ascent / $this->k);
tcpdf.php:		$this->FontDescent = ($font_descent / $this->k);
tcpdf.php:		if ($out AND ($this->page > 0) AND (isset($this->CurrentFont['i'])) AND ($this->state == 2)) {
tcpdf.php:			$this->_out(sprintf('BT /F%d %F Tf ET', $this->CurrentFont['i'], $this->FontSizePt));
tcpdf.php:	 * @since 5.9.152 (2012-03-23)
tcpdf.php:		if (isset($this->CurrentFont['desc']['FontBBox'])) {
tcpdf.php:			$tmpbbox = explode(' ', substr($this->CurrentFont['desc']['FontBBox'], 1, -1));
tcpdf.php:			if (isset($this->CurrentFont['desc']['MaxWidth'])) {
tcpdf.php:				$maxw = $this->getAbsFontMeasure(intval($this->CurrentFont['desc']['MaxWidth']));
tcpdf.php:				if (isset($this->CurrentFont['desc']['MissingWidth'])) {
tcpdf.php:					$maxw = max($maxw, $this->CurrentFont['desc']['MissingWidth']);
tcpdf.php:				if (isset($this->CurrentFont['desc']['AvgWidth'])) {
tcpdf.php:					$maxw = max($maxw, $this->CurrentFont['desc']['AvgWidth']);
tcpdf.php:				if (isset($this->CurrentFont['dw'])) {
tcpdf.php:					$maxw = max($maxw, $this->CurrentFont['dw']);
tcpdf.php:				foreach ($this->CurrentFont['cw'] as $char => $w) {
tcpdf.php:				$maxw = $this->getAbsFontMeasure($maxw);
tcpdf.php:			$fbbox = array(0, (0 - $this->FontDescent), $maxw, $this->FontAscent);
tcpdf.php:	 * @since 5.9.186 (2012-09-13)
tcpdf.php:		return ($s * $this->FontSize / 1000);
tcpdf.php:	 * @since 5.9.186 (2012-09-13)
tcpdf.php:		if (isset($this->CurrentFont['cw'][$c])) {
tcpdf.php:			if (isset($this->CurrentFont['cbbox'][$c])) {
tcpdf.php:				$result = $this->CurrentFont['cbbox'][$c];
tcpdf.php:	 * @since 4.9.003 (2010-03-30)
tcpdf.php:		$fontdata = $this->AddFont($font, $style);
tcpdf.php:		$fontinfo = $this->getFontBuffer($fontdata['fontkey']);
tcpdf.php:			$descent = (- $fontinfo['desc']['Descent'] * $size / 1000);
tcpdf.php:		return ($descent / $this->k);
tcpdf.php:	 * @since 4.9.003 (2010-03-30)
tcpdf.php:		$fontdata = $this->AddFont($font, $style);
tcpdf.php:		$fontinfo = $this->getFontBuffer($fontdata['fontkey']);
tcpdf.php:		return ($ascent / $this->k);
tcpdf.php:	 * @since 5.9.153 (2012-03-28)
tcpdf.php:			$char = TCPDF_FONTS::UTF8StringToArray($char, $this->isunicode, $this->CurrentFont);
tcpdf.php:				return (isset($this->CurrentFont['cw'][intval($char)]));
tcpdf.php:			$font = $this->FontFamily;
tcpdf.php:		$fontdata = $this->AddFont($font, $style);
tcpdf.php:		$fontinfo = $this->getFontBuffer($fontdata['fontkey']);
tcpdf.php:	 * @since 5.9.153 (2012-03-28)
tcpdf.php:			$font = $this->FontFamily;
tcpdf.php:		$fontdata = $this->AddFont($font, $style);
tcpdf.php:		$fontinfo = $this->getFontBuffer($fontdata['fontkey']);
tcpdf.php:		$uniarr = TCPDF_FONTS::UTF8StringToArray($text, $this->isunicode, $this->CurrentFont);
tcpdf.php:		return TCPDF_FONTS::UniArrSubString(TCPDF_FONTS::UTF8ArrayToUniArray($uniarr, $this->isunicode));
tcpdf.php:		$this->default_monospaced_font = $font;
tcpdf.php:		$n = count($this->links) + 1;
tcpdf.php:		$this->links[$n] = array('p' => 0, 'y' => 0, 'f' => false);
tcpdf.php:	 * @param float $y Ordinate of target position; -1 indicates the current position. The default value is 0 (top of page)
tcpdf.php:	 * @param int|string $page Number of target page; -1 indicates the current page (default value). If you prefix a page number with the * character, then this page will not be changed when adding/deleting/moving pages.
tcpdf.php:	public function setLink($link, $y=0, $page=-1) {
tcpdf.php:			$page = $this->page;
tcpdf.php:		if ($y == -1) {
tcpdf.php:			$y = $this->y;
tcpdf.php:		$this->links[$link] = array('p' => $page, 'y' => $y, 'f' => $fixed);
tcpdf.php:	 * @param float $x Abscissa of the upper-left corner of the rectangle
tcpdf.php:	 * @param float $y Ordinate of the upper-left corner of the rectangle
tcpdf.php:		$this->Annotation($x, $y, $w, $h, $link, array('Subtype'=>'Link'), $spaces);
tcpdf.php:	 * @param float $x Abscissa of the upper-left corner of the rectangle
tcpdf.php:	 * @param float $y Ordinate of the upper-left corner of the rectangle
tcpdf.php:	 * @since 4.0.018 (2008-08-06)
tcpdf.php:		if ($this->inxobj) {
tcpdf.php:			$this->xobjects[$this->xobjid]['annotations'][] = array('x' => $x, 'y' => $y, 'w' => $w, 'h' => $h, 'text' => $text, 'opt' => $opt, 'spaces' => $spaces);
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:		// check page for no-write regions and adapt page margins if necessary
tcpdf.php:		list($x, $y) = $this->checkPageRegions($h, $x, $y);
tcpdf.php:		if (isset($this->transfmatrix) AND !empty($this->transfmatrix)) {
tcpdf.php:			for ($i=$this->transfmatrix_key; $i > 0; --$i) {
tcpdf.php:				$maxid = count($this->transfmatrix[$i]) - 1;
tcpdf.php:				for ($j=$maxid; $j >= 0; --$j) {
tcpdf.php:					$ctm = $this->transfmatrix[$i][$j];
tcpdf.php:						$x = $x * $this->k;
tcpdf.php:						$y = ($this->h - $y) * $this->k;
tcpdf.php:						$w = $w * $this->k;
tcpdf.php:						$h = $h * $this->k;
tcpdf.php:						$yt = $y - $h;
tcpdf.php:						$yt = $y - $h;
tcpdf.php:						$w = (max($x1, $x2, $x3, $x4) - $x) / $this->k;
tcpdf.php:						$h = ($y - min($y1, $y2, $y3, $y4)) / $this->k;
tcpdf.php:						$x = $x / $this->k;
tcpdf.php:						$y = $this->h - ($y / $this->k);
tcpdf.php:		if ($this->page <= 0) {
tcpdf.php:			$page = $this->page;
tcpdf.php:		if (!isset($this->PageAnnots[$page])) {
tcpdf.php:			$this->PageAnnots[$page] = array();
tcpdf.php:		$this->PageAnnots[$page][] = array('n' => ++$this->n, 'x' => $x, 'y' => $y, 'w' => $w, 'h' => $h, 'txt' => $text, 'opt' => $opt, 'numspaces' => $spaces);
tcpdf.php:		if (!$this->pdfa_mode || ($this->pdfa_mode && $this->pdfa_version == 3)) {
tcpdf.php:				AND (!isset($this->embeddedfiles[basename($opt['FS'])]))) {
tcpdf.php:				$this->embeddedfiles[basename($opt['FS'])] = array('f' => ++$this->n, 'n' => ++$this->n, 'file' => $opt['FS']);
tcpdf.php:			$this->Image($opt['mk']['i'], '', '', 10, 10, '', '', '', false, 300, '', false, false, 0, false, true);
tcpdf.php:			$this->Image($opt['mk']['ri'], '', '', 0, 0, '', '', '', false, 300, '', false, false, 0, false, true);
tcpdf.php:			$this->Image($opt['mk']['ix'], '', '', 0, 0, '', '', '', false, 300, '', false, false, 0, false, true);
tcpdf.php:	 * @since 4.4.000 (2008-12-07)
tcpdf.php:		if ($this->pdfa_mode && $this->pdfa_version != 3)  {
tcpdf.php:		reset($this->embeddedfiles);
tcpdf.php:		foreach ($this->embeddedfiles as $filename => $filedata) {
tcpdf.php:		    $data = $this->getCachedFileContents($filedata['file']);
tcpdf.php:					$this->efnames[$filename] = $filedata['f'].' 0 R';
tcpdf.php:					$out = $this->_getobj($filedata['f'])."\n";
tcpdf.php:					$out .= '<</Type /Filespec /F '.$this->_datastring($filename, $filedata['f']);
tcpdf.php:					$out .= ' /UF '.$this->_datastring($filename, $filedata['f']);
tcpdf.php:					$this->_out($out);
tcpdf.php:					if ($this->compress) {
tcpdf.php:					if ($this->pdfa_version == 3) {
tcpdf.php:					$stream = $this->_getrawstream($data, $filedata['n']);
tcpdf.php:					$out = $this->_getobj($filedata['n'])."\n";
tcpdf.php:					$this->_out($out);
tcpdf.php:	 * @param mixed $border Indicates if borders must be drawn around the cell. The value can be a number:<ul><li>0: no border (default)</li><li>1: frame</li></ul> or a string containing some or all of the following characters (in any order):<ul><li>L: left</li><li>T: top</li><li>R: right</li><li>B: bottom</li></ul> or an array of line styles for each border group - for example: array('LTRB' => array('width' => 2, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0, 0, 0)))
tcpdf.php:	 * @param boolean $rtloff if true uses the page top-left corner as origin of axis for $x and $y initial position.
tcpdf.php:		$textrendermode = $this->textrendermode;
tcpdf.php:		$textstrokewidth = $this->textstrokewidth;
tcpdf.php:		$this->setTextRenderingMode($fstroke, $ffill, $fclip);
tcpdf.php:		$this->setXY($x, $y, $rtloff);
tcpdf.php:		$this->Cell(0, 0, $txt, $border, $ln, $align, $fill, $link, $stretch, $ignore_min_height, $calign, $valign);
tcpdf.php:		$this->textrendermode = $textrendermode;
tcpdf.php:		$this->textstrokewidth = $textstrokewidth;
tcpdf.php:		if ($this->num_columns > 1) {
tcpdf.php:			if ($this->current_column < ($this->num_columns - 1)) {
tcpdf.php:				$this->selectColumn($this->current_column + 1);
tcpdf.php:			} elseif ($this->AutoPageBreak) {
tcpdf.php:				$this->AddPage();
tcpdf.php:				$this->selectColumn(0);
tcpdf.php:		return $this->AutoPageBreak;
tcpdf.php:	 * @since 3.2.000 (2008-07-01)
tcpdf.php:			$y = $this->y;
tcpdf.php:		$current_page = $this->page;
tcpdf.php:		if ((($y + $h) > $this->PageBreakTrigger) AND ($this->inPageBody()) AND ($this->AcceptPageBreak())) {
tcpdf.php:				$x = $this->x;
tcpdf.php:				$this->AddPage($this->CurOrientation);
tcpdf.php:				$this->y = $this->tMargin;
tcpdf.php:				$oldpage = $this->page - 1;
tcpdf.php:				if ($this->rtl) {
tcpdf.php:					if ($this->pagedim[$this->page]['orm'] != $this->pagedim[$oldpage]['orm']) {
tcpdf.php:						$this->x = $x - ($this->pagedim[$this->page]['orm'] - $this->pagedim[$oldpage]['orm']);
tcpdf.php:						$this->x = $x;
tcpdf.php:					if ($this->pagedim[$this->page]['olm'] != $this->pagedim[$oldpage]['olm']) {
tcpdf.php:						$this->x = $x + ($this->pagedim[$this->page]['olm'] - $this->pagedim[$oldpage]['olm']);
tcpdf.php:						$this->x = $x;
tcpdf.php:		if ($current_page != $this->page) {
tcpdf.php:	 * Prints a cell (rectangular area) with optional borders, background color and character string. The upper-left corner of the cell corresponds to the current position. The text can be aligned or centered. After the call, the current position moves to the right or to the next line. It is possible to put a link on the text.<br />
tcpdf.php:	 * @param mixed $border Indicates if borders must be drawn around the cell. The value can be a number:<ul><li>0: no border (default)</li><li>1: frame</li></ul> or a string containing some or all of the following characters (in any order):<ul><li>L: left</li><li>T: top</li><li>R: right</li><li>B: bottom</li></ul> or an array of line styles for each border group - for example: array('LTRB' => array('width' => 2, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0, 0, 0)))
tcpdf.php:		$prev_cell_margin = $this->cell_margin;
tcpdf.php:		$prev_cell_padding = $this->cell_padding;
tcpdf.php:		$this->adjustCellPadding($border);
tcpdf.php:			$min_cell_height = $this->getCellHeight($this->FontSize);
tcpdf.php:		$this->checkPageBreak($h + $this->cell_margin['T'] + $this->cell_margin['B']);
tcpdf.php:		if ($this->txtshadow['enabled']) {
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:			$bc = $this->bgcolor;
tcpdf.php:			$fc = $this->fgcolor;
tcpdf.php:			$sc = $this->strokecolor;
tcpdf.php:			$alpha = $this->alpha;
tcpdf.php:			$this->x += $this->txtshadow['depth_w'];
tcpdf.php:			$this->y += $this->txtshadow['depth_h'];
tcpdf.php:			$this->setFillColorArray($this->txtshadow['color']);
tcpdf.php:			$this->setTextColorArray($this->txtshadow['color']);
tcpdf.php:			$this->setDrawColorArray($this->txtshadow['color']);
tcpdf.php:			if ($this->txtshadow['opacity'] != $alpha['CA']) {
tcpdf.php:				$this->setAlpha($this->txtshadow['opacity'], $this->txtshadow['blend_mode']);
tcpdf.php:			if ($this->state == 2) {
tcpdf.php:				$this->_out($this->getCellCode($w, $h, $txt, $border, $ln, $align, $fill, $link, $stretch, true, $calign, $valign));
tcpdf.php:			$this->x = $x;
tcpdf.php:			$this->y = $y;
tcpdf.php:			$this->setFillColorArray($bc);
tcpdf.php:			$this->setTextColorArray($fc);
tcpdf.php:			$this->setDrawColorArray($sc);
tcpdf.php:			if ($this->txtshadow['opacity'] != $alpha['CA']) {
tcpdf.php:				$this->setAlpha($alpha['CA'], $alpha['BM'], $alpha['ca'], $alpha['AIS']);
tcpdf.php:		if ($this->state == 2) {
tcpdf.php:			$this->_out($this->getCellCode($w, $h, $txt, $border, $ln, $align, $fill, $link, $stretch, true, $calign, $valign));
tcpdf.php:		$this->cell_padding = $prev_cell_padding;
tcpdf.php:		$this->cell_margin = $prev_cell_margin;
tcpdf.php:	 * Returns the PDF string code to print a cell (rectangular area) with optional borders, background color and character string. The upper-left corner of the cell corresponds to the current position. The text can be aligned or centered. After the call, the current position moves to the right or to the next line. It is possible to put a link on the text.<br />
tcpdf.php:	 * @param mixed $border Indicates if borders must be drawn around the cell. The value can be a number:<ul><li>0: no border (default)</li><li>1: frame</li></ul> or a string containing some or all of the following characters (in any order):<ul><li>L: left</li><li>T: top</li><li>R: right</li><li>B: bottom</li></ul> or an array of line styles for each border group - for example: array('LTRB' => array('width' => 2, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0, 0, 0)))
tcpdf.php:		// replace 'NO-BREAK SPACE' (U+00A0) character with a simple space
tcpdf.php:		$txt = str_replace(TCPDF_FONTS::unichr(160, $this->isunicode), ' ', $txt);
tcpdf.php:		$prev_cell_margin = $this->cell_margin;
tcpdf.php:		$prev_cell_padding = $this->cell_padding;
tcpdf.php:		$txt = TCPDF_STATIC::removeSHY($txt, $this->isunicode);
tcpdf.php:		$this->adjustCellPadding($border);
tcpdf.php:			$min_cell_height = $this->getCellHeight($this->FontSize);
tcpdf.php:		$k = $this->k;
tcpdf.php:		// check page for no-write regions and adapt page margins if necessary
tcpdf.php:		list($this->x, $this->y) = $this->checkPageRegions($h, $this->x, $this->y);
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$x = $this->x - $this->cell_margin['R'];
tcpdf.php:			$x = $this->x + $this->cell_margin['L'];
tcpdf.php:		$y = $this->y + $this->cell_margin['T'];
tcpdf.php:		$prev_font_stretching = $this->font_stretching;
tcpdf.php:		$prev_font_spacing = $this->font_spacing;
tcpdf.php:						$y -= $this->cell_padding['T'];
tcpdf.php:						$y -= ($h - $this->cell_padding['B'] - $this->FontAscent - $this->FontDescent);
tcpdf.php:						$y -= (($h - $this->FontAscent - $this->FontDescent) / 2);
tcpdf.php:						$y -= ($this->cell_padding['T'] + $this->FontAscent);
tcpdf.php:						$y -= ($h - $this->cell_padding['B'] - $this->FontDescent);
tcpdf.php:						$y -= (($h + $this->FontAscent - $this->FontDescent) / 2);
tcpdf.php:						$y -= ($this->cell_padding['T'] + $this->FontAscent + $this->FontDescent);
tcpdf.php:						$y -= ($h - $this->cell_padding['B']);
tcpdf.php:						$y -= (($h + $this->FontAscent + $this->FontDescent) / 2);
tcpdf.php:				$y -= $h;
tcpdf.php:				$y -= ($h / 2);
tcpdf.php:				$yt = $y + $this->cell_padding['T'];
tcpdf.php:				$yt = $y + $h - $this->cell_padding['B'] - $this->FontAscent - $this->FontDescent;
tcpdf.php:				$yt = $y + (($h - $this->FontAscent - $this->FontDescent) / 2);
tcpdf.php:		$basefonty = $yt + $this->FontAscent;
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$w = $x - $this->lMargin;
tcpdf.php:				$w = $this->w - $this->rMargin - $x;
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$xk = (($x - $w) * $k);
tcpdf.php:			$s .= sprintf('%F %F %F %F re %s ', $xk, (($this->h - $y) * $k), ($w * $k), (-$h * $k), $op);
tcpdf.php:		$s .= $this->getCellBorder($x, $y, $w, $h, $border);
tcpdf.php:			if ($this->isunicode) {
tcpdf.php:				if (($this->CurrentFont['type'] == 'core') OR ($this->CurrentFont['type'] == 'TrueType') OR ($this->CurrentFont['type'] == 'Type1')) {
tcpdf.php:					$txt2 = TCPDF_FONTS::UTF8ToLatin1($txt2, $this->isunicode, $this->CurrentFont);
tcpdf.php:					$unicode = TCPDF_FONTS::UTF8StringToArray($txt, $this->isunicode, $this->CurrentFont); // array of UTF-8 unicode values
tcpdf.php:					$unicode = TCPDF_FONTS::utf8Bidi($unicode, '', $this->tmprtl, $this->isunicode, $this->CurrentFont);
tcpdf.php:								$ch1 = ($i > 0) ? $unicode[($i - 1)] : 0;
tcpdf.php:								$ch2 = ($i > 1) ? $unicode[($i - 2)] : 0;
tcpdf.php:								$chn = ($i < ($numchars - 1)) ? $unicode[($i + 1)] : 0;
tcpdf.php:											$output[] = $this->replaceChar($ch0, (0xf713 + $ch0 - 0x0e48));
tcpdf.php:										$output[] = $this->replaceChar($ch0, (0xf705 + $ch0 - 0x0e48));
tcpdf.php:											$output[] = $this->replaceChar($ch0, (0xf713 + $ch0 - 0x0e48));
tcpdf.php:										$output[] = $this->replaceChar($ch0, (0xf70a + $ch0 - 0x0e48));
tcpdf.php:									if ($this->isCharDefined(0xf711) AND $this->isCharDefined(0x0e32)) {
tcpdf.php:										$this->CurrentFont['subsetchars'][0xf711] = true;
tcpdf.php:										$this->CurrentFont['subsetchars'][0x0e32] = true;
tcpdf.php:										$output[] = $this->replaceChar($ch0, 0xf710);
tcpdf.php:										$output[] = $this->replaceChar($ch0, (0xf701 + $ch0 - 0x0e34));
tcpdf.php:										$output[] = $this->replaceChar($ch0, 0xf712);
tcpdf.php:									$output[] = $this->replaceChar($ch0, (0xf718 + $ch0 - 0x0e38));
tcpdf.php:									$output[] = $this->replaceChar($ch0, 0xf70f);
tcpdf.php:									$output[] = $this->replaceChar($ch0, 0xf700);
tcpdf.php:								// non-thai character
tcpdf.php:						$this->setFontSubBuffer($this->CurrentFont['fontkey'], 'subsetchars', $this->CurrentFont['subsetchars']);
tcpdf.php:			$txwidth = $this->GetStringWidth($txt);
tcpdf.php:					$ratio = (($w - $this->cell_padding['L'] - $this->cell_padding['R']) / $width);
tcpdf.php:						$this->font_spacing += ($w - $this->cell_padding['L'] - $this->cell_padding['R'] - $width) / (max(($this->GetNumChars($txt) - 1), 1) * ($this->font_stretching / 100));
tcpdf.php:						$this->font_stretching *= $ratio;
tcpdf.php:					$width = $w - $this->cell_padding['L'] - $this->cell_padding['R'];
tcpdf.php:			if ($this->font_stretching != 100) {
tcpdf.php:				$rs .= sprintf('BT %F Tz ET ', $this->font_stretching);
tcpdf.php:			if ($this->font_spacing != 0) {
tcpdf.php:				$rs .= sprintf('BT %F Tc ET ', ($this->font_spacing * $this->k));
tcpdf.php:			if ($this->ColorFlag AND ($this->textrendermode < 4)) {
tcpdf.php:				$s .= 'q '.$this->TextColor.' ';
tcpdf.php:			$s .= sprintf('BT %d Tr %F w ET ', $this->textrendermode, ($this->textstrokewidth * $this->k));
tcpdf.php:				if ($this->isUnicodeFont()) {
tcpdf.php:					$width = $this->GetStringWidth(str_replace(' ', '', $txt));
tcpdf.php:					$spacewidth = -1000 * ($w - $width - $this->cell_padding['L'] - $this->cell_padding['R']) / ($ns?$ns:1) / ($this->FontSize?$this->FontSize:1);
tcpdf.php:					if ($this->font_stretching != 100) {
tcpdf.php:						$spacewidth /= ($this->font_stretching / 100);
tcpdf.php:					$spacewidth = (($w - $width - $this->cell_padding['L'] - $this->cell_padding['R']) / ($ns?$ns:1)) * $this->k;
tcpdf.php:					if ($this->font_stretching != 100) {
tcpdf.php:						$spacewidth /= ($this->font_stretching / 100);
tcpdf.php:				$width = $w - $this->cell_padding['L'] - $this->cell_padding['R'];
tcpdf.php:					$dx = ($w - $width) / 2;
tcpdf.php:					if ($this->rtl) {
tcpdf.php:						$dx = $this->cell_padding['R'];
tcpdf.php:						$dx = $w - $width - $this->cell_padding['R'];
tcpdf.php:					if ($this->rtl) {
tcpdf.php:						$dx = $w - $width - $this->cell_padding['L'];
tcpdf.php:						$dx = $this->cell_padding['L'];
tcpdf.php:					if ($this->rtl) {
tcpdf.php:						$dx = $this->cell_padding['R'];
tcpdf.php:						$dx = $this->cell_padding['L'];
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$xdx = $x - $dx - $width;
tcpdf.php:			$s .= sprintf('BT %F %F Td [(%s)] TJ ET', $xdk, (($this->h - $basefonty) * $k), $txt2);
tcpdf.php:				$ty = (($this->h - $basefonty + (0.2 * $this->FontSize)) * $k);
tcpdf.php:				$spw = (($w - $txwidth - $this->cell_padding['L'] - $this->cell_padding['R']) / ($ns?$ns:1));
tcpdf.php:						$xshift += $this->GetArrStringWidth($uniarr); // + shift justification
tcpdf.php:			if ($this->underline) {
tcpdf.php:				$s .= ' '.$this->_dounderlinew($xdx, $basefonty, $width);
tcpdf.php:			if ($this->linethrough) {
tcpdf.php:				$s .= ' '.$this->_dolinethroughw($xdx, $basefonty, $width);
tcpdf.php:			if ($this->overline) {
tcpdf.php:				$s .= ' '.$this->_dooverlinew($xdx, $basefonty, $width);
tcpdf.php:			if ($this->ColorFlag AND ($this->textrendermode < 4)) {
tcpdf.php:				$this->Link($xdx, $yt, $width, ($this->FontAscent + $this->FontDescent), $link, $ns);
tcpdf.php:			if ($this->font_spacing != 0) {
tcpdf.php:			if ($this->font_stretching != 100) {
tcpdf.php:		if (!$this->isUnicodeFont() AND ($align == 'J')) {
tcpdf.php:		$this->font_stretching = $prev_font_stretching;
tcpdf.php:		$this->font_spacing = $prev_font_spacing;
tcpdf.php:		$this->lasth = $h;
tcpdf.php:			$this->y = $y + $h + $this->cell_margin['B'];
tcpdf.php:				if ($this->rtl) {
tcpdf.php:					$this->x = $this->w - $this->rMargin;
tcpdf.php:					$this->x = $this->lMargin;
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$this->x = $x - $w - $this->cell_margin['L'];
tcpdf.php:				$this->x = $x + $w + $this->cell_margin['R'];
tcpdf.php:		$gstyles = ''.$this->linestyleWidth.' '.$this->linestyleCap.' '.$this->linestyleJoin.' '.$this->linestyleDash.' '.$this->DrawColor.' '.$this->FillColor."\n";
tcpdf.php:		$this->cell_padding = $prev_cell_padding;
tcpdf.php:		$this->cell_margin = $prev_cell_margin;
tcpdf.php:	 * @since 5.9.167 (2012-06-22)
tcpdf.php:		if ($this->isCharDefined($newchar)) {
tcpdf.php:			$this->CurrentFont['subsetchars'][$newchar] = true;
tcpdf.php:	 * @param string|array|int $brd Indicates if borders must be drawn around the cell. The value can be a number:<ul><li>0: no border (default)</li><li>1: frame</li></ul> or a string containing some or all of the following characters (in any order):<ul><li>L: left</li><li>T: top</li><li>R: right</li><li>B: bottom</li></ul> or an array of line styles for each border group - for example: array('LTRB' => array('width' => 2, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0, 0, 0)))
tcpdf.php:	 * @since 5.7.000 (2010-08-02)
tcpdf.php:		$k = $this->k;
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$xeL = ($x - $w) * $k;
tcpdf.php:		$yeL = (($this->h - ($y + $h)) * $k);
tcpdf.php:		$yeT = (($this->h - $y) * $k);
tcpdf.php:				$prev_style = $this->linestyleWidth.' '.$this->linestyleCap.' '.$this->linestyleJoin.' '.$this->linestyleDash.' '.$this->DrawColor.' ';
tcpdf.php:				$s .= $this->setLineStyle($style, true)."\n";
tcpdf.php:					$off = (($this->LineWidth / 2) * $k);
tcpdf.php:					$xL = $xeL - $off;
tcpdf.php:					$yL = $yeL - $off;
tcpdf.php:					$w += $this->LineWidth;
tcpdf.php:					$h += $this->LineWidth;
tcpdf.php:					$off = ($this->LineWidth / 2) * $k;
tcpdf.php:					$xR = $xeR - $off;
tcpdf.php:					$yT = $yeT - $off;
tcpdf.php:					$w -= $this->LineWidth;
tcpdf.php:					$h -= $this->LineWidth;
tcpdf.php:				$s .= sprintf('%F %F %F %F re S ', $xT, $yT, ($w * $k), (-$h * $k));
tcpdf.php:				$s .= "\n".$this->linestyleWidth.' '.$this->linestyleCap.' '.$this->linestyleJoin.' '.$this->linestyleDash.' '.$this->DrawColor."\n";
tcpdf.php:	 * @param mixed $border Indicates if borders must be drawn around the cell. The value can be a number:<ul><li>0: no border (default)</li><li>1: frame</li></ul> or a string containing some or all of the following characters (in any order):<ul><li>L: left</li><li>T: top</li><li>R: right</li><li>B: bottom</li></ul> or an array of line styles for each border group - for example: array('LTRB' => array('width' => 2, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0, 0, 0)))
tcpdf.php:	 * @param boolean $ishtml INTERNAL USE ONLY -- set to true if $txt is HTML content (default = false). Never set this parameter to true, use instead writeHTMLCell() or writeHTML() methods.
tcpdf.php:		$prev_cell_margin = $this->cell_margin;
tcpdf.php:		$prev_cell_padding = $this->cell_padding;
tcpdf.php:		$this->adjustCellPadding($border);
tcpdf.php:		$mc_padding = $this->cell_padding;
tcpdf.php:		$mc_margin = $this->cell_margin;
tcpdf.php:		$this->cell_padding['T'] = 0;
tcpdf.php:		$this->cell_padding['B'] = 0;
tcpdf.php:		$this->setCellMargins(0, 0, 0, 0);
tcpdf.php:		if (TCPDF_STATIC::empty_string($this->lasth) OR $reseth) {
tcpdf.php:			$this->resetLastH();
tcpdf.php:			$this->setY($y); // set y in order to convert negative y values to positive ones
tcpdf.php:		$y = $this->GetY();
tcpdf.php:		if (($h > 0) AND $this->inPageBody() AND (($y + $h + $mc_margin['T'] + $mc_margin['B']) > $this->PageBreakTrigger)) {
tcpdf.php:			$newh = ($this->PageBreakTrigger - $y);
tcpdf.php:			$resth = ($h - $newh); // cell to be printed on the next page/column
tcpdf.php:		$startpage = $this->page;
tcpdf.php:		$startcolumn = $this->current_column;
tcpdf.php:			$this->setX($x);
tcpdf.php:			$x = $this->GetX();
tcpdf.php:		// check page for no-write regions and adapt page margins if necessary
tcpdf.php:		list($x, $y) = $this->checkPageRegions(0, $x, $y);
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$ox = ($this->w - $x - $mc_margin['R']);
tcpdf.php:		$this->x = $ox;
tcpdf.php:		$this->y = $oy;
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$w = ($this->x - $this->lMargin - $mc_margin['L']);
tcpdf.php:				$w = ($this->w - $this->x - $this->rMargin - $mc_margin['R']);
tcpdf.php:		$lMargin = $this->lMargin;
tcpdf.php:		$rMargin = $this->rMargin;
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$this->rMargin = ($this->w - $this->x);
tcpdf.php:			$this->lMargin = ($this->x - $w);
tcpdf.php:			$this->lMargin = ($this->x);
tcpdf.php:			$this->rMargin = ($this->w - $this->x - $w);
tcpdf.php:		$this->clMargin = $this->lMargin;
tcpdf.php:		$this->crMargin = $this->rMargin;
tcpdf.php:			$this->y += $mc_padding['T'];
tcpdf.php:			$this->writeHTML($txt, true, false, $reseth, true, $align);
tcpdf.php:			$prev_FontSizePt = $this->FontSizePt;
tcpdf.php:				$tobottom = ($this->h - $this->y - $this->bMargin - $this->cell_padding['T'] - $this->cell_padding['B']);
tcpdf.php:				$text_height = $this->getStringHeight($w, $txt, $reseth, $autopadding, $mc_padding, $border);
tcpdf.php:				if ($fitcell AND ($text_height > $maxh) AND ($this->FontSizePt > 1)) {
tcpdf.php:					$fmax = $this->FontSizePt;
tcpdf.php:					$diff_epsilon = (1 / $this->k); // one point (min resolution)
tcpdf.php:						$this->setFontSize($fmid, false);
tcpdf.php:						$this->resetLastH();
tcpdf.php:						$text_height = $this->getStringHeight($w, $txt, $reseth, $autopadding, $mc_padding, $border);
tcpdf.php:						$diff = ($maxh - $text_height);
tcpdf.php:						--$maxit;
tcpdf.php:						$this->setFontSize($fmin);
tcpdf.php:						$this->resetLastH();
tcpdf.php:						$text_height = $this->getStringHeight($w, $txt, $reseth, $autopadding, $mc_padding, $border);
tcpdf.php:						$this->setFontSize($fmid);
tcpdf.php:						$this->resetLastH();
tcpdf.php:						$this->y += (($maxh - $text_height) / 2);
tcpdf.php:						$this->y += ($maxh - $text_height);
tcpdf.php:			$nl = $this->Write($this->lasth, $txt, '', 0, $align, true, $stretch, false, true, $maxh, 0, $mc_margin);
tcpdf.php:				$this->setFontSize($prev_FontSizePt);
tcpdf.php:			$this->y += $mc_padding['B'];
tcpdf.php:		// Get end-of-text Y position
tcpdf.php:		$currentY = $this->y;
tcpdf.php:		$endpage = $this->page;
tcpdf.php:			$skip = ($endpage - $startpage);
tcpdf.php:					$this->checkPageBreak($this->PageBreakTrigger + 1);
tcpdf.php:				if ($this->num_columns > 1) {
tcpdf.php:					$tmpresth -= ($this->h - $this->y - $this->bMargin);
tcpdf.php:					$tmpresth -= ($this->h - $this->tMargin - $this->bMargin);
tcpdf.php:				--$skip;
tcpdf.php:			$currentY = $this->y;
tcpdf.php:			$endpage = $this->page;
tcpdf.php:		$endcolumn = $this->current_column;
tcpdf.php:		if ($this->num_columns == 0) {
tcpdf.php:			$this->num_columns = 1;
tcpdf.php:		$check_page_regions = $this->check_page_regions;
tcpdf.php:		$this->check_page_regions = false;
tcpdf.php:		$border_start = TCPDF_STATIC::getBorderMode($border, $position='start', $this->opencell);
tcpdf.php:		$border_end = TCPDF_STATIC::getBorderMode($border, $position='end', $this->opencell);
tcpdf.php:		$border_middle = TCPDF_STATIC::getBorderMode($border, $position='middle', $this->opencell);
tcpdf.php:			$this->setPage($page);
tcpdf.php:			if ($this->num_columns < 2) {
tcpdf.php:				// single-column mode
tcpdf.php:				$this->setX($x);
tcpdf.php:				$this->y = $this->tMargin;
tcpdf.php:				if (($this->rtl) AND ($this->pagedim[$page]['orm'] != $this->pagedim[$startpage]['orm'])) {
tcpdf.php:					$this->x -= ($this->pagedim[$page]['orm'] - $this->pagedim[$startpage]['orm']);
tcpdf.php:				} elseif ((!$this->rtl) AND ($this->pagedim[$page]['olm'] != $this->pagedim[$startpage]['olm'])) {
tcpdf.php:					$this->x += ($this->pagedim[$page]['olm'] - $this->pagedim[$startpage]['olm']);
tcpdf.php:					if ($column != $this->current_column) {
tcpdf.php:						$this->selectColumn($column);
tcpdf.php:					if ($this->rtl) {
tcpdf.php:						$this->x -= $mc_margin['R'];
tcpdf.php:						$this->x += $mc_margin['L'];
tcpdf.php:						$h = max($h, ($currentY - $oy));
tcpdf.php:						$this->y = $oy;
tcpdf.php:						$this->y = $oy;
tcpdf.php:						$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:						$h = $currentY - $this->y;
tcpdf.php:						$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:						$resth -= $h;
tcpdf.php:					$ccode .= $this->getCellCode($w, $h, '', $cborder, 1, '', $fill, '', 0, true)."\n";
tcpdf.php:				for ($column = $startcolumn; $column < $this->num_columns; ++$column) { // for each column
tcpdf.php:					if ($column != $this->current_column) {
tcpdf.php:						$this->selectColumn($column);
tcpdf.php:					if ($this->rtl) {
tcpdf.php:						$this->x -= $mc_margin['R'];
tcpdf.php:						$this->x += $mc_margin['L'];
tcpdf.php:						$this->y = $oy;
tcpdf.php:						$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:						$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:						$resth -= $h;
tcpdf.php:					$ccode .= $this->getCellCode($w, $h, '', $cborder, 1, '', $fill, '', 0, true)."\n";
tcpdf.php:					if ($column != $this->current_column) {
tcpdf.php:						$this->selectColumn($column);
tcpdf.php:					if ($this->rtl) {
tcpdf.php:						$this->x -= $mc_margin['R'];
tcpdf.php:						$this->x += $mc_margin['L'];
tcpdf.php:						$h = $currentY - $this->y;
tcpdf.php:						$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:						$resth -= $h;
tcpdf.php:					$ccode .= $this->getCellCode($w, $h, '', $cborder, 1, '', $fill, '', 0, true)."\n";
tcpdf.php:				for ($column = 0; $column < $this->num_columns; ++$column) { // for each column
tcpdf.php:					$this->selectColumn($column);
tcpdf.php:					if ($this->rtl) {
tcpdf.php:						$this->x -= $mc_margin['R'];
tcpdf.php:						$this->x += $mc_margin['L'];
tcpdf.php:					$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:					$resth -= $h;
tcpdf.php:					$ccode .= $this->getCellCode($w, $h, '', $cborder, 1, '', $fill, '', 0, true)."\n";
tcpdf.php:				if ($this->inxobj) {
tcpdf.php:					if (end($this->xobjects[$this->xobjid]['transfmrk']) !== false) {
tcpdf.php:						$pagemarkkey = key($this->xobjects[$this->xobjid]['transfmrk']);
tcpdf.php:						$pagemark = $this->xobjects[$this->xobjid]['transfmrk'][$pagemarkkey];
tcpdf.php:						$this->xobjects[$this->xobjid]['transfmrk'][$pagemarkkey] += $offsetlen;
tcpdf.php:						$pagemark = $this->xobjects[$this->xobjid]['intmrk'];
tcpdf.php:						$this->xobjects[$this->xobjid]['intmrk'] += $offsetlen;
tcpdf.php:					$pagebuff = $this->xobjects[$this->xobjid]['outdata'];
tcpdf.php:					$this->xobjects[$this->xobjid]['outdata'] = $pstart.$ccode.$pend;
tcpdf.php:					if (end($this->transfmrk[$this->page]) !== false) {
tcpdf.php:						$pagemarkkey = key($this->transfmrk[$this->page]);
tcpdf.php:						$pagemark = $this->transfmrk[$this->page][$pagemarkkey];
tcpdf.php:						$this->transfmrk[$this->page][$pagemarkkey] += $offsetlen;
tcpdf.php:					} elseif ($this->InFooter) {
tcpdf.php:						$pagemark = $this->footerpos[$this->page];
tcpdf.php:						$this->footerpos[$this->page] += $offsetlen;
tcpdf.php:						$pagemark = $this->intmrk[$this->page];
tcpdf.php:						$this->intmrk[$this->page] += $offsetlen;
tcpdf.php:					$pagebuff = $this->getPageBuffer($this->page);
tcpdf.php:					$this->setPageBuffer($this->page, $pstart.$ccode.$pend);
tcpdf.php:		$this->check_page_regions = $check_page_regions;
tcpdf.php:		// Get end-of-cell Y position
tcpdf.php:		$currentY = $this->GetY();
tcpdf.php:		if ($this->num_columns > 1) {
tcpdf.php:			$this->selectColumn();
tcpdf.php:			$this->lMargin = $lMargin;
tcpdf.php:			$this->rMargin = $rMargin;
tcpdf.php:			if ($this->page > $startpage) {
tcpdf.php:				$dl = ($this->pagedim[$this->page]['olm'] - $this->pagedim[$startpage]['olm']);
tcpdf.php:				$dr = ($this->pagedim[$this->page]['orm'] - $this->pagedim[$startpage]['orm']);
tcpdf.php:					$this->lMargin += $dl;
tcpdf.php:					$this->rMargin += $dr;
tcpdf.php:			$this->setY($currentY + $mc_margin['B']);
tcpdf.php:				$this->setX($x + $w + $mc_margin['L'] + $mc_margin['R']);
tcpdf.php:			$this->setPage($startpage);
tcpdf.php:			$this->y = $y;
tcpdf.php:			$this->setX($x + $w + $mc_margin['L'] + $mc_margin['R']);
tcpdf.php:		$this->setContentMark();
tcpdf.php:		$this->cell_padding = $prev_cell_padding;
tcpdf.php:		$this->cell_margin = $prev_cell_margin;
tcpdf.php:		$this->clMargin = $this->lMargin;
tcpdf.php:		$this->crMargin = $this->rMargin;
tcpdf.php:	 * @param mixed $border Indicates if borders must be drawn around the cell. The value can be a number:<ul><li>0: no border (default)</li><li>1: frame</li></ul> or a string containing some or all of the following characters (in any order):<ul><li>L: left</li><li>T: top</li><li>R: right</li><li>B: bottom</li></ul> or an array of line styles for each border group - for example: array('LTRB' => array('width' => 2, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0, 0, 0)))
tcpdf.php:		$prev_cell_padding = $this->cell_padding;
tcpdf.php:		$prev_lasth = $this->lasth;
tcpdf.php:			$this->cell_padding = $cellpadding;
tcpdf.php:		$this->adjustCellPadding($border);
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$w = $this->x - $this->lMargin;
tcpdf.php:				$w = $this->w - $this->rMargin - $this->x;
tcpdf.php:		$wmax = $w - $this->cell_padding['L'] - $this->cell_padding['R'];
tcpdf.php:			$this->resetLastH();
tcpdf.php:		$chars = TCPDF_FONTS::utf8Bidi(TCPDF_FONTS::UTF8StringToArray($txt, $this->isunicode, $this->CurrentFont), $txt, $this->tmprtl, $this->isunicode, $this->CurrentFont);
tcpdf.php:		$charsWidth = $this->GetArrStringWidth($chars, '', '', 0, true);
tcpdf.php:		$lastSeparator = -1;
tcpdf.php:						OR preg_match($this->re_spaces, TCPDF_FONTS::unichr($c, $this->isunicode))
tcpdf.php:							AND ($i > 0) AND ($i < ($length - 1))
tcpdf.php:							AND @preg_match('/[\p{L}]/'.$this->re_space['m'], TCPDF_FONTS::unichr($chars[($i - 1)], $this->isunicode))
tcpdf.php:							AND @preg_match('/[\p{L}]/'.$this->re_space['m'], TCPDF_FONTS::unichr($chars[($i + 1)], $this->isunicode))
tcpdf.php:					$lastSeparator = -1;
tcpdf.php:				} elseif ($lastSeparator != -1) {
tcpdf.php:					$lastSeparator = -1;
tcpdf.php:		if ($chars[($length - 1)] == 10) {
tcpdf.php:			--$lines;
tcpdf.php:		$this->cell_padding = $prev_cell_padding;
tcpdf.php:		$this->lasth = $prev_lasth;
tcpdf.php:	 *  $pdf->startTransaction();
tcpdf.php:	 *  $start_y = $pdf->GetY();
tcpdf.php:	 *  $start_page = $pdf->getPage();
tcpdf.php:	 *  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
tcpdf.php:	 *  $pdf->MultiCell($w=0, $h=0, $txt, $border=1, $align='L', $fill=false, $ln=1, $x=null, $y=null, $reseth=true, $stretch=0, $ishtml=false, $autopadding=true, $maxh=0);
tcpdf.php:	 *  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
tcpdf.php:	 *  $end_y = $pdf->GetY();
tcpdf.php:	 *  $end_page = $pdf->getPage();
tcpdf.php:	 *  	$height = $end_y - $start_y;
tcpdf.php:	 *  		$this->setPage($page);
tcpdf.php:	 *  			$height += $this->h - $start_y - $this->bMargin;
tcpdf.php:	 *  			$height += $end_y - $this->tMargin;
tcpdf.php:	 *  			$height += $this->h - $this->tMargin - $this->bMargin;
tcpdf.php:	 *  $pdf = $pdf->rollbackTransaction();
tcpdf.php:	 * @param mixed $border Indicates if borders must be drawn around the cell. The value can be a number:<ul><li>0: no border (default)</li><li>1: frame</li></ul> or a string containing some or all of the following characters (in any order):<ul><li>L: left</li><li>T: top</li><li>R: right</li><li>B: bottom</li></ul> or an array of line styles for each border group - for example: array('LTRB' => array('width' => 2, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0, 0, 0)))
tcpdf.php:		$prev_cell_padding = $this->cell_padding;
tcpdf.php:		$prev_lasth = $this->lasth;
tcpdf.php:			$this->cell_padding = $cellpadding;
tcpdf.php:		$this->adjustCellPadding($border);
tcpdf.php:		$lines = $this->getNumLines($txt, $w, $reseth, $autopadding, $cellpadding, $border);
tcpdf.php:		$height = $this->getCellHeight(($lines * $this->FontSize), $autopadding);
tcpdf.php:		$this->cell_padding = $prev_cell_padding;
tcpdf.php:		$this->lasth = $prev_lasth;
tcpdf.php:		// check page for no-write regions and adapt page margins if necessary
tcpdf.php:		list($this->x, $this->y) = $this->checkPageRegions($h, $this->x, $this->y);
tcpdf.php:			$margin = $this->cell_margin;
tcpdf.php:		if ($arabic OR ($this->tmprtl == 'R') OR preg_match(TCPDF_FONT_DATA::$uni_RE_PATTERN_RTL, $s)) {
tcpdf.php:		$chrwidth = $this->GetCharWidth(46); // dot character
tcpdf.php:		$chars = TCPDF_FONTS::UTF8StringToArray($s, $this->isunicode, $this->CurrentFont);
tcpdf.php:		$chrw = $this->GetArrStringWidth($chars, '', '', 0, true);
tcpdf.php:		$uchars = TCPDF_FONTS::UTF8ArrayToUniArray($chars, $this->isunicode);
tcpdf.php:		$shy_replacement_char = TCPDF_FONTS::unichr($shy_replacement, $this->isunicode);
tcpdf.php:		$shy_replacement_width = $this->GetCharWidth($shy_replacement);
tcpdf.php:		$pw = $w = $this->w - $this->lMargin - $this->rMargin;
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$w = $this->x - $this->lMargin;
tcpdf.php:			$w = $this->w - $this->rMargin - $this->x;
tcpdf.php:		$wmax = ($w - $wadj);
tcpdf.php:			$wmax -= ($this->cell_padding['L'] + $this->cell_padding['R']);
tcpdf.php:		$row_height = max($h, $this->getCellHeight($this->FontSize));
tcpdf.php:		$maxy = $this->y + $maxh - max($row_height, $h);
tcpdf.php:		$start_page = $this->page;
tcpdf.php:		$sep = -1; // position of the last blank space
tcpdf.php:			if (($maxh > 0) AND ($this->y > $maxy) ) {
tcpdf.php:					if ($this->rtl) {
tcpdf.php:					$startx = $this->x;
tcpdf.php:					$tmparr = array_slice($chars, $j, ($i - $j));
tcpdf.php:						$tmparr = TCPDF_FONTS::utf8Bidi($tmparr, $tmpstr, $this->tmprtl, $this->isunicode, $this->CurrentFont);
tcpdf.php:					$linew = $this->GetArrStringWidth($tmparr);
tcpdf.php:					if ($this->rtl) {
tcpdf.php:						$this->endlinex = $startx - $linew;
tcpdf.php:						$this->endlinex = $startx + $linew;
tcpdf.php:					$tmpcellpadding = $this->cell_padding;
tcpdf.php:						$this->setCellPadding(0);
tcpdf.php:				if ($firstblock AND $this->isRTLTextDir()) {
tcpdf.php:					$tmpstr = $this->stringRightTrim($tmpstr);
tcpdf.php:				if (!empty($tmpstr) OR ($this->y < ($this->PageBreakTrigger - $row_height))) {
tcpdf.php:					$this->Cell($w, $h, $tmpstr, 0, 1, $talign, $fill, $link, $stretch);
tcpdf.php:					$this->cell_padding = $tmpcellpadding;
tcpdf.php:				$sep = -1;
tcpdf.php:				if ((($this->y + $this->lasth) > $this->PageBreakTrigger) AND ($this->inPageBody())) {
tcpdf.php:					$this->AcceptPageBreak();
tcpdf.php:					if ($this->rtl) {
tcpdf.php:						$this->x -= $margin['R'];
tcpdf.php:						$this->x += $margin['L'];
tcpdf.php:					$this->lMargin += $margin['L'];
tcpdf.php:					$this->rMargin += $margin['R'];
tcpdf.php:				$w = $this->getRemainingWidth();
tcpdf.php:				$wmax = ($w - $this->cell_padding['L'] - $this->cell_padding['R']);
tcpdf.php:				// 160 is the non-breaking space.
tcpdf.php:						OR preg_match($this->re_spaces, TCPDF_FONTS::unichr($c, $this->isunicode))
tcpdf.php:							AND ($i < ($nb - 1))
tcpdf.php:							AND @preg_match('/[\p{L}]/'.$this->re_space['m'], TCPDF_FONTS::unichr($pc, $this->isunicode))
tcpdf.php:							AND @preg_match('/[\p{L}]/'.$this->re_space['m'], TCPDF_FONTS::unichr($chars[($i + 1)], $this->isunicode))
tcpdf.php:				if ($this->isUnicodeFont() AND ($arabic)) {
tcpdf.php:					$l = $this->GetArrStringWidth(TCPDF_FONTS::utf8Bidi(array_slice($chars, $j, ($i - $j)), '', $this->tmprtl, $this->isunicode, $this->CurrentFont));
tcpdf.php:					$l += $this->GetCharWidth($c, ($i+1 < $nb));
tcpdf.php:					if ($sep == -1) {
tcpdf.php:						if (($this->rtl AND ($this->x <= ($this->w - $this->rMargin - $this->cell_padding['R'] - $margin['R'] - $chrwidth)))
tcpdf.php:							OR ((!$this->rtl) AND ($this->x >= ($this->lMargin + $this->cell_padding['L'] + $margin['L'] + $chrwidth)))) {
tcpdf.php:							$this->Cell($w, $h, '', 0, 1);
tcpdf.php:								$startx = $this->x;
tcpdf.php:								$tmparr = array_slice($chars, $j, ($i - $j));
tcpdf.php:									$tmparr = TCPDF_FONTS::utf8Bidi($tmparr, $tmpstr, $this->tmprtl, $this->isunicode, $this->CurrentFont);
tcpdf.php:								$linew = $this->GetArrStringWidth($tmparr);
tcpdf.php:								if ($this->rtl) {
tcpdf.php:									$this->endlinex = $startx - $linew;
tcpdf.php:									$this->endlinex = $startx + $linew;
tcpdf.php:								$tmpcellpadding = $this->cell_padding;
tcpdf.php:									$this->setCellPadding(0);
tcpdf.php:							if ($firstblock AND $this->isRTLTextDir()) {
tcpdf.php:								$tmpstr = $this->stringRightTrim($tmpstr);
tcpdf.php:							$this->Cell($w, $h, $tmpstr, 0, 1, $align, $fill, $link, $stretch);
tcpdf.php:								$this->cell_padding = $tmpcellpadding;
tcpdf.php:							--$i;
tcpdf.php:						if ($this->rtl AND (!$firstblock) AND ($sep < $i)) {
tcpdf.php:						$nextstr = TCPDF_STATIC::pregSplit('/'.$this->re_space['p'].'/', $this->re_space['m'], $this->stringTrim($strrest));
tcpdf.php:						if (isset($nextstr[0]) AND ($this->GetStringWidth($nextstr[0]) > $pw)) {
tcpdf.php:								$startx = $this->x;
tcpdf.php:								$tmparr = array_slice($chars, $j, ($i - $j));
tcpdf.php:									$tmparr = TCPDF_FONTS::utf8Bidi($tmparr, $tmpstr, $this->tmprtl, $this->isunicode, $this->CurrentFont);
tcpdf.php:								$linew = $this->GetArrStringWidth($tmparr);
tcpdf.php:								if ($this->rtl) {
tcpdf.php:									$this->endlinex = ($startx - $linew);
tcpdf.php:									$this->endlinex = ($startx + $linew);
tcpdf.php:								$tmpcellpadding = $this->cell_padding;
tcpdf.php:									$this->setCellPadding(0);
tcpdf.php:							if ($firstblock AND $this->isRTLTextDir()) {
tcpdf.php:								$tmpstr = $this->stringRightTrim($tmpstr);
tcpdf.php:							$this->Cell($w, $h, $tmpstr, 0, 1, $align, $fill, $link, $stretch);
tcpdf.php:								$this->cell_padding = $tmpcellpadding;
tcpdf.php:							--$i;
tcpdf.php:								if ($this->rtl) {
tcpdf.php:								$startx = $this->x;
tcpdf.php:								$tmparr = array_slice($chars, $j, (($sep + $endspace) - $j));
tcpdf.php:									$tmparr = TCPDF_FONTS::utf8Bidi($tmparr, $tmpstr, $this->tmprtl, $this->isunicode, $this->CurrentFont);
tcpdf.php:								$linew = $this->GetArrStringWidth($tmparr);
tcpdf.php:								if ($this->rtl) {
tcpdf.php:									$this->endlinex = $startx - $linew - $shy_width;
tcpdf.php:									$this->endlinex = $startx + $linew + $shy_width;
tcpdf.php:								$tmpcellpadding = $this->cell_padding;
tcpdf.php:									$this->setCellPadding(0);
tcpdf.php:							if ($firstblock AND $this->isRTLTextDir()) {
tcpdf.php:								$tmpstr = $this->stringRightTrim($tmpstr);
tcpdf.php:							$this->Cell($w, $h, $shy_char_left.$tmpstr.$shy_char_right, 0, 1, $align, $fill, $link, $stretch);
tcpdf.php:								$this->cell_padding = $tmpcellpadding;
tcpdf.php:							$sep = -1;
tcpdf.php:					if ((($this->y + $this->lasth) > $this->PageBreakTrigger) AND ($this->inPageBody())) {
tcpdf.php:						$this->AcceptPageBreak();
tcpdf.php:						if ($this->rtl) {
tcpdf.php:							$this->x -= $margin['R'];
tcpdf.php:							$this->x += $margin['L'];
tcpdf.php:						$this->lMargin += $margin['L'];
tcpdf.php:						$this->rMargin += $margin['R'];
tcpdf.php:					$w = $this->getRemainingWidth();
tcpdf.php:					$wmax = $w - $this->cell_padding['L'] - $this->cell_padding['R'];
tcpdf.php:					if (!$this->rtl) {
tcpdf.php:					if ($this->rtl) {
tcpdf.php:				$startx = $this->x;
tcpdf.php:				$tmparr = array_slice($chars, $j, ($nb - $j));
tcpdf.php:					$tmparr = TCPDF_FONTS::utf8Bidi($tmparr, $tmpstr, $this->tmprtl, $this->isunicode, $this->CurrentFont);
tcpdf.php:				$linew = $this->GetArrStringWidth($tmparr);
tcpdf.php:				if ($this->rtl) {
tcpdf.php:					$this->endlinex = $startx - $linew;
tcpdf.php:					$this->endlinex = $startx + $linew;
tcpdf.php:				$tmpcellpadding = $this->cell_padding;
tcpdf.php:					$this->setCellPadding(0);
tcpdf.php:			if ($firstblock AND $this->isRTLTextDir()) {
tcpdf.php:				$tmpstr = $this->stringRightTrim($tmpstr);
tcpdf.php:			$this->Cell($w, $h, $tmpstr, 0, $ln, $align, $fill, $link, $stretch);
tcpdf.php:				$this->cell_padding = $tmpcellpadding;
tcpdf.php:		list($this->x, $this->y) = $this->checkPageRegions(0, $this->x, $this->y);
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			return ($this->x - $this->lMargin);
tcpdf.php:			return ($this->w - $this->rMargin - $this->x);
tcpdf.php:	 * @since 5.5.009 (2010-07-05)
tcpdf.php:			$w = ($this->w - $this->lMargin - $this->rMargin);
tcpdf.php:			$h = ($this->PageBreakTrigger - $this->tMargin);
tcpdf.php:		if ($fitonpage OR $this->AutoPageBreak) {
tcpdf.php:			if ($h > ($this->PageBreakTrigger - $this->tMargin)) {
tcpdf.php:				$h = $this->PageBreakTrigger - $this->tMargin;
tcpdf.php:				$maxw = ($this->w - $this->lMargin - $this->rMargin);
tcpdf.php:		$prev_x = $this->x;
tcpdf.php:		$prev_y = $this->y;
tcpdf.php:		if ($this->checkPageBreak($h, $y) OR ($this->y < $prev_y)) {
tcpdf.php:			$y = $this->y;
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$x += ($prev_x - $this->x);
tcpdf.php:				$x += ($this->x - $prev_x);
tcpdf.php:			$this->newline = true;
tcpdf.php:			if (($y + $h) > $this->PageBreakTrigger) {
tcpdf.php:				$h = $this->PageBreakTrigger - $y;
tcpdf.php:			if ((!$this->rtl) AND (($x + $w) > ($this->w - $this->rMargin))) {
tcpdf.php:				$w = $this->w - $this->rMargin - $x;
tcpdf.php:			} elseif (($this->rtl) AND (($x - $w) < ($this->lMargin))) {
tcpdf.php:				$w = $x - $this->lMargin;
tcpdf.php:	 * The upper-left corner must be given.
tcpdf.php:	 * @param float|null $x Abscissa of the upper-left corner (LTR) or upper-right corner (RTL).
tcpdf.php:	 * @param float|null $y Ordinate of the upper-left corner (LTR) or upper-right corner (RTL).
tcpdf.php:	 * @param string $align Indicates the alignment of the pointer next to image insertion relative to image height. The value can be:<ul><li>T: top-right for LTR or top-left for RTL</li><li>M: middle-right for LTR or middle-left for RTL</li><li>B: bottom-right for LTR or bottom-left for RTL</li><li>N: next line</li></ul>
tcpdf.php:	 * @param int $dpi dot-per-inch resolution used on resize
tcpdf.php:	 * @param mixed $border Indicates if borders must be drawn around the cell. The value can be a number:<ul><li>0: no border (default)</li><li>1: frame</li></ul> or a string containing some or all of the following characters (in any order):<ul><li>L: left</li><li>T: top</li><li>R: right</li><li>B: bottom</li></ul> or an array of line styles for each border group - for example: array('LTRB' => array('width' => 2, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0, 0, 0)))
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:		// check page for no-write regions and adapt page margins if necessary
tcpdf.php:		list($x, $y) = $this->checkPageRegions($h, $x, $y);
tcpdf.php:			if (!@$this->fileExists($file)) {
tcpdf.php:            if (false !== $info = $this->getImageBuffer($file)) {
tcpdf.php:            } elseif (($imsize = @getimagesize($file)) === FALSE && strpos($file, '__tcpdf_'.$this->file_id.'_img') === FALSE){
tcpdf.php:                $imgdata = $this->getCachedFileContents($file);
tcpdf.php:			$file = TCPDF_STATIC::getObjFilename('img', $this->file_id);
tcpdf.php:				$this->Error('Unable to write file: '.$file);
tcpdf.php:				$pw = $this->getHTMLUnitToUnits($w, 0, $this->pdfunit, true) * $this->imgscale * $this->k;
tcpdf.php:				$ph = $this->getHTMLUnitToUnits($h, 0, $this->pdfunit, true) * $this->imgscale * $this->k;
tcpdf.php:				$this->Error('[Image] Unable to get the size of the image: '.$file);
tcpdf.php:			$w = $this->pixelsToUnits($pixw);
tcpdf.php:			$h = $this->pixelsToUnits($pixh);
tcpdf.php:				$fitbox = '--';
tcpdf.php:				$hdiff = ($oldh - $h);
tcpdf.php:				$wdiff = ($oldw - $w);
tcpdf.php:						if ($this->rtl) {
tcpdf.php:							$x -= $wdiff;
tcpdf.php:						if ($this->rtl) {
tcpdf.php:							$x -= ($wdiff / 2);
tcpdf.php:						if (!$this->rtl) {
tcpdf.php:		list($w, $h, $x, $y) = $this->fitBlock($w, $h, $x, $y, $fitonpage);
tcpdf.php:		$neww = round($w * $this->k * $dpi / $this->dpi);
tcpdf.php:		$newh = round($h * $this->k * $dpi / $this->dpi);
tcpdf.php:		if (in_array($file, $this->imagekeys)) {
tcpdf.php:			$info = $this->getImageBuffer($file);
tcpdf.php:			if (strpos($file, '__tcpdf_'.$this->file_id.'_imgmask_') === FALSE) {
tcpdf.php:		} elseif (($ismask === false) AND ($imgmask === false) AND (strpos($file, '__tcpdf_'.$this->file_id.'_imgmask_') === FALSE)) {
tcpdf.php:			$tempfile_plain = K_PATH_CACHE.'__tcpdf_'.$this->file_id.'_imgmask_plain_'.$filehash;
tcpdf.php:			$tempfile_alpha = K_PATH_CACHE.'__tcpdf_'.$this->file_id.'_imgmask_alpha_'.$filehash;
tcpdf.php:			if (in_array($tempfile_plain, $this->imagekeys)) {
tcpdf.php:				$info = $this->getImageBuffer($tempfile_plain);
tcpdf.php:					$imgmask = $this->Image($tempfile_alpha, $x, $y, $w, $h, 'PNG', '', '', $resize, $dpi, '', true, false);
tcpdf.php:					return $this->Image($tempfile_plain, $x, $y, $w, $h, $type, $link, $align, $resize, $dpi, $palign, false, $imgmask);
tcpdf.php:				if (($ismask === false) AND ($imgmask === false) AND (strpos($file, '__tcpdf_'.$this->file_id.'_imgmask_') === FALSE)
tcpdf.php:					return $this->ImagePngAlpha($file, $x, $y, $pixw, $pixh, $w, $h, 'PNG', $link, $align, $resize, $dpi, $palign, $filehash);
tcpdf.php:							$info = TCPDF_IMAGES::_toPNG($img, TCPDF_STATIC::getObjFilename('img', $this->file_id));
tcpdf.php:							$info = TCPDF_IMAGES::_toJPEG($img, $this->jpeg_quality, TCPDF_STATIC::getObjFilename('img', $this->file_id));
tcpdf.php:                            $svgimg = $this->getCachedFileContents($file);
tcpdf.php:									$ow = $this->getHTMLUnitToUnits($tmp[1], 1, $this->svgunit, false);
tcpdf.php:									$owu = sprintf('%F', ($ow * $dpi / 72)).$this->pdfunit;
tcpdf.php:									$oh = $this->getHTMLUnitToUnits($tmp[1], 1, $this->svgunit, false);
tcpdf.php:									$ohu = sprintf('%F', ($oh * $dpi / 72)).$this->pdfunit;
tcpdf.php:								if (!preg_match('/[\s]+viewBox[\s]*=[\s]*"[\s]*([0-9\.]+)[\s]+([0-9\.]+)[\s]+([0-9\.]+)[\s]+([0-9\.]+)[\s]*"/si', $svgtag, $tmp)) {
tcpdf.php:									$vbw = ($ow * $this->imgscale * $this->k);
tcpdf.php:									$vbh = ($oh * $this->imgscale * $this->k);
tcpdf.php:							$img->readImageBlob($svgimg);
tcpdf.php:						$img->readImage($file);
tcpdf.php:						$img->resizeImage($neww, $newh, 10, 1, false);
tcpdf.php:					$img->setCompressionQuality($this->jpeg_quality);
tcpdf.php:					$img->setImageFormat('jpeg');
tcpdf.php:					$tempname = TCPDF_STATIC::getObjFilename('img', $this->file_id);
tcpdf.php:					$img->writeImage($tempname);
tcpdf.php:					$img->destroy();
tcpdf.php:			$info['i'] = $this->setImageBuffer($file, $info);
tcpdf.php:		$this->img_rb_x = $x + $w;
tcpdf.php:		$this->img_rb_y = $y + $h;
tcpdf.php:			$ximg = $this->lMargin;
tcpdf.php:			$ximg = ($this->w + $this->lMargin - $this->rMargin - $w) / 2;
tcpdf.php:			$ximg = $this->w - $this->rMargin - $w;
tcpdf.php:		$xkimg = $ximg * $this->k;
tcpdf.php:			// only non-alternative immages will be set
tcpdf.php:			$this->_out(sprintf('q %F 0 0 %F %F %F cm /I%u Do Q', ($w * $this->k), ($h * $this->k), $xkimg, (($this->h - ($y + $h)) * $this->k), $info['i']));
tcpdf.php:			$bx = $this->x;
tcpdf.php:			$by = $this->y;
tcpdf.php:			$this->x = $ximg;
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$this->x += $w;
tcpdf.php:			$this->y = $y;
tcpdf.php:			$this->Cell($w, $h, '', $border, 0, '', 0, '', 0, true);
tcpdf.php:			$this->x = $bx;
tcpdf.php:			$this->y = $by;
tcpdf.php:			$this->Link($ximg, $y, $w, $h, $link, 0);
tcpdf.php:				$this->y = $y;
tcpdf.php:				$this->x = $this->img_rb_x;
tcpdf.php:				$this->y = $y + round($h/2);
tcpdf.php:				$this->x = $this->img_rb_x;
tcpdf.php:				$this->y = $this->img_rb_y;
tcpdf.php:				$this->x = $this->img_rb_x;
tcpdf.php:				$this->setY($this->img_rb_y);
tcpdf.php:		$this->endlinex = $this->img_rb_x;
tcpdf.php:		if ($this->inxobj) {
tcpdf.php:			$this->xobjects[$this->xobjid]['images'][] = $info['i'];
tcpdf.php:	 * @param float $x Abscissa of the upper-left corner.
tcpdf.php:	 * @param float $y Ordinate of the upper-left corner.
tcpdf.php:	 * @param string $align Indicates the alignment of the pointer next to image insertion relative to image height. The value can be:<ul><li>T: top-right for LTR or top-left for RTL</li><li>M: middle-right for LTR or middle-left for RTL</li><li>B: bottom-right for LTR or bottom-left for RTL</li><li>N: next line</li></ul>
tcpdf.php:	 * @param int $dpi dot-per-inch resolution used on resize
tcpdf.php:	 * @since 4.3.007 (2008-12-04)
tcpdf.php:		$tempfile_plain = K_PATH_CACHE.'__tcpdf_'.$this->file_id.'_imgmask_plain_'.$filehash;
tcpdf.php:		$tempfile_alpha = K_PATH_CACHE.'__tcpdf_'.$this->file_id.'_imgmask_alpha_'.$filehash;
tcpdf.php:				$img->readImage($file);
tcpdf.php:					$img->setImageAlphaChannel(Imagick::ALPHACHANNEL_EXTRACT);
tcpdf.php:					$img->separateImageChannel(8); // 8 = (imagick::CHANNEL_ALPHA | imagick::CHANNEL_OPACITY | imagick::CHANNEL_MATTE);
tcpdf.php:					$img->negateImage(true);
tcpdf.php:				$img->setImageFormat('png');
tcpdf.php:				$img->writeImage($tempfile_alpha);
tcpdf.php:					$imga->setImageMatte(false);
tcpdf.php:					$imga->separateImageChannel(39); // 39 = (imagick::CHANNEL_ALL & ~(imagick::CHANNEL_ALPHA | imagick::CHANNEL_OPACITY | imagick::CHANNEL_MATTE));
tcpdf.php:				$imga->setImageFormat('png');
tcpdf.php:				$imga->writeImage($tempfile_plain);
tcpdf.php:				$parse_error = 'Imagick library error: '.$e->getMessage();
tcpdf.php:				// generate gray scale palette (0 -> 255)
tcpdf.php:						$alpha = $this->getGDgamma($img, $color);
tcpdf.php:				$parse_error = 'GD library error: '.$e->getMessage();
tcpdf.php:				$this->Error('TCPDF requires the Imagick or GD extension to handle PNG images with alpha channel.');
tcpdf.php:				$this->Error($parse_error);
tcpdf.php:		$imgmask = $this->Image($tempfile_alpha, $x, $y, $w, $h, 'PNG', '', '', $resize, $dpi, '', true, false);
tcpdf.php:		$this->Image($tempfile_plain, $x, $y, $w, $h, $type, $link, $align, $resize, $dpi, $palign, false, $imgmask);
tcpdf.php:	 * Get the GD-corrected PNG gamma value from alpha color
tcpdf.php:	 * @since 4.3.007 (2008-12-04)
tcpdf.php:		if (!isset($this->gdgammacache['#'.$c])) {
tcpdf.php:			// GD alpha is only 7 bit (0 -> 127)
tcpdf.php:			$this->gdgammacache['#'.$c] = (int) (((127 - $colors['alpha']) / 127) * 255);
tcpdf.php:			$this->gdgammacache['#'.$c] = (int) (pow(($this->gdgammacache['#'.$c] / 255), 2.2) * 255);
tcpdf.php:			if (count($this->gdgammacache) > 8) {
tcpdf.php:				array_shift($this->gdgammacache);
tcpdf.php:		return $this->gdgammacache['#'.$c];
tcpdf.php:		if (($this->num_columns > 1) AND ($this->y == $this->columns[$this->current_column]['y']) AND isset($this->columns[$this->current_column]['x']) AND ($this->x == $this->columns[$this->current_column]['x'])) {
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$cellpadding = $this->cell_padding['R'];
tcpdf.php:				$cellpadding = $this->cell_padding['L'];
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$this->x = $this->w - $this->rMargin - $cellpadding;
tcpdf.php:			$this->x = $this->lMargin + $cellpadding;
tcpdf.php:			$h = $this->lasth;
tcpdf.php:		$this->y += $h;
tcpdf.php:		$this->newline = true;
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			return ($this->w - $this->x);
tcpdf.php:			return $this->x;
tcpdf.php:		return $this->x;
tcpdf.php:		return $this->y;
tcpdf.php:	 * @param boolean $rtloff if true always uses the page top-left corner as origin of axis.
tcpdf.php:		if (!$rtloff AND $this->rtl) {
tcpdf.php:				$this->x = $this->w - $x;
tcpdf.php:				$this->x = abs($x);
tcpdf.php:				$this->x = $x;
tcpdf.php:				$this->x = $this->w + $x;
tcpdf.php:		if ($this->x < 0) {
tcpdf.php:			$this->x = 0;
tcpdf.php:		if ($this->x > $this->w) {
tcpdf.php:			$this->x = $this->w;
tcpdf.php:	 * @param boolean $rtloff if true always uses the page top-left corner as origin of axis.
tcpdf.php:			if (!$rtloff AND $this->rtl) {
tcpdf.php:				$this->x = $this->w - $this->rMargin;
tcpdf.php:				$this->x = $this->lMargin;
tcpdf.php:			$this->y = $y;
tcpdf.php:			$this->y = $this->h + $y;
tcpdf.php:		if ($this->y < 0) {
tcpdf.php:			$this->y = 0;
tcpdf.php:		if ($this->y > $this->h) {
tcpdf.php:			$this->y = $this->h;
tcpdf.php:	 * @param boolean $rtloff if true always uses the page top-left corner as origin of axis.
tcpdf.php:		$this->setY($y, false, $rtloff);
tcpdf.php:		$this->setX($x, $rtloff);
tcpdf.php:	 * @since 5.9.186 (2012-09-13)
tcpdf.php:		$this->x = floatval($x);
tcpdf.php:	 * @since 5.9.186 (2012-09-13)
tcpdf.php:		$this->y = floatval($y);
tcpdf.php:	 * @since 5.9.186 (2012-09-13)
tcpdf.php:		$this->setAbsX($x);
tcpdf.php:		$this->setAbsY($y);
tcpdf.php:	 * In the last case, the plug-in may be used (if present) or a download ("Save as" dialog box) may be forced.<br />
tcpdf.php:	 * @param string $dest Destination where to send the document. It can take one of the following values:<ul><li>I: send the file inline to the browser (default). The plug-in is used if available. The name given by name is used when one selects the "Save as" option on the link generating the PDF.</li><li>D: send to the browser and force a file download with the name given by name.</li><li>F: save to a local server file with the name given by name.</li><li>S: return the document as a string (name is ignored).</li><li>FI: equivalent to F + I option</li><li>FD: equivalent to F + D option</li><li>E: return the document as base64 mime multi-part email attachment (RFC 2045)</li></ul>
tcpdf.php:		if ($this->state < 3) {
tcpdf.php:			$this->Close();
tcpdf.php:			$name = preg_replace('/[^a-zA-Z0-9_\.-]/', '', $name);
tcpdf.php:		if ($this->sign) {
tcpdf.php:			$pdfdoc = $this->getBuffer();
tcpdf.php:			$pdfdoc = substr($pdfdoc, 0, -1);
tcpdf.php:			$byte_range[2] = $byte_range[1] + $this->signature_max_length + 2;
tcpdf.php:			$byte_range[3] = strlen($pdfdoc) - $byte_range[2];
tcpdf.php:			$byterange .= str_repeat(' ', ($byterange_string_len - strlen($byterange)));
tcpdf.php:			$tempdoc = TCPDF_STATIC::getObjFilename('doc', $this->file_id);
tcpdf.php:				$this->Error('Unable to create temporary file: '.$tempdoc);
tcpdf.php:			$tempsign = TCPDF_STATIC::getObjFilename('sig', $this->file_id);
tcpdf.php:			if (empty($this->signature_data['extracerts'])) {
tcpdf.php:				openssl_pkcs7_sign($tempdoc, $tempsign, $this->signature_data['signcert'], array($this->signature_data['privkey'], $this->signature_data['password']), array(), PKCS7_BINARY | PKCS7_DETACHED);
tcpdf.php:				openssl_pkcs7_sign($tempdoc, $tempsign, $this->signature_data['signcert'], array($this->signature_data['privkey'], $this->signature_data['password']), array(), PKCS7_BINARY | PKCS7_DETACHED, $this->signature_data['extracerts']);
tcpdf.php:			$signature = substr($signature, (strpos($signature, "%%EOF\n\n------") + 13));
tcpdf.php:			$signature = $this->applyTSA($signature);
tcpdf.php:			$signature = str_pad($signature, $this->signature_max_length, '0');
tcpdf.php:			$this->buffer = substr($pdfdoc, 0, $byte_range[1]).'<'.$signature.'>'.substr($pdfdoc, $byte_range[1]);
tcpdf.php:			$this->bufferlen = strlen($this->buffer);
tcpdf.php:					$this->Error('Some data has already been output, can\'t send PDF file');
tcpdf.php:					header('Content-Type: application/pdf');
tcpdf.php:						$this->Error('Some data has already been output to browser, can\'t send PDF file');
tcpdf.php:					header('Cache-Control: private, must-revalidate, post-check=0, pre-check=0, max-age=1');
tcpdf.php:					//header('Cache-Control: public, must-revalidate, max-age=0'); // HTTP/1.1
tcpdf.php:					header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
tcpdf.php:					header('Content-Disposition: inline; filename="'.basename($name).'"');
tcpdf.php:					TCPDF_STATIC::sendOutputData($this->getBuffer(), $this->bufferlen);
tcpdf.php:					echo $this->getBuffer();
tcpdf.php:					$this->Error('Some data has already been output, can\'t send PDF file');
tcpdf.php:				header('Content-Description: File Transfer');
tcpdf.php:					$this->Error('Some data has already been output to browser, can\'t send PDF file');
tcpdf.php:				header('Cache-Control: private, must-revalidate, post-check=0, pre-check=0, max-age=1');
tcpdf.php:				//header('Cache-Control: public, must-revalidate, max-age=0'); // HTTP/1.1
tcpdf.php:				header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
tcpdf.php:					header('Content-Type: application/force-download');
tcpdf.php:					header('Content-Type: application/octet-stream', false);
tcpdf.php:					header('Content-Type: application/download', false);
tcpdf.php:					header('Content-Type: application/pdf', false);
tcpdf.php:					header('Content-Type: application/pdf');
tcpdf.php:				// use the Content-Disposition header to supply a recommended filename
tcpdf.php:				header('Content-Disposition: attachment; filename="'.basename($name).'"');
tcpdf.php:				header('Content-Transfer-Encoding: binary');
tcpdf.php:				TCPDF_STATIC::sendOutputData($this->getBuffer(), $this->bufferlen);
tcpdf.php:					$this->Error('Unable to create output file: '.$name);
tcpdf.php:				fwrite($f, $this->getBuffer(), $this->bufferlen);
tcpdf.php:					header('Content-Type: application/pdf');
tcpdf.php:					header('Cache-Control: private, must-revalidate, post-check=0, pre-check=0, max-age=1');
tcpdf.php:					//header('Cache-Control: public, must-revalidate, max-age=0'); // HTTP/1.1
tcpdf.php:					header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
tcpdf.php:					header('Content-Disposition: inline; filename="'.basename($name).'"');
tcpdf.php:						$this->Error('Some data has already been output, can\'t send PDF file');
tcpdf.php:					header('Content-Description: File Transfer');
tcpdf.php:						$this->Error('Some data has already been output to browser, can\'t send PDF file');
tcpdf.php:					header('Cache-Control: private, must-revalidate, post-check=0, pre-check=0, max-age=1');
tcpdf.php:					header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
tcpdf.php:						header('Content-Type: application/force-download');
tcpdf.php:						header('Content-Type: application/octet-stream', false);
tcpdf.php:						header('Content-Type: application/download', false);
tcpdf.php:						header('Content-Type: application/pdf', false);
tcpdf.php:						header('Content-Type: application/pdf');
tcpdf.php:					// use the Content-Disposition header to supply a recommended filename
tcpdf.php:					header('Content-Disposition: attachment; filename="'.basename($name).'"');
tcpdf.php:					header('Content-Transfer-Encoding: binary');
tcpdf.php:				// return PDF as base64 mime multi-part email attachment (RFC 2045)
tcpdf.php:				$retval = 'Content-Type: application/pdf;'."\r\n";
tcpdf.php:				$retval .= 'Content-Transfer-Encoding: base64'."\r\n";
tcpdf.php:				$retval .= 'Content-Disposition: attachment;'."\r\n";
tcpdf.php:				$retval .= chunk_split(base64_encode($this->getBuffer()), 76, "\r\n");
tcpdf.php:				return $this->getBuffer();
tcpdf.php:				$this->Error('Incorrect output destination: '.$dest);
tcpdf.php:	 * @since 4.5.016 (2009-02-24)
tcpdf.php:		if (isset(self::$cleaned_ids[$this->file_id])) {
tcpdf.php:		if ($destroyall AND !$preserve_objcopy && isset($this->file_id)) {
tcpdf.php:			self::$cleaned_ids[$this->file_id] = true;
tcpdf.php:					if (strpos($file_name, '__tcpdf_'.$this->file_id.'_') === 0) {
tcpdf.php:			if (isset($this->imagekeys)) {
tcpdf.php:				foreach($this->imagekeys as $file) {
tcpdf.php:				if ((!$preserve_objcopy OR ($val != 'objcopy')) AND ($val != 'file_id') AND isset($this->$val)) {
tcpdf.php:					unset($this->$val);
tcpdf.php:	 * Check for locale-related bug
tcpdf.php:		//Check for locale-related bug
tcpdf.php:			$this->Error('Don\'t alter the locale before including class file');
tcpdf.php:		if ($this->isunicode) {
tcpdf.php:			$alias['u'][] = TCPDF_STATIC::_escape(TCPDF_FONTS::UTF8ToLatin1($u, $this->isunicode, $this->CurrentFont));
tcpdf.php:			$alias['u'][] = TCPDF_STATIC::_escape(TCPDF_FONTS::utf8StrRev($u, false, $this->tmprtl, $this->isunicode, $this->CurrentFont));
tcpdf.php:			$alias['a'][] = TCPDF_STATIC::_escape(TCPDF_FONTS::UTF8ToLatin1($a, $this->isunicode, $this->CurrentFont));
tcpdf.php:			$alias['a'][] = TCPDF_STATIC::_escape(TCPDF_FONTS::utf8StrRev($a, false, $this->tmprtl, $this->isunicode, $this->CurrentFont));
tcpdf.php:			$pnalias[$k] = $this->getInternalPageNumberAliases($a);
tcpdf.php:					$aa = substr($page, $pos, ($endnum - $pos + 1));
tcpdf.php:					$ratio = substr($page, ($pos + $startnum), ($endnum - $pos - $startnum));
tcpdf.php:					$ratio = preg_replace('/[^0-9\.]/', '', $ratio);
tcpdf.php:						$shift = TCPDF_FONTS::UTF8ToUTF16BE($shift, false, $this->isunicode, $this->CurrentFont);
tcpdf.php:		$this->page_boxes = array();
tcpdf.php:				$this->page_boxes[] = $box;
tcpdf.php:		$filter = ($this->compress) ? '/Filter /FlateDecode ' : '';
tcpdf.php:		$pnalias = $this->getAllInternalPageNumberAliases();
tcpdf.php:		$num_pages = $this->numpages;
tcpdf.php:		$ptpa = TCPDF_STATIC::formatPageNumber(($this->starting_page_number + $num_pages - 1));
tcpdf.php:		$ptpu = TCPDF_FONTS::UTF8ToUTF16BE($ptpa, false, $this->isunicode, $this->CurrentFont);
tcpdf.php:		$ptp_num_chars = $this->GetNumChars($ptpa);
tcpdf.php:			$temppage = $this->getPageBuffer($n);
tcpdf.php:			$pnpa = TCPDF_STATIC::formatPageNumber(($this->starting_page_number + $n - 1));
tcpdf.php:			$pnpu = TCPDF_FONTS::UTF8ToUTF16BE($pnpa, false, $this->isunicode, $this->CurrentFont);
tcpdf.php:			$pnp_num_chars = $this->GetNumChars($pnpa);
tcpdf.php:			if (!empty($this->pagegroups)) {
tcpdf.php:				if (isset($this->newpagegroup[$n])) {
tcpdf.php:					$ptga = TCPDF_STATIC::formatPageNumber($this->pagegroups[$groupnum]);
tcpdf.php:					$ptgu = TCPDF_FONTS::UTF8ToUTF16BE($ptga, false, $this->isunicode, $this->CurrentFont);
tcpdf.php:					$ptg_num_chars = $this->GetNumChars($ptga);
tcpdf.php:				$pngu = TCPDF_FONTS::UTF8ToUTF16BE($pnga, false, $this->isunicode, $this->CurrentFont);
tcpdf.php:				$png_num_chars = $this->GetNumChars($pnga);
tcpdf.php:			$temppage = $this->replaceRightShiftPageNumAliases($temppage, $pnalias[4], max($pdiff, $gdiff));
tcpdf.php:			$temppage = str_replace($this->epsmarker, '', $temppage);
tcpdf.php:			$this->page_obj_id[$n] = $this->_newobj();
tcpdf.php:			if (empty($this->signature_data['approval']) OR ($this->signature_data['approval'] != 'A')) {
tcpdf.php:				$out .= ' /LastModified '.$this->_datestring(0, $this->doc_modification_timestamp);
tcpdf.php:			foreach ($this->page_boxes as $box) {
tcpdf.php:				$out .= sprintf(' [%F %F %F %F]', $this->pagedim[$n][$box]['llx'], $this->pagedim[$n][$box]['lly'], $this->pagedim[$n][$box]['urx'], $this->pagedim[$n][$box]['ury']);
tcpdf.php:			if (isset($this->pagedim[$n]['BoxColorInfo']) AND !empty($this->pagedim[$n]['BoxColorInfo'])) {
tcpdf.php:				foreach ($this->page_boxes as $box) {
tcpdf.php:					if (isset($this->pagedim[$n]['BoxColorInfo'][$box])) {
tcpdf.php:						if (isset($this->pagedim[$n]['BoxColorInfo'][$box]['C'])) {
tcpdf.php:							$color = $this->pagedim[$n]['BoxColorInfo'][$box]['C'];
tcpdf.php:						if (isset($this->pagedim[$n]['BoxColorInfo'][$box]['W'])) {
tcpdf.php:							$out .= ' /W '.($this->pagedim[$n]['BoxColorInfo'][$box]['W'] * $this->k);
tcpdf.php:						if (isset($this->pagedim[$n]['BoxColorInfo'][$box]['S'])) {
tcpdf.php:							$out .= ' /S /'.$this->pagedim[$n]['BoxColorInfo'][$box]['S'];
tcpdf.php:						if (isset($this->pagedim[$n]['BoxColorInfo'][$box]['D'])) {
tcpdf.php:							$dashes = $this->pagedim[$n]['BoxColorInfo'][$box]['D'];
tcpdf.php:								$out .= sprintf(' %F', ($dash * $this->k));
tcpdf.php:			$out .= ' /Contents '.($this->n + 1).' 0 R';
tcpdf.php:			$out .= ' /Rotate '.$this->pagedim[$n]['Rotate'];
tcpdf.php:			if (!$this->pdfa_mode || $this->pdfa_version >= 2) {
tcpdf.php:			if (isset($this->pagedim[$n]['trans']) AND !empty($this->pagedim[$n]['trans'])) {
tcpdf.php:				if (isset($this->pagedim[$n]['trans']['Dur'])) {
tcpdf.php:					$out .= ' /Dur '.$this->pagedim[$n]['trans']['Dur'];
tcpdf.php:				if (isset($this->pagedim[$n]['trans']['S'])) {
tcpdf.php:					$out .= ' /S /'.$this->pagedim[$n]['trans']['S'];
tcpdf.php:				if (isset($this->pagedim[$n]['trans']['D'])) {
tcpdf.php:					$out .= ' /D '.$this->pagedim[$n]['trans']['D'];
tcpdf.php:				if (isset($this->pagedim[$n]['trans']['Dm'])) {
tcpdf.php:					$out .= ' /Dm /'.$this->pagedim[$n]['trans']['Dm'];
tcpdf.php:				if (isset($this->pagedim[$n]['trans']['M'])) {
tcpdf.php:					$out .= ' /M /'.$this->pagedim[$n]['trans']['M'];
tcpdf.php:				if (isset($this->pagedim[$n]['trans']['Di'])) {
tcpdf.php:					$out .= ' /Di '.$this->pagedim[$n]['trans']['Di'];
tcpdf.php:				if (isset($this->pagedim[$n]['trans']['SS'])) {
tcpdf.php:					$out .= ' /SS '.$this->pagedim[$n]['trans']['SS'];
tcpdf.php:				if (isset($this->pagedim[$n]['trans']['B'])) {
tcpdf.php:					$out .= ' /B '.$this->pagedim[$n]['trans']['B'];
tcpdf.php:			$out .= $this->_getannotsrefs($n);
tcpdf.php:			$out .= ' /PZ '.$this->pagedim[$n]['PZ'];
tcpdf.php:			$this->_out($out);
tcpdf.php:			$p = ($this->compress) ? gzcompress($temppage) : $temppage;
tcpdf.php:			$this->_newobj();
tcpdf.php:			$p = $this->_getrawstream($p);
tcpdf.php:			$this->_out('<<'.$filter.'/Length '.strlen($p).'>> stream'."\n".$p."\n".'endstream'."\n".'endobj');
tcpdf.php:		$out = $this->_getobj(1)."\n";
tcpdf.php:		foreach($this->page_obj_id as $page_obj) {
tcpdf.php:		$this->_out($out);
tcpdf.php:	 * @since 5.0.010 (2010-05-17)
tcpdf.php:		if (!(isset($this->PageAnnots[$n]) OR ($this->sign AND isset($this->signature_data['cert_type'])))) {
tcpdf.php:		if (isset($this->PageAnnots[$n])) {
tcpdf.php:			foreach ($this->PageAnnots[$n] as $key => $val) {
tcpdf.php:				if (!in_array($val['n'], $this->radio_groups)) {
tcpdf.php:			if (isset($this->radiobutton_groups[$n])) {
tcpdf.php:				foreach ($this->radiobutton_groups[$n] as $key => $data) {
tcpdf.php:		if ($this->sign AND ($n == $this->signature_appearance['page']) AND isset($this->signature_data['cert_type'])) {
tcpdf.php:			$out .= ' '.$this->sig_obj_id.' 0 R';
tcpdf.php:		if (!empty($this->empty_signature_appearance)) {
tcpdf.php:			foreach ($this->empty_signature_appearance as $esa) {
tcpdf.php:	 * @since 4.0.018 (2008-08-06)
tcpdf.php:		for ($n=1; $n <= $this->numpages; ++$n) {
tcpdf.php:			if (isset($this->PageAnnots[$n])) {
tcpdf.php:				foreach ($this->PageAnnots[$n] as $key => $pl) {
tcpdf.php:					$annot_obj_id = $this->PageAnnots[$n][$key]['n'];
tcpdf.php:					if (isset($this->radiobutton_groups[$n][$pl['txt']]) AND is_array($this->radiobutton_groups[$n][$pl['txt']])) {
tcpdf.php:						$radio_button_obj_id = $this->radiobutton_groups[$n][$pl['txt']]['n'];
tcpdf.php:						if ($this->radiobutton_groups[$n][$pl['txt']]['#readonly#']) {
tcpdf.php:						$annots .= ' /T '.$this->_datastring($pl['txt'], $radio_button_obj_id);
tcpdf.php:							$annots .= ' /TU '.$this->_datastring($pl['opt']['tu'], $radio_button_obj_id);
tcpdf.php:						foreach ($this->radiobutton_groups[$n][$pl['txt']] as $key => $data) {
tcpdf.php:						$this->_out($this->_getobj($radio_button_obj_id)."\n".$annots."\n".'endobj');
tcpdf.php:						$this->form_obj_id[] = $radio_button_obj_id;
tcpdf.php:						$this->radiobutton_groups[$n][$pl['txt']] = $radio_button_obj_id;
tcpdf.php:					$a = $pl['x'] * $this->k;
tcpdf.php:					$b = $this->pagedim[$n]['h'] - (($pl['y'] + $pl['h']) * $this->k);
tcpdf.php:					$c = $pl['w'] * $this->k;
tcpdf.php:					$d = $pl['h'] * $this->k;
tcpdf.php:						$annots .= ' /Contents '.$this->_textstring($pl['txt'], $annot_obj_id);
tcpdf.php:					$annots .= ' /P '.$this->page_obj_id[$n].' 0 R';
tcpdf.php:					$annots .= ' /NM '.$this->_datastring(sprintf('%04u-%04u', $n, $key), $annot_obj_id);
tcpdf.php:					$annots .= ' /M '.$this->_datestring($annot_obj_id, $this->doc_modification_timestamp);
tcpdf.php:					if ($this->pdfa_mode) {
tcpdf.php:										// reference to XObject that define the appearance for this mode-state
tcpdf.php:										$apsobjid = $this->_putAPXObject($c, $d, $stream);
tcpdf.php:									$apsobjid = $this->_putAPXObject($c, $d, $apdef);
tcpdf.php:							$annots .= ' /T '.$this->_textstring($pl['opt']['t'], $annot_obj_id);
tcpdf.php:							$annots .= ' /RC '.$this->_textstring($pl['opt']['rc'], $annot_obj_id);
tcpdf.php:						$annots .= ' /CreationDate '.$this->_datestring($annot_obj_id, $this->doc_creation_timestamp);
tcpdf.php:							$annots .= ' /Subj '.$this->_textstring($pl['opt']['subj'], $annot_obj_id);
tcpdf.php:									$annots .= ' /A << /S /GoToE /D [0 /Fit] /NewWindow true /T << /R /C /P '.($n - 1).' /A '.$this->embeddedfiles[$filename]['a'].' >> >>';
tcpdf.php:									$annots .= ' /A << /S /JavaScript /JS '.$this->_textstring($jsa, $annot_obj_id).'>>';
tcpdf.php:									if (empty($parsedUrl['scheme']) AND (!empty($parsedUrl['path']) && strtolower(substr($parsedUrl['path'], -4)) == '.pdf')) {
tcpdf.php:										$annots .= ' /A <</S /GoToR /D '.$dest.' /F '.$this->_datastring($this->unhtmlentities($parsedUrl['path']), $annot_obj_id).' /NewWindow true>>';
tcpdf.php:										$annots .= ' /A <</S /URI /URI '.$this->_datastring($this->unhtmlentities($pl['txt']), $annot_obj_id).'>>';
tcpdf.php:							} elseif (isset($this->links[$pl['txt']])) {
tcpdf.php:								$l = $this->links[$pl['txt']];
tcpdf.php:								if (isset($this->page_obj_id[($l['p'])])) {
tcpdf.php:									$annots .= sprintf(' /Dest [%u 0 R /XYZ 0 %F null]', $this->page_obj_id[($l['p'])], ($this->pagedim[$l['p']]['h'] - ($l['y'] * $this->k)));
tcpdf.php:								$annots .= ' /RC '.$this->_textstring($pl['opt']['rc'], $annot_obj_id);
tcpdf.php:								$annots .= ' /DS '.$this->_textstring($pl['opt']['ds'], $annot_obj_id);
tcpdf.php:									$annots .= sprintf('%F ', $cl * $this->k);
tcpdf.php:								$l = $pl['opt']['rd'][0] * $this->k;
tcpdf.php:								$r = $pl['opt']['rd'][1] * $this->k;
tcpdf.php:								$t = $pl['opt']['rd'][2] * $this->k;
tcpdf.php:								$b = $pl['opt']['rd'][3] * $this->k;
tcpdf.php:							if ($this->pdfa_mode && $this->pdfa_version != 3) {
tcpdf.php:							if (isset($this->embeddedfiles[$filename]['f'])) {
tcpdf.php:								$annots .= ' /FS '.$this->embeddedfiles[$filename]['f'].' 0 R';
tcpdf.php:								// index (zero-based) of the annotation in the Annots array of this page
tcpdf.php:								$this->embeddedfiles[$filename]['a'] = $key;
tcpdf.php:							if (isset($this->embeddedfiles[$filename]['f'])) {
tcpdf.php:								$annots .= ' /Sound '.$this->embeddedfiles[$filename]['f'].' 0 R';
tcpdf.php:									$info = $this->getImageBuffer($pl['opt']['mk']['i']);
tcpdf.php:									$info = $this->getImageBuffer($pl['opt']['mk']['ri']);
tcpdf.php:									$info = $this->getImageBuffer($pl['opt']['mk']['ix']);
tcpdf.php:							// --- Entries for field dictionaries ---
tcpdf.php:							if (isset($this->radiobutton_groups[$n][$pl['txt']])) {
tcpdf.php:								$annots .= ' /Parent '.$this->radiobutton_groups[$n][$pl['txt']].' 0 R';
tcpdf.php:								$annots .= ' /T '.$this->_datastring($pl['opt']['t'], $annot_obj_id);
tcpdf.php:								$annots .= ' /TU '.$this->_datastring($pl['opt']['tu'], $annot_obj_id);
tcpdf.php:								$annots .= ' /TM '.$this->_datastring($pl['opt']['tm'], $annot_obj_id);
tcpdf.php:										$flag += 1 << ($val - 1);
tcpdf.php:									$annots .= ' '.$this->_textstring($pl['opt']['v'], $annot_obj_id);
tcpdf.php:									$annots .= ' '.$this->_textstring($pl['opt']['dv'], $annot_obj_id);
tcpdf.php:									$annots .= ' '.$this->_textstring($pl['opt']['rv'], $annot_obj_id);
tcpdf.php:										$annots .= ' ['.$this->_textstring($copt[0], $annot_obj_id).' '.$this->_textstring($copt[1], $annot_obj_id).']';
tcpdf.php:										$annots .= ' '.$this->_textstring($copt, $annot_obj_id);
tcpdf.php:					$this->_out($this->_getobj($annot_obj_id)."\n".$annots."\n".'endobj');
tcpdf.php:					if ($formfield AND !isset($this->radiobutton_groups[$n][$pl['txt']])) {
tcpdf.php:						$this->form_obj_id[] = $annot_obj_id;
tcpdf.php:	 * @since 4.8.001 (2009-09-09)
tcpdf.php:		$out = $this->_getobj()."\n";
tcpdf.php:		$this->xobjects['AX'.$this->n] = array('n' => $this->n);
tcpdf.php:		if ($this->compress) {
tcpdf.php:		$stream = $this->_getrawstream($stream);
tcpdf.php:		$this->_out($out);
tcpdf.php:		return $this->n;
tcpdf.php:		$nf = $this->n;
tcpdf.php:		foreach ($this->diffs as $diff) {
tcpdf.php:			$this->_newobj();
tcpdf.php:			$this->_out('<< /Type /Encoding /BaseEncoding /WinAnsiEncoding /Differences ['.$diff.'] >>'."\n".'endobj');
tcpdf.php:		foreach ($this->FontFiles as $file => $info) {
tcpdf.php:				$compressed = (substr($file, -2) == '.z');
tcpdf.php:						$fontinfo = $this->getFontBuffer($fontkey);
tcpdf.php:				$this->_newobj();
tcpdf.php:				$this->FontFiles[$file]['n'] = $this->n;
tcpdf.php:				$stream = $this->_getrawstream($font);
tcpdf.php:				$this->_out($out);
tcpdf.php:		foreach ($this->fontkeys as $k) {
tcpdf.php:			$font = $this->getFontBuffer($k);
tcpdf.php:				$out = $this->_getobj($this->font_obj_ids[$k])."\n";
tcpdf.php:					$this->annotation_fonts[$k] = $font['i'];
tcpdf.php:				$this->_out($out);
tcpdf.php:				$out = $this->_getobj($this->font_obj_ids[$k])."\n";
tcpdf.php:				$out .= ' /Widths '.($this->n + 1).' 0 R';
tcpdf.php:				$out .= ' /FontDescriptor '.($this->n + 2).' 0 R';
tcpdf.php:				$this->_out($out);
tcpdf.php:				$this->_newobj();
tcpdf.php:				$this->_out($s);
tcpdf.php:				$this->_newobj();
tcpdf.php:					$s .= ' /FontFile'.($type == 'Type1' ? '' : '2').' '.$this->FontFiles[$font['file']]['n'].' 0 R';
tcpdf.php:				$this->_out($s);
tcpdf.php:					$this->Error('Unsupported font type: '.$type);
tcpdf.php:				$this->$mtd($font);
tcpdf.php:	 * @since 1.52.0.TC005 (2005-01-05)
tcpdf.php:		$out = $this->_getobj($this->font_obj_ids[$font['fontkey']])."\n";
tcpdf.php:		$out .= ' /ToUnicode '.($this->n + 1).' 0 R';
tcpdf.php:		$out .= ' /DescendantFonts ['.($this->n + 2).' 0 R]';
tcpdf.php:		$this->_out($out);
tcpdf.php:		// ToUnicode map for Identity-H
tcpdf.php:		$this->_newobj();
tcpdf.php:		$stream = ($this->compress) ? gzcompress($stream) : $stream;
tcpdf.php:		$filter = ($this->compress) ? '/Filter /FlateDecode ' : '';
tcpdf.php:		$stream = $this->_getrawstream($stream);
tcpdf.php:		$this->_out('<<'.$filter.'/Length '.strlen($stream).'>> stream'."\n".$stream."\n".'endstream'."\n".'endobj');
tcpdf.php:		$oid = $this->_newobj();
tcpdf.php:		$cidinfo = '/Registry '.$this->_datastring($font['cidinfo']['Registry'], $oid);
tcpdf.php:		$cidinfo .= ' /Ordering '.$this->_datastring($font['cidinfo']['Ordering'], $oid);
tcpdf.php:		$out .= ' /FontDescriptor '.($this->n + 1).' 0 R';
tcpdf.php:			$out .= "\n".'/CIDToGIDMap '.($this->n + 2).' 0 R';
tcpdf.php:		$this->_out($out);
tcpdf.php:		$this->_newobj();
tcpdf.php:			$out .= ' /FontFile2 '.$this->FontFiles[$font['file']]['n'].' 0 R';
tcpdf.php:			$fontdir = $this->FontFiles[$font['file']]['fontdir'];
tcpdf.php:		$this->_out($out);
tcpdf.php:			$this->_newobj();
tcpdf.php:				$this->Error('Font file not found: '.$ctgfile);
tcpdf.php:			$stream = $this->_getrawstream(file_get_contents($fontfile));
tcpdf.php:			if (substr($fontfile, -2) == '.z') { // check file extension
tcpdf.php:				// Decompresses data encoded using the public-domain
tcpdf.php:			$this->_out($out);
tcpdf.php:	 * Output CID-0 fonts.
tcpdf.php:	 * @since 3.2.000 (2008-06-23)
tcpdf.php:			$longname = $name.'-'.$enc;
tcpdf.php:		$out = $this->_getobj($this->font_obj_ids[$font['fontkey']])."\n";
tcpdf.php:		$out .= ' /DescendantFonts ['.($this->n + 1).' 0 R]';
tcpdf.php:		$this->_out($out);
tcpdf.php:		$oid = $this->_newobj();
tcpdf.php:		$cidinfo = '/Registry '.$this->_datastring($font['cidinfo']['Registry'], $oid);
tcpdf.php:		$cidinfo .= ' /Ordering '.$this->_datastring($font['cidinfo']['Ordering'], $oid);
tcpdf.php:		$out .= ' /FontDescriptor '.($this->n + 1).' 0 R';
tcpdf.php:		$this->_out($out);
tcpdf.php:		$this->_newobj();
tcpdf.php:		$this->_out($s);
tcpdf.php:		$filter = ($this->compress) ? '/Filter /FlateDecode ' : '';
tcpdf.php:		foreach ($this->imagekeys as $file) {
tcpdf.php:			$info = $this->getImageBuffer($file);
tcpdf.php:			if ((!$this->pdfa_mode) AND isset($info['altimgs']) AND !empty($info['altimgs'])) {
tcpdf.php:				$altoid = $this->_newobj();
tcpdf.php:					if (isset($this->xobjects['I'.$altimage[0]]['n'])) {
tcpdf.php:						$out .= ' << /Image '.$this->xobjects['I'.$altimage[0]]['n'].' 0 R';
tcpdf.php:				$this->_out($out);
tcpdf.php:			$oid = $this->_newobj();
tcpdf.php:			$this->xobjects['I'.$info['i']] = array('n' => $oid);
tcpdf.php:			$this->setImageSubBuffer($file, 'n', $this->n);
tcpdf.php:				$out .= ' /SMask '.($this->n - 1).' 0 R';
tcpdf.php:				$out .= ' /ColorSpace [/ICCBased '.($this->n + 1).' 0 R]';
tcpdf.php:				$out .= ' /ColorSpace [/Indexed /DeviceRGB '.((strlen($info['pal']) / 3) - 1).' '.($this->n + 1).' 0 R]';
tcpdf.php:				$out .= ' /F << /FS /URL /F '.$this->_datastring($info['exurl'], $oid).' >>';
tcpdf.php:						$maxval =(pow(2, $info['bpc']) - 1);
tcpdf.php:				$stream = $this->_getrawstream($info['data']);
tcpdf.php:			$this->_out($out);
tcpdf.php:				$this->_newobj();
tcpdf.php:				$icc = ($this->compress) ? gzcompress($info['icc']) : $info['icc'];
tcpdf.php:				$icc = $this->_getrawstream($icc);
tcpdf.php:				$this->_out('<</N '.$info['ch'].' /Alternate /'.$info['cs'].' '.$filter.'/Length '.strlen($icc).'>> stream'."\n".$icc."\n".'endstream'."\n".'endobj');
tcpdf.php:				$this->_newobj();
tcpdf.php:				$pal = ($this->compress) ? gzcompress($info['pal']) : $info['pal'];
tcpdf.php:				$pal = $this->_getrawstream($pal);
tcpdf.php:				$this->_out('<<'.$filter.'/Length '.strlen($pal).'>> stream'."\n".$pal."\n".'endstream'."\n".'endobj');
tcpdf.php:	 * @since 5.8.017 (2010-08-24)
tcpdf.php:		foreach ($this->xobjects as $key => $data) {
tcpdf.php:				$stream = str_replace($this->epsmarker, '', trim($data['outdata']));
tcpdf.php:				$out = $this->_getobj($data['n'])."\n";
tcpdf.php:				if ($this->compress) {
tcpdf.php:				$out .= sprintf(' /BBox [%F %F %F %F]', ($data['x'] * $this->k), (-$data['y'] * $this->k), (($data['w'] + $data['x']) * $this->k), (($data['h'] - $data['y']) * $this->k));
tcpdf.php:				if (!$this->pdfa_mode || $this->pdfa_version >= 2) {
tcpdf.php:							if (isset($this->extgstates[$k]['name'])) {
tcpdf.php:								$out .= ' /'.$this->extgstates[$k]['name'];
tcpdf.php:							$out .= ' '.$this->extgstates[$k]['n'].' 0 R';
tcpdf.php:							$gp .= ' /p'.$id.' '.$this->gradients[$id]['pattern'].' 0 R';
tcpdf.php:							$gs .= ' /Sh'.$id.' '.$this->gradients[$id]['id'].' 0 R';
tcpdf.php:						$out .= ' /CS'.$color['i'].' '.$this->spot_colors[$name]['n'].' 0 R';
tcpdf.php:						$out .= ' /F'.$fontid.' '.$this->font_obj_ids[$fontkey].' 0 R';
tcpdf.php:						$out .= ' /I'.$imgid.' '.$this->xobjects['I'.$imgid]['n'].' 0 R';
tcpdf.php:				$stream = $this->_getrawstream($stream, $data['n']);
tcpdf.php:				$this->_out($out);
tcpdf.php:	 * @since 4.0.024 (2008-09-12)
tcpdf.php:		foreach ($this->spot_colors as $name => $color) {
tcpdf.php:			$this->_newobj();
tcpdf.php:			$this->spot_colors[$name]['n'] = $this->n;
tcpdf.php:			$this->_out($out);
tcpdf.php:	 * @since 5.8.014 (2010-08-23)
tcpdf.php:		foreach ($this->xobjects as $id => $objid) {
tcpdf.php:		$out = $this->_getobj(2)."\n";
tcpdf.php:		foreach ($this->fontkeys as $fontkey) {
tcpdf.php:			$font = $this->getFontBuffer($fontkey);
tcpdf.php:		$out .= $this->_getxobjectdict();
tcpdf.php:		if (!empty($this->pdflayers)) {
tcpdf.php:			foreach ($this->pdflayers as $layer) {
tcpdf.php:		if (!$this->pdfa_mode || $this->pdfa_version >= 2) {
tcpdf.php:			if (isset($this->extgstates) AND !empty($this->extgstates)) {
tcpdf.php:				foreach ($this->extgstates as $k => $extgstate) {
tcpdf.php:			if (isset($this->gradients) AND !empty($this->gradients)) {
tcpdf.php:				foreach ($this->gradients as $id => $grad) {
tcpdf.php:		if (isset($this->spot_colors) AND !empty($this->spot_colors)) {
tcpdf.php:			foreach ($this->spot_colors as $color) {
tcpdf.php:		$this->_out($out);
tcpdf.php:		$this->_putextgstates();
tcpdf.php:		$this->_putocg();
tcpdf.php:		$this->_putfonts();
tcpdf.php:		$this->_putimages();
tcpdf.php:		$this->_putspotcolors();
tcpdf.php:		$this->_putshaders();
tcpdf.php:		$this->_putxobjects();
tcpdf.php:		$this->_putresourcedict();
tcpdf.php:		$this->_putdests();
tcpdf.php:		$this->_putEmbeddedFiles();
tcpdf.php:		$this->_putannotsobjs();
tcpdf.php:		$this->_putjavascript();
tcpdf.php:		$this->_putbookmarks();
tcpdf.php:		$this->_putencryption();
tcpdf.php:		$oid = $this->_newobj();
tcpdf.php:		$prev_isunicode = $this->isunicode;
tcpdf.php:		if ($this->docinfounicode) {
tcpdf.php:			$this->isunicode = true;
tcpdf.php:		if (!TCPDF_STATIC::empty_string($this->title)) {
tcpdf.php:			$out .= ' /Title '.$this->_textstring($this->title, $oid);
tcpdf.php:		if (!TCPDF_STATIC::empty_string($this->author)) {
tcpdf.php:			$out .= ' /Author '.$this->_textstring($this->author, $oid);
tcpdf.php:		if (!TCPDF_STATIC::empty_string($this->subject)) {
tcpdf.php:			$out .= ' /Subject '.$this->_textstring($this->subject, $oid);
tcpdf.php:		if (!TCPDF_STATIC::empty_string($this->keywords)) {
tcpdf.php:			$out .= ' /Keywords '.$this->_textstring($this->keywords, $oid);
tcpdf.php:		if (!TCPDF_STATIC::empty_string($this->creator)) {
tcpdf.php:			$out .= ' /Creator '.$this->_textstring($this->creator, $oid);
tcpdf.php:		$this->isunicode = $prev_isunicode;
tcpdf.php:		$out .= ' /Producer '.$this->_textstring(TCPDF_STATIC::getTCPDFProducer(), $oid);
tcpdf.php:		// The date and time the document was created, in human-readable form
tcpdf.php:		$out .= ' /CreationDate '.$this->_datestring(0, $this->doc_creation_timestamp);
tcpdf.php:		// The date and time the document was most recently modified, in human-readable form
tcpdf.php:		$out .= ' /ModDate '.$this->_datestring(0, $this->doc_modification_timestamp);
tcpdf.php:		$this->_out($out);
tcpdf.php:	 * IMPORTANT: This data is added as-is without controls, so you have to validate your data before using this method!
tcpdf.php:	 * @since 5.9.128 (2011-10-06)
tcpdf.php:		$this->custom_xmp = $xmp;
tcpdf.php:	 * IMPORTANT: This data is added as-is without controls, so you have to validate your data before using this method!
tcpdf.php:	 * @since 6.3.0 (2019-09-19)
tcpdf.php:		$this->custom_xmp_rdf = $xmp;
tcpdf.php:	 * @since 5.9.121 (2011-09-28)
tcpdf.php:		$oid = $this->_newobj();
tcpdf.php:		$prev_isunicode = $this->isunicode;
tcpdf.php:		$this->isunicode = true;
tcpdf.php:		$prev_encrypted = $this->encrypted;
tcpdf.php:		$this->encrypted = false;
tcpdf.php:		$xmp = '<?xpacket begin="'.TCPDF_FONTS::unichr(0xfeff, $this->isunicode).'" id="W5M0MpCehiHzreSzNTczkc9d"?>'."\n";
tcpdf.php:		$xmp .= '<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04">'."\n";
tcpdf.php:		$xmp .= "\t".'<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">'."\n";
tcpdf.php:		$xmp .= "\t\t\t\t\t".'<rdf:li xml:lang="x-default">'.TCPDF_STATIC::_escapeXML($this->title).'</rdf:li>'."\n";
tcpdf.php:		$xmp .= "\t\t\t\t\t".'<rdf:li>'.TCPDF_STATIC::_escapeXML($this->author).'</rdf:li>'."\n";
tcpdf.php:		$xmp .= "\t\t\t\t\t".'<rdf:li xml:lang="x-default">'.TCPDF_STATIC::_escapeXML($this->subject).'</rdf:li>'."\n";
tcpdf.php:		$xmp .= "\t\t\t\t\t".'<rdf:li>'.TCPDF_STATIC::_escapeXML($this->keywords).'</rdf:li>'."\n";
tcpdf.php:		$dcdate = TCPDF_STATIC::getFormattedDate($this->doc_creation_timestamp);
tcpdf.php:		$doccreationdate = substr($dcdate, 0, 4).'-'.substr($dcdate, 4, 2).'-'.substr($dcdate, 6, 2);
tcpdf.php:		$dmdate = TCPDF_STATIC::getFormattedDate($this->doc_modification_timestamp);
tcpdf.php:		$docmoddate = substr($dmdate, 0, 4).'-'.substr($dmdate, 4, 2).'-'.substr($dmdate, 6, 2);
tcpdf.php:		$xmp .= "\t\t\t".'<xmp:CreatorTool>'.$this->creator.'</xmp:CreatorTool>'."\n";
tcpdf.php:		$xmp .= "\t\t\t".'<pdf:Keywords>'.TCPDF_STATIC::_escapeXML($this->keywords).'</pdf:Keywords>'."\n";
tcpdf.php:		$uuid = 'uuid:'.substr($this->file_id, 0, 8).'-'.substr($this->file_id, 8, 4).'-'.substr($this->file_id, 12, 4).'-'.substr($this->file_id, 16, 4).'-'.substr($this->file_id, 20, 12);
tcpdf.php:		if ($this->pdfa_mode) {
tcpdf.php:			$xmp .= "\t\t\t".'<pdfaid:part>'.$this->pdfa_version.'</pdfaid:part>'."\n";
tcpdf.php:		$xmp .= $this->custom_xmp_rdf;
tcpdf.php:		$xmp .= $this->custom_xmp;
tcpdf.php:		$this->isunicode = $prev_isunicode;
tcpdf.php:		$this->encrypted = $prev_encrypted;
tcpdf.php:		$this->_out($out);
tcpdf.php:		$xmpobj = $this->_putXMP();
tcpdf.php:		if ($this->pdfa_mode OR $this->force_srgb) {
tcpdf.php:			$iccobj = $this->_newobj();
tcpdf.php:			if ($this->compress) {
tcpdf.php:			$icc = $this->_getrawstream($icc);
tcpdf.php:			$this->_out('<</N 3 '.$filter.'/Length '.strlen($icc).'>> stream'."\n".$icc."\n".'endstream'."\n".'endobj');
tcpdf.php:		$oid = $this->_newobj();
tcpdf.php:		$out .= ' /Version /'.$this->PDFVersion;
tcpdf.php:		if ((!$this->pdfa_mode) AND !empty($this->n_js)) {
tcpdf.php:			$out .= ' /JavaScript '.$this->n_js;
tcpdf.php:		if (!empty($this->efnames)) {
tcpdf.php:			foreach ($this->efnames AS $fn => $fref) {
tcpdf.php:				$out .= ' '.$this->_datastring($fn).' '.$fref;
tcpdf.php:		if (!empty($this->dests)) {
tcpdf.php:			$out .= ' /Dests '.($this->n_dests).' 0 R';
tcpdf.php:		$out .= $this->_putviewerpreferences();
tcpdf.php:		if (isset($this->LayoutMode) AND (!TCPDF_STATIC::empty_string($this->LayoutMode))) {
tcpdf.php:			$out .= ' /PageLayout /'.$this->LayoutMode;
tcpdf.php:		if (isset($this->PageMode) AND (!TCPDF_STATIC::empty_string($this->PageMode))) {
tcpdf.php:			$out .= ' /PageMode /'.$this->PageMode;
tcpdf.php:		if (count($this->outlines) > 0) {
tcpdf.php:			$out .= ' /Outlines '.$this->OutlineRoot.' 0 R';
tcpdf.php:		if ($this->ZoomMode == 'fullpage') {
tcpdf.php:			$out .= ' /OpenAction ['.$this->page_obj_id[1].' 0 R /Fit]';
tcpdf.php:		} elseif ($this->ZoomMode == 'fullwidth') {
tcpdf.php:			$out .= ' /OpenAction ['.$this->page_obj_id[1].' 0 R /FitH null]';
tcpdf.php:		} elseif ($this->ZoomMode == 'real') {
tcpdf.php:			$out .= ' /OpenAction ['.$this->page_obj_id[1].' 0 R /XYZ null null 1]';
tcpdf.php:		} elseif (!is_string($this->ZoomMode)) {
tcpdf.php:			$out .= sprintf(' /OpenAction ['.$this->page_obj_id[1].' 0 R /XYZ null null %F]', ($this->ZoomMode / 100));
tcpdf.php:		if (isset($this->l['a_meta_language'])) {
tcpdf.php:			$out .= ' /Lang '.$this->_textstring($this->l['a_meta_language'], $oid);
tcpdf.php:		// set OutputIntent to sRGB IEC61966-2.1 if required
tcpdf.php:		if ($this->pdfa_mode OR $this->force_srgb) {
tcpdf.php:			$out .= ' /OutputCondition '.$this->_textstring('sRGB IEC61966-2.1', $oid);
tcpdf.php:			$out .= ' /OutputConditionIdentifier '.$this->_textstring('sRGB IEC61966-2.1', $oid);
tcpdf.php:			$out .= ' /RegistryName '.$this->_textstring('http://www.color.org', $oid);
tcpdf.php:			$out .= ' /Info '.$this->_textstring('sRGB IEC61966-2.1', $oid);
tcpdf.php:		if (!empty($this->pdflayers)) {
tcpdf.php:			foreach ($this->pdflayers as $layer) {
tcpdf.php:			$out .= ' /Name '.$this->_textstring('Layers', $oid);
tcpdf.php:			$out .= ' /Creator '.$this->_textstring('TCPDF', $oid);
tcpdf.php:		if (!empty($this->form_obj_id)
tcpdf.php:			OR ($this->sign AND isset($this->signature_data['cert_type']))
tcpdf.php:			OR !empty($this->empty_signature_appearance)) {
tcpdf.php:			if ($this->sign AND isset($this->signature_data['cert_type'])) {
tcpdf.php:				$objrefs .= $this->sig_obj_id.' 0 R';
tcpdf.php:			if (!empty($this->empty_signature_appearance)) {
tcpdf.php:				foreach ($this->empty_signature_appearance as $esa) {
tcpdf.php:			if (!empty($this->form_obj_id)) {
tcpdf.php:				foreach($this->form_obj_id as $objid) {
tcpdf.php:			if (empty($this->signature_data['approval']) OR ($this->signature_data['approval'] != 'A')) {
tcpdf.php:			if ($this->sign AND isset($this->signature_data['cert_type'])) {
tcpdf.php:				if ($this->signature_data['cert_type'] > 0) {
tcpdf.php:			if (isset($this->annotation_fonts) AND !empty($this->annotation_fonts)) {
tcpdf.php:				foreach ($this->annotation_fonts as $fontkey => $fontid) {
tcpdf.php:					$out .= ' /F'.$fontid.' '.$this->font_obj_ids[$fontkey].' 0 R';
tcpdf.php:			$font = $this->getFontBuffer('helvetica');
tcpdf.php:			$out .= ' /Q '.(($this->rtl)?'2':'0');
tcpdf.php:			if ($this->sign AND isset($this->signature_data['cert_type'])
tcpdf.php:				AND (empty($this->signature_data['approval']) OR ($this->signature_data['approval'] != 'A'))) {
tcpdf.php:				if ($this->signature_data['cert_type'] > 0) {
tcpdf.php:					$out .= ' /Perms << /DocMDP '.($this->sig_obj_id + 1).' 0 R >>';
tcpdf.php:					$out .= ' /Perms << /UR3 '.($this->sig_obj_id + 1).' 0 R >>';
tcpdf.php:		$this->_out($out);
tcpdf.php:	 * @since 3.1.000 (2008-06-09)
tcpdf.php:		$vp = $this->viewer_preferences;
tcpdf.php:		if ($this->rtl) {
tcpdf.php:				$PrintPageRangeNum .= ' '.($v - 1).'';
tcpdf.php:		$this->_out('%PDF-'.$this->PDFVersion);
tcpdf.php:		$this->_out('%'.chr(0xe2).chr(0xe3).chr(0xcf).chr(0xd3));
tcpdf.php:		if (isset($this->CurrentFont['fontkey']) AND isset($this->CurrentFont['subsetchars'])) {
tcpdf.php:			$this->setFontSubBuffer($this->CurrentFont['fontkey'], 'subsetchars', $this->CurrentFont['subsetchars']);
tcpdf.php:		$this->state = 1;
tcpdf.php:		$this->_putheader();
tcpdf.php:		$this->_putpages();
tcpdf.php:		$this->_putresources();
tcpdf.php:		if (!empty($this->empty_signature_appearance)) {
tcpdf.php:			foreach ($this->empty_signature_appearance as $key => $esa) {
tcpdf.php:				$out = $this->_getobj($esa['objid'])."\n";
tcpdf.php:				$out .= ' /P '.$this->page_obj_id[($esa['page'])].' 0 R'; // link to signature appearance page
tcpdf.php:				$out .= ' /T '.$this->_textstring($signame, $esa['objid']);
tcpdf.php:				$this->_out($out);
tcpdf.php:		if ($this->sign AND isset($this->signature_data['cert_type'])) {
tcpdf.php:			$out = $this->_getobj($this->sig_obj_id)."\n";
tcpdf.php:			$out .= ' /Rect ['.$this->signature_appearance['rect'].']';
tcpdf.php:			$out .= ' /P '.$this->page_obj_id[($this->signature_appearance['page'])].' 0 R'; // link to signature appearance page
tcpdf.php:			$out .= ' /T '.$this->_textstring($this->signature_appearance['name'], $this->sig_obj_id);
tcpdf.php:			$out .= ' /V '.($this->sig_obj_id + 1).' 0 R';
tcpdf.php:			$this->_out($out);
tcpdf.php:			$this->_putsignature();
tcpdf.php:		$objid_info = $this->_putinfo();
tcpdf.php:		$objid_catalog = $this->_putcatalog();
tcpdf.php:		// Cross-ref
tcpdf.php:		$o = $this->bufferlen;
tcpdf.php:		$this->_out('xref');
tcpdf.php:		$this->_out('0 '.($this->n + 1));
tcpdf.php:		$this->_out('0000000000 65535 f ');
tcpdf.php:		$freegen = ($this->n + 2);
tcpdf.php:		for ($i=1; $i <= $this->n; ++$i) {
tcpdf.php:			if (!isset($this->offsets[$i]) AND ($i > 1)) {
tcpdf.php:				$this->_out(sprintf('0000000000 %05d f ', $freegen));
tcpdf.php:				$this->_out(sprintf('%010d 00000 n ', $this->offsets[$i]));
tcpdf.php:		$out .= ' /Size '.($this->n + 1);
tcpdf.php:		if ($this->encrypted) {
tcpdf.php:			$out .= ' /Encrypt '.$this->encryptdata['objid'].' 0 R';
tcpdf.php:		$out .= ' /ID [ <'.$this->file_id.'> <'.$this->file_id.'> ]';
tcpdf.php:		$this->_out($out);
tcpdf.php:		$this->_out('startxref');
tcpdf.php:		$this->_out($o);
tcpdf.php:		$this->_out('%%EOF');
tcpdf.php:		$this->state = 3; // end-of-doc
tcpdf.php:		++$this->page;
tcpdf.php:		$this->pageobjects[$this->page] = array();
tcpdf.php:		$this->setPageBuffer($this->page, '');
tcpdf.php:		$this->transfmrk[$this->page] = array();
tcpdf.php:		$this->state = 2;
tcpdf.php:			if (isset($this->CurOrientation)) {
tcpdf.php:				$orientation = $this->CurOrientation;
tcpdf.php:			} elseif ($this->fwPt > $this->fhPt) {
tcpdf.php:			$this->pagedim[$this->page] = $this->pagedim[($this->page - 1)];
tcpdf.php:			$this->setPageOrientation($orientation);
tcpdf.php:			$this->setPageFormat($format, $orientation);
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$this->x = $this->w - $this->rMargin;
tcpdf.php:			$this->x = $this->lMargin;
tcpdf.php:		$this->y = $this->tMargin;
tcpdf.php:		if (isset($this->newpagegroup[$this->page])) {
tcpdf.php:			$this->currpagegroup = $this->newpagegroup[$this->page];
tcpdf.php:			$this->pagegroups[$this->currpagegroup] = 1;
tcpdf.php:		} elseif (isset($this->currpagegroup) AND ($this->currpagegroup > 0)) {
tcpdf.php:			++$this->pagegroups[$this->currpagegroup];
tcpdf.php:		$this->setVisibility('all');
tcpdf.php:		$this->state = 1;
tcpdf.php:		$this->_out($this->_getobj());
tcpdf.php:		return $this->n;
tcpdf.php:	 * @since 5.8.009 (2010-08-20)
tcpdf.php:			++$this->n;
tcpdf.php:			$objid = $this->n;
tcpdf.php:		$this->offsets[$objid] = $this->bufferlen;
tcpdf.php:		$this->pageobjects[$this->page][] = $objid;
tcpdf.php:		$w = $this->GetStringWidth($txt);
tcpdf.php:		return $this->_dounderlinew($x, $y, $w);
tcpdf.php:	 * @since 4.8.008 (2009-09-29)
tcpdf.php:		$linew = - $this->CurrentFont['ut'] / 1000 * $this->FontSizePt;
tcpdf.php:		return sprintf('%F %F %F %F re f', $x * $this->k, ((($this->h - $y) * $this->k) + $linew), $w * $this->k, $linew);
tcpdf.php:		$w = $this->GetStringWidth($txt);
tcpdf.php:		return $this->_dolinethroughw($x, $y, $w);
tcpdf.php:	 * @since 4.9.008 (2009-09-29)
tcpdf.php:		$linew = - $this->CurrentFont['ut'] / 1000 * $this->FontSizePt;
tcpdf.php:		return sprintf('%F %F %F %F re f', $x * $this->k, ((($this->h - $y) * $this->k) + $linew + ($this->FontSizePt / 3)), $w * $this->k, $linew);
tcpdf.php:	 * @since 4.9.015 (2010-04-19)
tcpdf.php:		$w = $this->GetStringWidth($txt);
tcpdf.php:		return $this->_dooverlinew($x, $y, $w);
tcpdf.php:	 * @since 4.9.015 (2010-04-19)
tcpdf.php:		$linew = - $this->CurrentFont['ut'] / 1000 * $this->FontSizePt;
tcpdf.php:		return sprintf('%F %F %F %F re f', $x * $this->k, (($this->h - $y + $this->FontAscent) * $this->k) - $linew, $w * $this->k, $linew);
tcpdf.php:			$n = $this->n;
tcpdf.php:		$s = $this->_encrypt_data($n, $s);
tcpdf.php:	 * @param mixed $time Document creation timestamp in seconds or date-time string.
tcpdf.php:	 * @since 5.9.152 (2012-03-23)
tcpdf.php:		$this->doc_creation_timestamp = intval($time);
tcpdf.php:	 * @param mixed $time Document modification timestamp in seconds or date-time string.
tcpdf.php:	 * @since 5.9.152 (2012-03-23)
tcpdf.php:		$this->doc_modification_timestamp = intval($time);
tcpdf.php:	 * @since 5.9.152 (2012-03-23)
tcpdf.php:		return $this->doc_creation_timestamp;
tcpdf.php:	 * @since 5.9.152 (2012-03-23)
tcpdf.php:		return $this->doc_modification_timestamp;
tcpdf.php:	 * @since 4.6.028 (2009-08-25)
tcpdf.php:			$timestamp = $this->doc_creation_timestamp;
tcpdf.php:		return $this->_datastring('D:'.TCPDF_STATIC::getFormattedDate($timestamp), $n);
tcpdf.php:		if ($this->isunicode) {
tcpdf.php:			//Convert string to UTF-16BE
tcpdf.php:			$s = TCPDF_FONTS::UTF8ToUTF16BE($s, true, $this->isunicode, $this->CurrentFont);
tcpdf.php:		return $this->_datastring($s, $n);
tcpdf.php:	 * @since 5.5.000 (2010-06-22)
tcpdf.php:			$n = $this->n;
tcpdf.php:		return $this->_encrypt_data($n, $s);
tcpdf.php:		if ($this->state == 2) {
tcpdf.php:			if ($this->inxobj) {
tcpdf.php:				$this->xobjects[$this->xobjid]['outdata'] .= $s."\n";
tcpdf.php:			} elseif ((!$this->InFooter) AND isset($this->footerlen[$this->page]) AND ($this->footerlen[$this->page] > 0)) {
tcpdf.php:				$pagebuff = $this->getPageBuffer($this->page);
tcpdf.php:				$page = substr($pagebuff, 0, -$this->footerlen[$this->page]);
tcpdf.php:				$footer = substr($pagebuff, -$this->footerlen[$this->page]);
tcpdf.php:				$this->setPageBuffer($this->page, $page.$s."\n".$footer);
tcpdf.php:				$this->footerpos[$this->page] += strlen($s."\n");
tcpdf.php:				$this->setPageBuffer($this->page, $s."\n", true);
tcpdf.php:		} elseif ($this->state > 0) {
tcpdf.php:			$this->setBuffer($s."\n");
tcpdf.php:	 * @phpstan-param array{0: string, 1: string, 2: float|null} $font
tcpdf.php:		$this->header_font = $font;
tcpdf.php:	 * @phpstan-return array{0: string, 1: string, 2: float|null}
tcpdf.php:	 * @since 4.0.012 (2008-07-24)
tcpdf.php:		return $this->header_font;
tcpdf.php:	 * @phpstan-param array{0: string, 1: string, 2: float|null} $font
tcpdf.php:		$this->footer_font = $font;
tcpdf.php:	 * @phpstan-return array{0: string, 1: string, 2: float|null} $font
tcpdf.php:	 * @since 4.0.012 (2008-07-24)
tcpdf.php:		return $this->footer_font;
tcpdf.php:		$this->l = $language;
tcpdf.php:		if (isset($this->l['a_meta_dir'])) {
tcpdf.php:			$this->rtl = $this->l['a_meta_dir']=='rtl' ? true : false;
tcpdf.php:			$this->rtl = false;
tcpdf.php:		if ($this->state < 3) {
tcpdf.php:			$this->Close();
tcpdf.php:		return $this->buffer;
tcpdf.php:	public function addHtmlLink($url, $name, $fill=false, $firstline=false, $color=null, $style=-1, $firstblock=false) {
tcpdf.php:				$url = $this->AddLink();
tcpdf.php:				$this->setLink($url, $lnky, $page);
tcpdf.php:		$prevcolor = $this->fgcolor;
tcpdf.php:		$prevstyle = $this->FontStyle;
tcpdf.php:			$this->setTextColorArray($this->htmlLinkColorArray);
tcpdf.php:			$this->setTextColorArray($color);
tcpdf.php:		if ($style == -1) {
tcpdf.php:			$this->setFont('', $this->FontStyle.$this->htmlLinkFontStyle);
tcpdf.php:			$this->setFont('', $this->FontStyle.$style);
tcpdf.php:		$ret = $this->Write($this->lasth, $name, $url, $fill, '', false, 0, $firstline, $firstblock, 0);
tcpdf.php:		$this->setFont('', $prevstyle);
tcpdf.php:		$this->setTextColorArray($prevcolor);
tcpdf.php:		return ($px / ($this->imgscale * $this->k));
tcpdf.php:	 * Convert entities in UTF-8.
tcpdf.php:		return @html_entity_decode($text_to_convert, ENT_QUOTES, $this->encoding);
tcpdf.php:	// ENCRYPTION METHODS ----------------------------------
tcpdf.php:	 * @since 2.0.000 (2008-01-02)
tcpdf.php:		$objkey = $this->encryptdata['key'].pack('VXxx', $n);
tcpdf.php:		if ($this->encryptdata['mode'] == 2) { // AES-128
tcpdf.php:		$objkey = substr(TCPDF_STATIC::_md5_16($objkey), 0, (($this->encryptdata['Length'] / 8) + 5));
tcpdf.php:	 * @since 5.0.005 (2010-05-11)
tcpdf.php:		if (!$this->encrypted) {
tcpdf.php:		switch ($this->encryptdata['mode']) {
tcpdf.php:			case 0:   // RC4-40
tcpdf.php:			case 1: { // RC4-128
tcpdf.php:				$s = TCPDF_STATIC::_RC4($this->_objectkey($n), $s, $this->last_enc_key, $this->last_enc_key_c);
tcpdf.php:			case 2: { // AES-128
tcpdf.php:				$s = TCPDF_STATIC::_AES($this->_objectkey($n), $s);
tcpdf.php:			case 3: { // AES-256
tcpdf.php:				$s = TCPDF_STATIC::_AES($this->encryptdata['key'], $s);
tcpdf.php:	 * @since 2.0.000 (2008-01-02)
tcpdf.php:		if (!$this->encrypted) {
tcpdf.php:		$this->encryptdata['objid'] = $this->_newobj();
tcpdf.php:		if (!isset($this->encryptdata['Filter']) OR empty($this->encryptdata['Filter'])) {
tcpdf.php:			$this->encryptdata['Filter'] = 'Standard';
tcpdf.php:		$out .= ' /Filter /'.$this->encryptdata['Filter'];
tcpdf.php:		if (isset($this->encryptdata['SubFilter']) AND !empty($this->encryptdata['SubFilter'])) {
tcpdf.php:			$out .= ' /SubFilter /'.$this->encryptdata['SubFilter'];
tcpdf.php:		if (!isset($this->encryptdata['V']) OR empty($this->encryptdata['V'])) {
tcpdf.php:			$this->encryptdata['V'] = 1;
tcpdf.php:		$out .= ' /V '.$this->encryptdata['V'];
tcpdf.php:		if (isset($this->encryptdata['Length']) AND !empty($this->encryptdata['Length'])) {
tcpdf.php:			$out .= ' /Length '.$this->encryptdata['Length'];
tcpdf.php:		if ($this->encryptdata['V'] >= 4) {
tcpdf.php:			if (!isset($this->encryptdata['StmF']) OR empty($this->encryptdata['StmF'])) {
tcpdf.php:				$this->encryptdata['StmF'] = 'Identity';
tcpdf.php:			if (!isset($this->encryptdata['StrF']) OR empty($this->encryptdata['StrF'])) {
tcpdf.php:				$this->encryptdata['StrF'] = 'Identity';
tcpdf.php:			if (isset($this->encryptdata['CF']) AND !empty($this->encryptdata['CF'])) {
tcpdf.php:				$out .= ' /'.$this->encryptdata['StmF'].' <<';
tcpdf.php:				if (isset($this->encryptdata['CF']['CFM']) AND !empty($this->encryptdata['CF']['CFM'])) {
tcpdf.php:					$out .= ' /CFM /'.$this->encryptdata['CF']['CFM'];
tcpdf.php:					if ($this->encryptdata['pubkey']) {
tcpdf.php:						foreach ($this->encryptdata['Recipients'] as $rec) {
tcpdf.php:						if (isset($this->encryptdata['CF']['EncryptMetadata']) AND (!$this->encryptdata['CF']['EncryptMetadata'])) {
tcpdf.php:				if (isset($this->encryptdata['CF']['AuthEvent']) AND !empty($this->encryptdata['CF']['AuthEvent'])) {
tcpdf.php:					$out .= ' /AuthEvent /'.$this->encryptdata['CF']['AuthEvent'];
tcpdf.php:				if (isset($this->encryptdata['CF']['Length']) AND !empty($this->encryptdata['CF']['Length'])) {
tcpdf.php:					$out .= ' /Length '.$this->encryptdata['CF']['Length'];
tcpdf.php:			$out .= ' /StmF /'.$this->encryptdata['StmF'];
tcpdf.php:			$out .= ' /StrF /'.$this->encryptdata['StrF'];
tcpdf.php:			if (isset($this->encryptdata['EFF']) AND !empty($this->encryptdata['EFF'])) {
tcpdf.php:				$out .= ' /EFF /'.$this->encryptdata[''];
tcpdf.php:		if ($this->encryptdata['pubkey']) {
tcpdf.php:			if (($this->encryptdata['V'] < 4) AND isset($this->encryptdata['Recipients']) AND !empty($this->encryptdata['Recipients'])) {
tcpdf.php:				foreach ($this->encryptdata['Recipients'] as $rec) {
tcpdf.php:			if ($this->encryptdata['V'] == 5) { // AES-256
tcpdf.php:				$out .= ' /OE ('.TCPDF_STATIC::_escape($this->encryptdata['OE']).')';
tcpdf.php:				$out .= ' /UE ('.TCPDF_STATIC::_escape($this->encryptdata['UE']).')';
tcpdf.php:				$out .= ' /Perms ('.TCPDF_STATIC::_escape($this->encryptdata['perms']).')';
tcpdf.php:			} elseif ($this->encryptdata['V'] == 4) { // AES-128
tcpdf.php:			} elseif ($this->encryptdata['V'] < 2) { // RC-40
tcpdf.php:			} else { // RC-128
tcpdf.php:			$out .= ' /O ('.TCPDF_STATIC::_escape($this->encryptdata['O']).')';
tcpdf.php:			$out .= ' /U ('.TCPDF_STATIC::_escape($this->encryptdata['U']).')';
tcpdf.php:			$out .= ' /P '.$this->encryptdata['P'];
tcpdf.php:			if (isset($this->encryptdata['EncryptMetadata']) AND (!$this->encryptdata['EncryptMetadata'])) {
tcpdf.php:		$this->_out($out);
tcpdf.php:	 * @since 2.0.000 (2008-01-02)
tcpdf.php:		if ($this->encryptdata['mode'] == 0) { // RC4-40
tcpdf.php:			return TCPDF_STATIC::_RC4($this->encryptdata['key'], TCPDF_STATIC::$enc_padding, $this->last_enc_key, $this->last_enc_key_c);
tcpdf.php:		} elseif ($this->encryptdata['mode'] < 3) { // RC4-128, AES-128
tcpdf.php:			$tmp = TCPDF_STATIC::_md5_16(TCPDF_STATIC::$enc_padding.$this->encryptdata['fileid']);
tcpdf.php:			$enc = TCPDF_STATIC::_RC4($this->encryptdata['key'], $tmp, $this->last_enc_key, $this->last_enc_key_c);
tcpdf.php:					$ek .= chr(ord($this->encryptdata['key'][$j]) ^ $i);
tcpdf.php:				$enc = TCPDF_STATIC::_RC4($ek, $enc, $this->last_enc_key, $this->last_enc_key_c);
tcpdf.php:		} elseif ($this->encryptdata['mode'] == 3) { // AES-256
tcpdf.php:			$this->encryptdata['UVS'] = substr($seed, 0, 8);
tcpdf.php:			$this->encryptdata['UKS'] = substr($seed, 8, 16);
tcpdf.php:			return hash('sha256', $this->encryptdata['user_password'].$this->encryptdata['UVS'], true).$this->encryptdata['UVS'].$this->encryptdata['UKS'];
tcpdf.php:	 * @since 5.9.006 (2010-10-19)
tcpdf.php:		$hashkey = hash('sha256', $this->encryptdata['user_password'].$this->encryptdata['UKS'], true);
tcpdf.php:		return TCPDF_STATIC::_AESnopad($hashkey, $this->encryptdata['key']);
tcpdf.php:	 * @since 2.0.000 (2008-01-02)
tcpdf.php:		if ($this->encryptdata['mode'] < 3) { // RC4-40, RC4-128, AES-128
tcpdf.php:			$tmp = TCPDF_STATIC::_md5_16($this->encryptdata['owner_password']);
tcpdf.php:			if ($this->encryptdata['mode'] > 0) {
tcpdf.php:			$owner_key = substr($tmp, 0, ($this->encryptdata['Length'] / 8));
tcpdf.php:			$enc = TCPDF_STATIC::_RC4($owner_key, $this->encryptdata['user_password'], $this->last_enc_key, $this->last_enc_key_c);
tcpdf.php:			if ($this->encryptdata['mode'] > 0) {
tcpdf.php:					$enc = TCPDF_STATIC::_RC4($ek, $enc, $this->last_enc_key, $this->last_enc_key_c);
tcpdf.php:		} elseif ($this->encryptdata['mode'] == 3) { // AES-256
tcpdf.php:			$this->encryptdata['OVS'] = substr($seed, 0, 8);
tcpdf.php:			$this->encryptdata['OKS'] = substr($seed, 8, 16);
tcpdf.php:			return hash('sha256', $this->encryptdata['owner_password'].$this->encryptdata['OVS'].$this->encryptdata['U'], true).$this->encryptdata['OVS'].$this->encryptdata['OKS'];
tcpdf.php:	 * @since 5.9.006 (2010-10-19)
tcpdf.php:		$hashkey = hash('sha256', $this->encryptdata['owner_password'].$this->encryptdata['OKS'].$this->encryptdata['U'], true);
tcpdf.php:		return TCPDF_STATIC::_AESnopad($hashkey, $this->encryptdata['key']);
tcpdf.php:	 * Convert password for AES-256 encryption mode
tcpdf.php:	 * @since 5.9.006 (2010-10-19)
tcpdf.php:		$psw_array = TCPDF_FONTS::utf8Bidi(TCPDF_FONTS::UTF8StringToArray($password, $this->isunicode, $this->CurrentFont), $password, $this->rtl, $this->isunicode, $this->CurrentFont);
tcpdf.php:			$psw .= TCPDF_FONTS::unichr($c, $this->isunicode);
tcpdf.php:	 * @since 2.0.000 (2008-01-02)
tcpdf.php:		$keybytelen = ($this->encryptdata['Length'] / 8);
tcpdf.php:		if (!$this->encryptdata['pubkey']) { // standard mode
tcpdf.php:			if ($this->encryptdata['mode'] == 3) { // AES-256
tcpdf.php:				$this->encryptdata['key'] = substr(hash('sha256', TCPDF_STATIC::getRandomSeed(), true), 0, $keybytelen);
tcpdf.php:				$this->encryptdata['user_password'] = $this->_fixAES256Password($this->encryptdata['user_password']);
tcpdf.php:				$this->encryptdata['owner_password'] = $this->_fixAES256Password($this->encryptdata['owner_password']);
tcpdf.php:				$this->encryptdata['U'] = $this->_Uvalue();
tcpdf.php:				$this->encryptdata['UE'] = $this->_UEvalue();
tcpdf.php:				$this->encryptdata['O'] = $this->_Ovalue();
tcpdf.php:				$this->encryptdata['OE'] = $this->_OEvalue();
tcpdf.php:				$this->encryptdata['P'] = $this->encryptdata['protection'];
tcpdf.php:				$perms = TCPDF_STATIC::getEncPermissionsString($this->encryptdata['protection']); // bytes 0-3
tcpdf.php:				$perms .= chr(255).chr(255).chr(255).chr(255); // bytes 4-7
tcpdf.php:				if (isset($this->encryptdata['CF']['EncryptMetadata']) AND (!$this->encryptdata['CF']['EncryptMetadata'])) { // byte 8
tcpdf.php:				$perms .= 'adb'; // bytes 9-11
tcpdf.php:				$perms .= 'nick'; // bytes 12-15
tcpdf.php:				$this->encryptdata['perms'] = TCPDF_STATIC::_AESnopad($this->encryptdata['key'], $perms);
tcpdf.php:			} else { // RC4-40, RC4-128, AES-128
tcpdf.php:				$this->encryptdata['user_password'] = substr($this->encryptdata['user_password'].TCPDF_STATIC::$enc_padding, 0, 32);
tcpdf.php:				$this->encryptdata['owner_password'] = substr($this->encryptdata['owner_password'].TCPDF_STATIC::$enc_padding, 0, 32);
tcpdf.php:				$this->encryptdata['O'] = $this->_Ovalue();
tcpdf.php:				$permissions = TCPDF_STATIC::getEncPermissionsString($this->encryptdata['protection']);
tcpdf.php:				$tmp = TCPDF_STATIC::_md5_16($this->encryptdata['user_password'].$this->encryptdata['O'].$permissions.$this->encryptdata['fileid']);
tcpdf.php:				if ($this->encryptdata['mode'] > 0) {
tcpdf.php:				$this->encryptdata['key'] = substr($tmp, 0, $keybytelen);
tcpdf.php:				$this->encryptdata['U'] = $this->_Uvalue();
tcpdf.php:				$this->encryptdata['P'] = $this->encryptdata['protection'];
tcpdf.php:		} else { // Public-Key mode
tcpdf.php:			// random 20-byte seed
tcpdf.php:			foreach ($this->encryptdata['pubkeys'] as $pubkey) {
tcpdf.php:					$pkprotection = TCPDF_STATIC::getUserPermissionCode($pubkey['p'], $this->encryptdata['mode']);
tcpdf.php:					$pkprotection = $this->encryptdata['protection'];
tcpdf.php:				$tempkeyfile = TCPDF_STATIC::getObjFilename('key', $this->file_id);
tcpdf.php:					$this->Error('Unable to create temporary key file: '.$tempkeyfile);
tcpdf.php:				$tempencfile = TCPDF_STATIC::getObjFilename('enc', $this->file_id);
tcpdf.php:					$this->Error('Unable to encrypt the file: '.$tempkeyfile);
tcpdf.php:				$signature = substr($signature, strpos($signature, 'Content-Disposition'));
tcpdf.php:				$this->encryptdata['Recipients'][] = $hexsignature;
tcpdf.php:			if ($this->encryptdata['mode'] == 3) { // AES-256
tcpdf.php:				$this->encryptdata['key'] = substr(hash('sha256', $seed.$recipient_bytes, true), 0, $keybytelen);
tcpdf.php:			} else { // RC4-40, RC4-128, AES-128
tcpdf.php:				$this->encryptdata['key'] = substr(sha1($seed.$recipient_bytes, true), 0, $keybytelen);
tcpdf.php:	 * Note: protecting a document requires to encrypt it, which increases the processing time a lot. This can cause a PHP time-out in some cases, especially if the document contains images or fonts.
tcpdf.php:	 * @param array $permissions the set of permissions (specify the ones you want to block):<ul><li>print : Print the document;</li><li>modify : Modify the contents of the document by operations other than those controlled by 'fill-forms', 'extract' and 'assemble';</li><li>copy : Copy or otherwise extract text and graphics from the document;</li><li>annot-forms : Add or modify text annotations, fill in interactive form fields, and, if 'modify' is also set, create or modify interactive form fields (including signature fields);</li><li>fill-forms : Fill in existing interactive form fields (including signature fields), even if 'annot-forms' is not specified;</li><li>extract : Extract text and graphics (in support of accessibility to users with disabilities or for other purposes);</li><li>assemble : Assemble the document (insert, rotate, or delete pages and create bookmarks or thumbnail images), even if 'modify' is not set;</li><li>print-high : Print the document to a representation from which a faithful digital copy of the PDF content could be generated. When this is not set, printing is limited to a low-level representation of the appearance, possibly of degraded quality.</li><li>owner : (inverted logic - only for public-key) when set permits change of encryption and enables all other permissions.</li></ul>
tcpdf.php:	 * @param array|null $pubkeys array of recipients containing public-key certificates ('c') and permissions ('p'). For example: array(array('c' => 'file://../examples/data/cert/tcpdf.crt', 'p' => array('print')))
tcpdf.php:	 * @since 2.0.000 (2008-01-02)
tcpdf.php:	public function setProtection($permissions=array('print', 'modify', 'copy', 'annot-forms', 'fill-forms', 'extract', 'assemble', 'print-high'), $user_pass='', $owner_pass=null, $mode=0, $pubkeys=null) {
tcpdf.php:		if ($this->pdfa_mode) {
tcpdf.php:		$this->encryptdata['protection'] = TCPDF_STATIC::getUserPermissionCode($permissions, $mode);
tcpdf.php:			// public-key mode
tcpdf.php:			$this->encryptdata['pubkeys'] = $pubkeys;
tcpdf.php:				// public-Key Security requires at least 128 bit
tcpdf.php:				$this->Error('Public-Key Security requires openssl library.');
tcpdf.php:			// Set Public-Key filter (available are: Entrust.PPKEF, Adobe.PPKLite, Adobe.PubSec)
tcpdf.php:			$this->encryptdata['pubkey'] = true;
tcpdf.php:			$this->encryptdata['Filter'] = 'Adobe.PubSec';
tcpdf.php:			$this->encryptdata['StmF'] = 'DefaultCryptFilter';
tcpdf.php:			$this->encryptdata['StrF'] = 'DefaultCryptFilter';
tcpdf.php:			$this->encryptdata['pubkey'] = false;
tcpdf.php:			$this->encryptdata['Filter'] = 'Standard';
tcpdf.php:			$this->encryptdata['StmF'] = 'StdCF';
tcpdf.php:			$this->encryptdata['StrF'] = 'StdCF';
tcpdf.php:				$this->Error('AES encryption requires openssl or mcrypt extension (http://www.php.net/manual/en/mcrypt.requirements.php).');
tcpdf.php:			if (extension_loaded('openssl') && !in_array('aes-256-cbc', openssl_get_cipher_methods())) {
tcpdf.php:				$this->Error('AES encryption requires openssl/aes-256-cbc cypher.');
tcpdf.php:				$this->Error('AES encryption requires MCRYPT_RIJNDAEL_128 cypher.');
tcpdf.php:				$this->Error('AES 256 encryption requires HASH Message Digest Framework (http://www.php.net/manual/en/book.hash.php).');
tcpdf.php:		$this->encryptdata['user_password'] = $user_pass;
tcpdf.php:		$this->encryptdata['owner_password'] = $owner_pass;
tcpdf.php:		$this->encryptdata['mode'] = $mode;
tcpdf.php:				$this->encryptdata['V'] = 1;
tcpdf.php:				$this->encryptdata['Length'] = 40;
tcpdf.php:				$this->encryptdata['CF']['CFM'] = 'V2';
tcpdf.php:				$this->encryptdata['V'] = 2;
tcpdf.php:				$this->encryptdata['Length'] = 128;
tcpdf.php:				$this->encryptdata['CF']['CFM'] = 'V2';
tcpdf.php:				if ($this->encryptdata['pubkey']) {
tcpdf.php:					$this->encryptdata['SubFilter'] = 'adbe.pkcs7.s4';
tcpdf.php:					$this->encryptdata['Recipients'] = array();
tcpdf.php:				$this->encryptdata['V'] = 4;
tcpdf.php:				$this->encryptdata['Length'] = 128;
tcpdf.php:				$this->encryptdata['CF']['CFM'] = 'AESV2';
tcpdf.php:				$this->encryptdata['CF']['Length'] = 128;
tcpdf.php:				if ($this->encryptdata['pubkey']) {
tcpdf.php:					$this->encryptdata['SubFilter'] = 'adbe.pkcs7.s5';
tcpdf.php:					$this->encryptdata['Recipients'] = array();
tcpdf.php:				$this->encryptdata['V'] = 5;
tcpdf.php:				$this->encryptdata['Length'] = 256;
tcpdf.php:				$this->encryptdata['CF']['CFM'] = 'AESV3';
tcpdf.php:				$this->encryptdata['CF']['Length'] = 256;
tcpdf.php:				if ($this->encryptdata['pubkey']) {
tcpdf.php:					$this->encryptdata['SubFilter'] = 'adbe.pkcs7.s5';
tcpdf.php:					$this->encryptdata['Recipients'] = array();
tcpdf.php:		$this->encrypted = true;
tcpdf.php:		$this->encryptdata['fileid'] = TCPDF_STATIC::convertHexStringToString($this->file_id);
tcpdf.php:		$this->_generateencryptionkey();
tcpdf.php:	// END OF ENCRYPTION FUNCTIONS -------------------------
tcpdf.php:	// START TRANSFORMATIONS SECTION -----------------------
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:		$this->_outSaveGraphicsState();
tcpdf.php:		if ($this->inxobj) {
tcpdf.php:			$this->xobjects[$this->xobjid]['transfmrk'][] = strlen($this->xobjects[$this->xobjid]['outdata']);
tcpdf.php:			$this->transfmrk[$this->page][] = $this->pagelen[$this->page];
tcpdf.php:		++$this->transfmatrix_key;
tcpdf.php:		$this->transfmatrix[$this->transfmatrix_key] = array();
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:		$this->_outRestoreGraphicsState();
tcpdf.php:		if (isset($this->transfmatrix[$this->transfmatrix_key])) {
tcpdf.php:			array_pop($this->transfmatrix[$this->transfmatrix_key]);
tcpdf.php:			--$this->transfmatrix_key;
tcpdf.php:		if ($this->inxobj) {
tcpdf.php:			array_pop($this->xobjects[$this->xobjid]['transfmrk']);
tcpdf.php:			array_pop($this->transfmrk[$this->page]);
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		$this->Scale($s_x, 100, $x, $y);
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		$this->Scale(100, $s_y, $x, $y);
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		$this->Scale($s, $s, $x, $y);
tcpdf.php:	 * Vertical and horizontal non-proportional Scaling.
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:			$this->Error('Please do not use values equal to zero for scaling');
tcpdf.php:		$y = ($this->h - $y) * $this->k;
tcpdf.php:		$x *= $this->k;
tcpdf.php:		$tm[4] = $x * (1 - $s_x);
tcpdf.php:		$tm[5] = $y * (1 - $s_y);
tcpdf.php:		$this->Transform($tm);
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		$this->Scale(-100, 100, $x);
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		$this->Scale(100, -100, null, $y);
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		$this->Scale(-100, -100, $x, $y);
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		$this->Scale(-100, 100, $x, $y);
tcpdf.php:		$this->Rotate(-2*($angle-90), $x, $y);
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		$this->Translate($t_x, 0);
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		$this->Translate(0, $t_y);
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		$tm[4] = $t_x * $this->k;
tcpdf.php:		$tm[5] = -$t_y * $this->k;
tcpdf.php:		$this->Transform($tm);
tcpdf.php:	 * @param float $angle angle in degrees for counter-clockwise rotation
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:		$y = ($this->h - $y) * $this->k;
tcpdf.php:		$x *= $this->k;
tcpdf.php:		$tm[2] = -$tm[1];
tcpdf.php:		$tm[4] = $x + ($tm[1] * $y) - ($tm[0] * $x);
tcpdf.php:		$tm[5] = $y - ($tm[0] * $y) - ($tm[1] * $x);
tcpdf.php:		$this->Transform($tm);
tcpdf.php:	 * @param float $angle_x angle in degrees between -90 (skew to the left) and 90 (skew to the right)
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		$this->Skew($angle_x, 0, $x, $y);
tcpdf.php:	 * @param float $angle_y angle in degrees between -90 (skew to the bottom) and 90 (skew to the top)
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		$this->Skew(0, $angle_y, $x, $y);
tcpdf.php:	 * @param float $angle_x angle in degrees between -90 (skew to the left) and 90 (skew to the right)
tcpdf.php:	 * @param float $angle_y angle in degrees between -90 (skew to the bottom) and 90 (skew to the top)
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:		if (($angle_x <= -90) OR ($angle_x >= 90) OR ($angle_y <= -90) OR ($angle_y >= 90)) {
tcpdf.php:			$this->Error('Please use values between -90 and +90 degrees for Skewing.');
tcpdf.php:		$x *= $this->k;
tcpdf.php:		$y = ($this->h - $y) * $this->k;
tcpdf.php:		$tm[4] = -$tm[2] * $y;
tcpdf.php:		$tm[5] = -$tm[1] * $x;
tcpdf.php:		$this->Transform($tm);
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:		$this->_out(sprintf('%F %F %F %F %F %F cm', $tm[0], $tm[1], $tm[2], $tm[3], $tm[4], $tm[5]));
tcpdf.php:		$this->transfmatrix[$this->transfmatrix_key][] = array('a' => $tm[0], 'b' => $tm[1], 'c' => $tm[2], 'd' => $tm[3], 'e' => $tm[4], 'f' => $tm[5]);
tcpdf.php:		if ($this->inxobj) {
tcpdf.php:			if (end($this->xobjects[$this->xobjid]['transfmrk']) !== false) {
tcpdf.php:				$key = key($this->xobjects[$this->xobjid]['transfmrk']);
tcpdf.php:				$this->xobjects[$this->xobjid]['transfmrk'][$key] = strlen($this->xobjects[$this->xobjid]['outdata']);
tcpdf.php:		} elseif (end($this->transfmrk[$this->page]) !== false) {
tcpdf.php:			$key = key($this->transfmrk[$this->page]);
tcpdf.php:			$this->transfmrk[$this->page][$key] = $this->pagelen[$this->page];
tcpdf.php:	// END TRANSFORMATIONS SECTION -------------------------
tcpdf.php:	// START GRAPHIC FUNCTIONS SECTION ---------------------
tcpdf.php:		$this->LineWidth = $width;
tcpdf.php:		$this->linestyleWidth = sprintf('%F w', ($width * $this->k));
tcpdf.php:		if ($this->state == 2) {
tcpdf.php:			$this->_out($this->linestyleWidth);
tcpdf.php:	 * @since 2.1.000 (2008-01-07)
tcpdf.php:		return $this->LineWidth;
tcpdf.php:	 * @since 2.1.000 (2008-01-08)
tcpdf.php:			$this->LineWidth = $style['width'];
tcpdf.php:			$this->linestyleWidth = sprintf('%F w', ($style['width'] * $this->k));
tcpdf.php:			$s .= $this->linestyleWidth.' ';
tcpdf.php:				$this->linestyleCap = $ca[$style['cap']].' J';
tcpdf.php:				$s .= $this->linestyleCap.' ';
tcpdf.php:				$this->linestyleJoin = $ja[$style['join']].' j';
tcpdf.php:				$s .= $this->linestyleJoin.' ';
tcpdf.php:			$this->linestyleDash = sprintf('[%s] %F d', $dash_string, $style['phase']);
tcpdf.php:			$s .= $this->linestyleDash.' ';
tcpdf.php:			$s .= $this->setDrawColorArray($style['color'], true).' ';
tcpdf.php:		if (!$ret AND ($this->state == 2)) {
tcpdf.php:			$this->_out($s);
tcpdf.php:	 * @since 2.1.000 (2008-01-08)
tcpdf.php:		if ($this->state == 2) {
tcpdf.php:			$this->_out(sprintf('%F %F m', ($x * $this->k), (($this->h - $y) * $this->k)));
tcpdf.php:	 * @since 2.1.000 (2008-01-08)
tcpdf.php:		if ($this->state == 2) {
tcpdf.php:			$this->_out(sprintf('%F %F l', ($x * $this->k), (($this->h - $y) * $this->k)));
tcpdf.php:	 * Append a rectangle to the current path as a complete subpath, with lower-left corner (x, y) and dimensions widthand height in user space.
tcpdf.php:	 * @param float $x Abscissa of upper-left corner.
tcpdf.php:	 * @param float $y Ordinate of upper-left corner.
tcpdf.php:	 * @since 2.1.000 (2008-01-08)
tcpdf.php:		if ($this->state == 2) {
tcpdf.php:			$this->_out(sprintf('%F %F %F %F re %s', ($x * $this->k), (($this->h - $y) * $this->k), ($w * $this->k), (-$h * $this->k), $op));
tcpdf.php:	 * @since 2.1.000 (2008-01-08)
tcpdf.php:		if ($this->state == 2) {
tcpdf.php:			$this->_out(sprintf('%F %F %F %F %F %F c', ($x1 * $this->k), (($this->h - $y1) * $this->k), ($x2 * $this->k), (($this->h - $y2) * $this->k), ($x3 * $this->k), (($this->h - $y3) * $this->k)));
tcpdf.php:	 * @since 4.9.019 (2010-04-26)
tcpdf.php:		if ($this->state == 2) {
tcpdf.php:			$this->_out(sprintf('%F %F %F %F v', ($x2 * $this->k), (($this->h - $y2) * $this->k), ($x3 * $this->k), (($this->h - $y3) * $this->k)));
tcpdf.php:	 * @since 2.1.000 (2008-01-08)
tcpdf.php:		if ($this->state == 2) {
tcpdf.php:			$this->_out(sprintf('%F %F %F %F y', ($x1 * $this->k), (($this->h - $y1) * $this->k), ($x3 * $this->k), (($this->h - $y3) * $this->k)));
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:			$this->setLineStyle($style);
tcpdf.php:		$this->_outPoint($x1, $y1);
tcpdf.php:		$this->_outLine($x2, $y2);
tcpdf.php:		$this->_out('S');
tcpdf.php:	 * @param float $x Abscissa of upper-left corner.
tcpdf.php:	 * @param float $y Ordinate of upper-left corner.
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:			$this->setFillColorArray($fill_color);
tcpdf.php:				$this->setLineStyle($border_style['all']);
tcpdf.php:			$this->_outRect($x, $y, $w, $h, $op);
tcpdf.php:				$this->Line($x, $y, $x, $y + $h, $border_style['L']);
tcpdf.php:				$this->Line($x, $y, $x + $w, $y, $border_style['T']);
tcpdf.php:				$this->Line($x + $w, $y, $x + $w, $y + $h, $border_style['R']);
tcpdf.php:				$this->Line($x, $y + $h, $x + $w, $y + $h, $border_style['B']);
tcpdf.php:	 * @since 2.1.000 (2008-01-08)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:			$this->setFillColorArray($fill_color);
tcpdf.php:			$this->setLineStyle($line_style);
tcpdf.php:		$this->_outPoint($x0, $y0);
tcpdf.php:		$this->_outCurve($x1, $y1, $x2, $y2, $x3, $y3);
tcpdf.php:		$this->_out($op);
tcpdf.php:	 * Draws a poly-Bezier curve.
tcpdf.php:	 * @since 3.0008 (2008-05-12)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:			$this->setFillColorArray($fill_color);
tcpdf.php:			$this->setLineStyle($line_style);
tcpdf.php:		$this->_outPoint($x0, $y0);
tcpdf.php:			$this->_outCurve($x1, $y1, $x2, $y2, $x3, $y3);
tcpdf.php:		$this->_out($op);
tcpdf.php:	 * @param float $angle Angle oriented (anti-clockwise). Default value: 0.
tcpdf.php:	 * @since 2.1.000 (2008-01-08)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:			$this->setFillColorArray($fill_color);
tcpdf.php:			$this->setLineStyle($line_style);
tcpdf.php:		$this->_outellipticalarc($x0, $y0, $rx, $ry, $angle, $astart, $afinish, false, $nc, true, true, false);
tcpdf.php:		$this->_out($op);
tcpdf.php:	 * @param float $xang Angle between the X-axis and the major axis of the ellipse. Default value: 0.
tcpdf.php:	 * @param boolean $ccw if true draws in counter-clockwise.
tcpdf.php:	 * @since 4.9.019 (2010-04-26)
tcpdf.php:		$k = $this->k;
tcpdf.php:			$this->_outPoint($xc, $yc);
tcpdf.php:			$as -= (2 * M_PI);
tcpdf.php:			$af -= (2 * M_PI);
tcpdf.php:		$total_angle = ($af - $as);
tcpdf.php:		$y0 = ($this->h - $yc);
tcpdf.php:		$alpha = sin($arcang) * ((sqrt(4 + (3 * pow(tan(($arcang) / 2), 2))) - 1) / 3);
tcpdf.php:		$px1 = $x0 + ($rx * $cos_xang * $cos_ang) - ($ry * $sin_xang * $sin_ang);
tcpdf.php:		$qx1 = ($alpha * ((-$rx * $cos_xang * $sin_ang) - ($ry * $sin_xang * $cos_ang)));
tcpdf.php:		$qy1 = ($alpha * ((-$rx * $sin_xang * $sin_ang) + ($ry * $cos_xang * $cos_ang)));
tcpdf.php:			$this->_outLine($px1, $this->h - $py1);
tcpdf.php:			$this->_outPoint($px1, $this->h - $py1);
tcpdf.php:			$px2 = $x0 + ($rx * $cos_xang * $cos_ang) - ($ry * $sin_xang * $sin_ang);
tcpdf.php:			$qx2 = ($alpha * ((-$rx * $cos_xang * $sin_ang) - ($ry * $sin_xang * $cos_ang)));
tcpdf.php:			$qy2 = ($alpha * ((-$rx * $sin_xang * $sin_ang) + ($ry * $cos_xang * $cos_ang)));
tcpdf.php:			$cy1 = ($this->h - ($py1 + $qy1));
tcpdf.php:			$cx2 = ($px2 - $qx2);
tcpdf.php:			$cy2 = ($this->h - ($py2 - $qy2));
tcpdf.php:			$cy3 = ($this->h - $py2);
tcpdf.php:			$this->_outCurve($cx1, $cy1, $cx2, $cy2, $cx3, $cy3);
tcpdf.php:			$this->_outLine($xc, $yc);
tcpdf.php:	 * @since 2.1.000 (2008-01-08)
tcpdf.php:		$this->Ellipse($x0, $y0, $r, $r, 0, $angstr, $angend, $style, $line_style, $fill_color, $nc);
tcpdf.php:	 * @param array $p Points 0 to ($np - 1). Array with values (x0, y0, x1, y1,..., x(np-1), y(np - 1))
tcpdf.php:	 *	 <li>0 to ($np - 1): Line style of each line. Array like for SetLineStyle().</li>
tcpdf.php:	 * @since 4.8.003 (2009-09-15)
tcpdf.php:		$this->Polygon($p, $style, $line_style, $fill_color, false);
tcpdf.php:	 * @param array $p Points 0 to ($np - 1). Array with values (x0, y0, x1, y1,..., x(np-1), y(np - 1))
tcpdf.php:	 *	 <li>0 to ($np - 1): Line style of each line. Array like for SetLineStyle().</li>
tcpdf.php:	 * @since 2.1.000 (2008-01-08)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:			$this->setFillColorArray($fill_color);
tcpdf.php:				$this->setLineStyle($line_style['all']);
tcpdf.php:					$this->_outPoint($p[0], $p[1]);
tcpdf.php:						$this->_outLine($p[$i], $p[$i + 1]);
tcpdf.php:					$this->_out($op);
tcpdf.php:				$this->_outPoint($p[0], $p[1]);
tcpdf.php:					$line_num = ($i / 2) - 1;
tcpdf.php:								$this->_out('S');
tcpdf.php:								$this->setLineStyle($line_style[$line_num]);
tcpdf.php:								$this->_outPoint($p[$i - 2], $p[$i - 1]);
tcpdf.php:								$this->_outLine($p[$i], $p[$i + 1]);
tcpdf.php:								$this->_out('S');
tcpdf.php:								$this->_outPoint($p[$i], $p[$i + 1]);
tcpdf.php:								$this->_outLine($p[$i], $p[$i + 1]);
tcpdf.php:						$this->_outLine($p[$i], $p[$i + 1]);
tcpdf.php:				$this->_out($op);
tcpdf.php:			$this->_outPoint($p[0], $p[1]);
tcpdf.php:				$this->_outLine($p[$i], $p[$i + 1]);
tcpdf.php:			$this->_out($op);
tcpdf.php:	 * @param float $angle Angle oriented (anti-clockwise). Default value: 0.
tcpdf.php:	 *	 <li>0 to ($ns - 1): Line style of each side. Array like for SetLineStyle().</li>
tcpdf.php:	 *	 <li>CNZ: Clipping mode (using the even-odd rule to determine which regions lie inside the clipping path).</li>
tcpdf.php:	 * @since 2.1.000 (2008-01-08)
tcpdf.php:			$this->Circle($x0, $y0, $r, 0, 360, $circle_style, $circle_outLine_style, $circle_fill_color);
tcpdf.php:		$this->Polygon($p, $style, $line_style, $fill_color);
tcpdf.php:	 * @param float $angle Angle oriented (anti-clockwise). Default value: 0.
tcpdf.php:	 *	 <li>0 to (n - 1): Line style of each side. Array like for SetLineStyle().</li>
tcpdf.php:	 *	 <li>CNZ: Clipping mode (using the even-odd rule to determine which regions lie inside the clipping path).</li>
tcpdf.php:	 * @since 2.1.000 (2008-01-08)
tcpdf.php:			$this->Circle($x0, $y0, $r, 0, 360, $circle_style, $circle_outLine_style, $circle_fill_color);
tcpdf.php:		$this->Polygon($p, $style, $line_style, $fill_color);
tcpdf.php:	 * @param float $x Abscissa of upper-left corner.
tcpdf.php:	 * @param float $y Ordinate of upper-left corner.
tcpdf.php:	 * @param string $round_corner Draws rounded corner or not. String with a 0 (not rounded i-corner) or 1 (rounded i-corner) in i-position. Positions are, in order and begin to 0: top right, bottom right, bottom left and top left. Default value: all rounded corner ("1111").
tcpdf.php:	 * @since 2.1.000 (2008-01-08)
tcpdf.php:		$this->RoundedRectXY($x, $y, $w, $h, $r, $r, $round_corner, $style, $border_style, $fill_color);
tcpdf.php:	 * @param float $x Abscissa of upper-left corner.
tcpdf.php:	 * @param float $y Ordinate of upper-left corner.
tcpdf.php:	 * @param float $rx the x-axis radius of the ellipse used to round off the corners of the rectangle.
tcpdf.php:	 * @param float $ry the y-axis radius of the ellipse used to round off the corners of the rectangle.
tcpdf.php:	 * @param string $round_corner Draws rounded corner or not. String with a 0 (not rounded i-corner) or 1 (rounded i-corner) in i-position. Positions are, in order and begin to 0: top right, bottom right, bottom left and top left. Default value: all rounded corner ("1111").
tcpdf.php:	 * @since 4.9.019 (2010-04-22)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:			$this->Rect($x, $y, $w, $h, $style, $border_style, $fill_color);
tcpdf.php:			$this->setFillColorArray($fill_color);
tcpdf.php:			$this->setLineStyle($border_style);
tcpdf.php:		$MyArc = 4 / 3 * (sqrt(2) - 1);
tcpdf.php:		$this->_outPoint($x + $rx, $y);
tcpdf.php:		$xc = $x + $w - $rx;
tcpdf.php:		$this->_outLine($xc, $y);
tcpdf.php:			$this->_outCurve($xc + ($rx * $MyArc), $yc - $ry, $xc + $rx, $yc - ($ry * $MyArc), $xc + $rx, $yc);
tcpdf.php:			$this->_outLine($x + $w, $y);
tcpdf.php:		$xc = $x + $w - $rx;
tcpdf.php:		$yc = $y + $h - $ry;
tcpdf.php:		$this->_outLine($x + $w, $yc);
tcpdf.php:			$this->_outCurve($xc + $rx, $yc + ($ry * $MyArc), $xc + ($rx * $MyArc), $yc + $ry, $xc, $yc + $ry);
tcpdf.php:			$this->_outLine($x + $w, $y + $h);
tcpdf.php:		$yc = $y + $h - $ry;
tcpdf.php:		$this->_outLine($xc, $y + $h);
tcpdf.php:			$this->_outCurve($xc - ($rx * $MyArc), $yc + $ry, $xc - $rx, $yc + ($ry * $MyArc), $xc - $rx, $yc);
tcpdf.php:			$this->_outLine($x, $y + $h);
tcpdf.php:		$this->_outLine($x, $yc);
tcpdf.php:			$this->_outCurve($xc - $rx, $yc - ($ry * $MyArc), $xc - ($rx * $MyArc), $yc - $ry, $xc, $yc - $ry);
tcpdf.php:			$this->_outLine($x, $y);
tcpdf.php:			$this->_outLine($x + $rx, $y);
tcpdf.php:		$this->_out($op);
tcpdf.php:	 * @since 4.6.018 (2009-07-10)
tcpdf.php:		$dir_angle = atan2(($y0 - $y1), ($x0 - $x1));
tcpdf.php:			$sx1 = $x1 + (($arm_size - $this->LineWidth) * cos($dir_angle));
tcpdf.php:			$sy1 = $y1 + (($arm_size - $this->LineWidth) * sin($dir_angle));
tcpdf.php:		$this->Line($x0, $y0, $sx1, $sy1);
tcpdf.php:		$x2R = $x1 + ($arm_size * cos($dir_angle - $arm_angle));
tcpdf.php:		$y2R = $y1 + ($arm_size * sin($dir_angle - $arm_angle));
tcpdf.php:		$this->Polygon(array($x2L, $y2L, $x1, $y1, $x2R, $y2R), $mode, $style, array());
tcpdf.php:	// END GRAPHIC FUNCTIONS SECTION -----------------------
tcpdf.php:	 * @param float $y Y position in user units of the destiantion on the selected page (default = -1 = current position; 0 = page start;).
tcpdf.php:	 * @param float $x X position in user units of the destiantion on the selected page (default = -1 = current position;).
tcpdf.php:	 * @since 5.9.097 (2011-06-23)
tcpdf.php:	public function setDestination($name, $y=-1, $page='', $x=-1) {
tcpdf.php:		if ($y == -1) {
tcpdf.php:			$y = $this->GetY();
tcpdf.php:		} elseif ($y > $this->h) {
tcpdf.php:			$y = $this->h;
tcpdf.php:		if ($x == -1) {
tcpdf.php:			$x = $this->GetX();
tcpdf.php:		} elseif ($x > $this->w) {
tcpdf.php:			$x = $this->w;
tcpdf.php:			$page = $this->PageNo();
tcpdf.php:		$this->dests[$name] = array('x' => $x, 'y' => $y, 'p' => $page, 'f' => $fixed);
tcpdf.php:	 * @since 5.9.097 (2011-06-23)
tcpdf.php:		return $this->dests;
tcpdf.php:	 * @since 5.9.098 (2011-06-23)
tcpdf.php:		if (empty($this->dests)) {
tcpdf.php:		$this->n_dests = $this->_newobj();
tcpdf.php:		foreach($this->dests as $name => $o) {
tcpdf.php:			$out .= ' /'.$name.' '.sprintf('[%u 0 R /XYZ %F %F null]', $this->page_obj_id[($o['p'])], ($o['x'] * $this->k), ($this->pagedim[$o['p']]['h'] - ($o['y'] * $this->k)));
tcpdf.php:		$this->_out($out);
tcpdf.php:	 * Adds a bookmark - alias for Bookmark().
tcpdf.php:	 * @param float $y Y position in user units of the bookmark on the selected page (default = -1 = current position; 0 = page start;).
tcpdf.php:	 * @param float $x X position in user units of the bookmark on the selected page (default = -1 = current position;).
tcpdf.php:	public function setBookmark($txt, $level=0, $y=-1, $page='', $style='', $color=array(0,0,0), $x=-1, $link='') {
tcpdf.php:		$this->Bookmark($txt, $level, $y, $page, $style, $color, $x, $link);
tcpdf.php:	 * @param float $y Y position in user units of the bookmark on the selected page (default = -1 = current position; 0 = page start;).
tcpdf.php:	 * @param float $x X position in user units of the bookmark on the selected page (default = -1 = current position;).
tcpdf.php:	 * @since 2.1.002 (2008-02-12)
tcpdf.php:	public function Bookmark($txt, $level=0, $y=-1, $page='', $style='', $color=array(0,0,0), $x=-1, $link='') {
tcpdf.php:		if (isset($this->outlines[0])) {
tcpdf.php:			$lastoutline = end($this->outlines);
tcpdf.php:		if ($y == -1) {
tcpdf.php:			$y = $this->GetY();
tcpdf.php:		} elseif ($y > $this->h) {
tcpdf.php:			$y = $this->h;
tcpdf.php:		if ($x == -1) {
tcpdf.php:			$x = $this->GetX();
tcpdf.php:		} elseif ($x > $this->w) {
tcpdf.php:			$x = $this->w;
tcpdf.php:			$page = $this->PageNo();
tcpdf.php:		$this->outlines[] = array('t' => $txt, 'l' => $level, 'x' => $x, 'y' => $y, 'p' => $page, 'f' => $fixed, 's' => strtoupper($style), 'c' => $color, 'u' => $link);
tcpdf.php:	 * @since 5.9.119 (2011-09-19)
tcpdf.php:		foreach ($this->outlines as $key => $row) {
tcpdf.php:		array_multisort($outline_p, SORT_NUMERIC, SORT_ASC, $outline_k, SORT_NUMERIC, SORT_ASC, $this->outlines);
tcpdf.php:	 * @since 2.1.002 (2008-02-12)
tcpdf.php:		$nb = count($this->outlines);
tcpdf.php:		$this->sortBookmarks();
tcpdf.php:		foreach ($this->outlines as $i => $o) {
tcpdf.php:				$parent = $lru[($o['l'] - 1)];
tcpdf.php:				$this->outlines[$i]['parent'] = $parent;
tcpdf.php:				$this->outlines[$parent]['last'] = $i;
tcpdf.php:					$this->outlines[$parent]['first'] = $i;
tcpdf.php:				$this->outlines[$i]['parent'] = $nb;
tcpdf.php:				$this->outlines[$prev]['next'] = $i;
tcpdf.php:				$this->outlines[$i]['prev'] = $prev;
tcpdf.php:		$n = $this->n + 1;
tcpdf.php:		foreach ($this->outlines as $i => $o) {
tcpdf.php:			$oid = $this->_newobj();
tcpdf.php:			$title = $this->stringTrim($title);
tcpdf.php:			$out = '<</Title '.$this->_textstring($title, $oid);
tcpdf.php:						$out .= ' /A <</S /GoToE /D [0 /Fit] /NewWindow true /T << /R /C /P '.($o['p'] - 1).' /A '.$this->embeddedfiles[$filename]['a'].' >> >>';
tcpdf.php:						$out .= ' /A <</S /JavaScript /JS '.$this->_textstring($jsa, $oid).'>>';
tcpdf.php:						$out .= ' /A <</S /URI /URI '.$this->_datastring($this->unhtmlentities($o['u']), $oid).'>>';
tcpdf.php:				} elseif (isset($this->links[$o['u']])) {
tcpdf.php:					$l = $this->links[$o['u']];
tcpdf.php:					if (isset($this->page_obj_id[($l['p'])])) {
tcpdf.php:						$out .= sprintf(' /Dest [%u 0 R /XYZ 0 %F null]', $this->page_obj_id[($l['p'])], ($this->pagedim[$l['p']]['h'] - ($l['y'] * $this->k)));
tcpdf.php:			} elseif (isset($this->page_obj_id[($o['p'])])) {
tcpdf.php:				$out .= ' '.sprintf('/Dest [%u 0 R /XYZ %F %F null]', $this->page_obj_id[($o['p'])], ($o['x'] * $this->k), ($this->pagedim[$o['p']]['h'] - ($o['y'] * $this->k)));
tcpdf.php:			$this->_out($out);
tcpdf.php:		$this->OutlineRoot = $this->_newobj();
tcpdf.php:		$this->_out('<< /Type /Outlines /First '.$n.' 0 R /Last '.($n + $lru[0]).' 0 R >>'."\n".'endobj');
tcpdf.php:	// --- JAVASCRIPT ------------------------------------------------------
tcpdf.php:	 * @since 2.1.002 (2008-02-12)
tcpdf.php:		$this->javascript .= $script;
tcpdf.php:	 * @since 4.8.000 (2009-09-07)
tcpdf.php:		if ($this->pdfa_mode) {
tcpdf.php:		++$this->n;
tcpdf.php:		$this->js_objects[$this->n] = array('n' => $this->n, 'js' => $script, 'onload' => $onload);
tcpdf.php:		return $this->n;
tcpdf.php:	 * @since 2.1.002 (2008-02-12)
tcpdf.php:		if ($this->pdfa_mode OR (empty($this->javascript) AND empty($this->js_objects))) {
tcpdf.php:		if (strpos($this->javascript, 'this.addField') > 0) {
tcpdf.php:			if (!$this->ur['enabled']) {
tcpdf.php:				//$this->setUserRights();
tcpdf.php:			$this->javascript = $jsa."\n".$this->javascript."\n".$jsb;
tcpdf.php:		$this->n_js = '<< /Names [';
tcpdf.php:		if (!empty($this->javascript)) {
tcpdf.php:			$this->n_js .= ' (EmbeddedJS) '.($this->n + 1).' 0 R';
tcpdf.php:		if (!empty($this->js_objects)) {
tcpdf.php:			foreach ($this->js_objects as $key => $val) {
tcpdf.php:					$this->n_js .= ' (JS'.$key.') '.$key.' 0 R';
tcpdf.php:		$this->n_js .= ' ] >>';
tcpdf.php:		if (!empty($this->javascript)) {
tcpdf.php:			$obj_id = $this->_newobj();
tcpdf.php:			$out .= ' /JS '.$this->_textstring($this->javascript, $obj_id);
tcpdf.php:			$this->_out($out);
tcpdf.php:		if (!empty($this->js_objects)) {
tcpdf.php:			foreach ($this->js_objects as $key => $val) {
tcpdf.php:				$out = $this->_getobj($key)."\n".' << /S /JavaScript /JS '.$this->_textstring($val['js'], $key).' >>'."\n".'endobj';
tcpdf.php:				$this->_out($out);
tcpdf.php:	 * @since 2.1.002 (2008-02-12)
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$x = $x - $w;
tcpdf.php:		$this->javascript .= "if (getField('tcpdfdocsaved').value != 'saved') {";
tcpdf.php:		$k = $this->k;
tcpdf.php:		$this->javascript .= sprintf("f".$name."=this.addField('%s','%s',%u,[%F,%F,%F,%F]);", $name, $type, $this->PageNo()-1, $x*$k, ($this->h-$y)*$k+1, ($x+$w)*$k, ($this->h-$y-$h)*$k+1)."\n";
tcpdf.php:		$this->javascript .= 'f'.$name.'.textSize='.$this->FontSizePt.";\n";
tcpdf.php:			if (strcmp(substr($key, -5), 'Color') == 0) {
tcpdf.php:			$this->javascript .= 'f'.$name.'.'.$key.'='.$val.";\n";
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$this->x -= $w;
tcpdf.php:			$this->x += $w;
tcpdf.php:		$this->javascript .= '}';
tcpdf.php:	// --- FORM FIELDS -----------------------------------------------------
tcpdf.php:	 * @since 4.8.000 (2009-09-06)
tcpdf.php:		$this->default_form_prop = $prop;
tcpdf.php:	 * @since 4.8.000 (2009-09-06)
tcpdf.php:		return $this->default_form_prop;
tcpdf.php:	 * @param float|null $x Abscissa of the upper-left corner of the rectangle
tcpdf.php:	 * @param float|null $y Ordinate of the upper-left corner of the rectangle
tcpdf.php:	 * @since 4.8.000 (2009-09-07)
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:		// check page for no-write regions and adapt page margins if necessary
tcpdf.php:		list($x, $y) = $this->checkPageRegions($h, $x, $y);
tcpdf.php:			$this->_addfield('text', $name, $x, $y, $w, $h, $prop);
tcpdf.php:		$prop = array_merge($this->getFormDefaultProp(), $prop);
tcpdf.php:		$popt = TCPDF_STATIC::getAnnotOptFromJSProp($prop, $this->spot_colors, $this->rtl);
tcpdf.php:		$this->annotation_fonts[$this->CurrentFont['fontkey']] = $this->CurrentFont['i'];
tcpdf.php:		$fontstyle = sprintf('/F%d %F Tf %s', $this->CurrentFont['i'], $this->FontSizePt, $this->TextColor);
tcpdf.php:		$tmpid = $this->startTemplate($w, $h, false);
tcpdf.php:		$this->MultiCell($w, $h, $text, 0, $align, false, 0, 0, 0, true, 0, false, true, 0, 'T', false);
tcpdf.php:		$this->endTemplate();
tcpdf.php:		--$this->n;
tcpdf.php:		$popt['ap']['n'] .= $this->xobjects[$tmpid]['outdata'];
tcpdf.php:		unset($this->xobjects[$tmpid]);
tcpdf.php:		$this->Annotation($x, $y, $w, $h, $name, $opt, 0);
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$this->x -= $w;
tcpdf.php:			$this->x += $w;
tcpdf.php:	 * @param float|null $x Abscissa of the upper-left corner of the rectangle
tcpdf.php:	 * @param float|null $y Ordinate of the upper-left corner of the rectangle
tcpdf.php:	 * @since 4.8.000 (2009-09-07)
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:		// check page for no-write regions and adapt page margins if necessary
tcpdf.php:		list($x, $y) = $this->checkPageRegions($w, $x, $y);
tcpdf.php:			$this->_addfield('radiobutton', $name, $x, $y, $w, $w, $prop);
tcpdf.php:		if ($this->pdfa_mode) {
tcpdf.php:		$this->AddFont($font);
tcpdf.php:		$tmpfont = $this->getFontBuffer($font);
tcpdf.php:		if (!isset($this->radiobutton_groups[$this->page])) {
tcpdf.php:			$this->radiobutton_groups[$this->page] = array();
tcpdf.php:		if (!isset($this->radiobutton_groups[$this->page][$name])) {
tcpdf.php:			$this->radiobutton_groups[$this->page][$name] = array();
tcpdf.php:			++$this->n;
tcpdf.php:			$this->radiobutton_groups[$this->page][$name]['n'] = $this->n;
tcpdf.php:			$this->radio_groups[] = $this->n;
tcpdf.php:		$kid = ($this->n + 1);
tcpdf.php:		$this->radiobutton_groups[$this->page][$name][] = array('kid' => $kid, 'def' => $defval);
tcpdf.php:		$prop = array_merge($this->getFormDefaultProp(), $prop);
tcpdf.php:		$popt = TCPDF_STATIC::getAnnotOptFromJSProp($prop, $this->spot_colors, $this->rtl);
tcpdf.php:		$this->annotation_fonts[$tmpfont['fontkey']] = $tmpfont['i'];
tcpdf.php:		$fontstyle = sprintf('/F%d %F Tf %s', $tmpfont['i'], $this->FontSizePt, $this->TextColor);
tcpdf.php:		$fx = ((($w - $this->getAbsFontMeasure($tmpfont['cw'][108])) / 2) * $this->k);
tcpdf.php:		$fy = (($w - ((($tmpfont['desc']['Ascent'] - $tmpfont['desc']['Descent']) * $this->FontSizePt / 1000) / $this->k)) * $this->k);
tcpdf.php:		$popt['ap']['n'][$onvalue] = sprintf('q %s BT /F%d %F Tf %F %F Td ('.chr(108).') Tj ET Q', $this->TextColor, $tmpfont['i'], $this->FontSizePt, $fx, $fy);
tcpdf.php:		$popt['ap']['n']['Off'] = sprintf('q %s BT /F%d %F Tf %F %F Td ('.chr(109).') Tj ET Q', $this->TextColor, $tmpfont['i'], $this->FontSizePt, $fx, $fy);
tcpdf.php:		if (!isset($this->radiobutton_groups[$this->page][$name]['#readonly#'])) {
tcpdf.php:			$this->radiobutton_groups[$this->page][$name]['#readonly#'] = false;
tcpdf.php:		$this->radiobutton_groups[$this->page][$name]['#readonly#'] |= ($opt['f'] & 64);
tcpdf.php:		$this->Annotation($x, $y, $w, $w, $name, $opt, 0);
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$this->x -= $w;
tcpdf.php:			$this->x += $w;
tcpdf.php:	 * Creates a List-box field
tcpdf.php:	 * @param float|null $x Abscissa of the upper-left corner of the rectangle
tcpdf.php:	 * @param float|null $y Ordinate of the upper-left corner of the rectangle
tcpdf.php:	 * @since 4.8.000 (2009-09-07)
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:		// check page for no-write regions and adapt page margins if necessary
tcpdf.php:		list($x, $y) = $this->checkPageRegions($h, $x, $y);
tcpdf.php:			$this->_addfield('listbox', $name, $x, $y, $w, $h, $prop);
tcpdf.php:			$this->javascript .= 'f'.$name.'.setItems('.substr($s, 1).');'."\n";
tcpdf.php:		$prop = array_merge($this->getFormDefaultProp(), $prop);
tcpdf.php:		$popt = TCPDF_STATIC::getAnnotOptFromJSProp($prop, $this->spot_colors, $this->rtl);
tcpdf.php:		$this->annotation_fonts[$this->CurrentFont['fontkey']] = $this->CurrentFont['i'];
tcpdf.php:		$fontstyle = sprintf('/F%d %F Tf %s', $this->CurrentFont['i'], $this->FontSizePt, $this->TextColor);
tcpdf.php:		$tmpid = $this->startTemplate($w, $h, false);
tcpdf.php:		$this->MultiCell($w, $h, $text, 0, '', false, 0, 0, 0, true, 0, false, true, 0, 'T', false);
tcpdf.php:		$this->endTemplate();
tcpdf.php:		--$this->n;
tcpdf.php:		$popt['ap']['n'] .= $this->xobjects[$tmpid]['outdata'];
tcpdf.php:		unset($this->xobjects[$tmpid]);
tcpdf.php:		$this->Annotation($x, $y, $w, $h, $name, $opt, 0);
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$this->x -= $w;
tcpdf.php:			$this->x += $w;
tcpdf.php:	 * Creates a Combo-box field
tcpdf.php:	 * @param float|null $x Abscissa of the upper-left corner of the rectangle
tcpdf.php:	 * @param float|null $y Ordinate of the upper-left corner of the rectangle
tcpdf.php:	 * @since 4.8.000 (2009-09-07)
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:		// check page for no-write regions and adapt page margins if necessary
tcpdf.php:		list($x, $y) = $this->checkPageRegions($h, $x, $y);
tcpdf.php:			$this->_addfield('combobox', $name, $x, $y, $w, $h, $prop);
tcpdf.php:			$this->javascript .= 'f'.$name.'.setItems('.substr($s, 1).');'."\n";
tcpdf.php:		$prop = array_merge($this->getFormDefaultProp(), $prop);
tcpdf.php:		$popt = TCPDF_STATIC::getAnnotOptFromJSProp($prop, $this->spot_colors, $this->rtl);
tcpdf.php:		$this->annotation_fonts[$this->CurrentFont['fontkey']] = $this->CurrentFont['i'];
tcpdf.php:		$fontstyle = sprintf('/F%d %F Tf %s', $this->CurrentFont['i'], $this->FontSizePt, $this->TextColor);
tcpdf.php:		$tmpid = $this->startTemplate($w, $h, false);
tcpdf.php:		$this->MultiCell($w, $h, $text, 0, '', false, 0, 0, 0, true, 0, false, true, 0, 'T', false);
tcpdf.php:		$this->endTemplate();
tcpdf.php:		--$this->n;
tcpdf.php:		$popt['ap']['n'] .= $this->xobjects[$tmpid]['outdata'];
tcpdf.php:		unset($this->xobjects[$tmpid]);
tcpdf.php:		$this->Annotation($x, $y, $w, $h, $name, $opt, 0);
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$this->x -= $w;
tcpdf.php:			$this->x += $w;
tcpdf.php:	 * @param float|null $x Abscissa of the upper-left corner of the rectangle
tcpdf.php:	 * @param float|null $y Ordinate of the upper-left corner of the rectangle
tcpdf.php:	 * @since 4.8.000 (2009-09-07)
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:		// check page for no-write regions and adapt page margins if necessary
tcpdf.php:		list($x, $y) = $this->checkPageRegions($w, $x, $y);
tcpdf.php:			$this->_addfield('checkbox', $name, $x, $y, $w, $w, $prop);
tcpdf.php:		$prop = array_merge($this->getFormDefaultProp(), $prop);
tcpdf.php:		$popt = TCPDF_STATIC::getAnnotOptFromJSProp($prop, $this->spot_colors, $this->rtl);
tcpdf.php:		if ($this->pdfa_mode) {
tcpdf.php:		$this->AddFont($font);
tcpdf.php:		$tmpfont = $this->getFontBuffer($font);
tcpdf.php:		$this->annotation_fonts[$tmpfont['fontkey']] = $tmpfont['i'];
tcpdf.php:		$fontstyle = sprintf('/F%d %F Tf %s', $tmpfont['i'], $this->FontSizePt, $this->TextColor);
tcpdf.php:		$fx = ((($w - $this->getAbsFontMeasure($tmpfont['cw'][110])) / 2) * $this->k);
tcpdf.php:		$fy = (($w - ((($tmpfont['desc']['Ascent'] - $tmpfont['desc']['Descent']) * $this->FontSizePt / 1000) / $this->k)) * $this->k);
tcpdf.php:		$popt['ap']['n']['Yes'] = sprintf('q %s BT /F%d %F Tf %F %F Td ('.chr(110).') Tj ET Q', $this->TextColor, $tmpfont['i'], $this->FontSizePt, $fx, $fy);
tcpdf.php:		$popt['ap']['n']['Off'] = sprintf('q %s BT /F%d %F Tf %F %F Td ('.chr(111).') Tj ET Q', $this->TextColor, $tmpfont['i'], $this->FontSizePt, $fx, $fy);
tcpdf.php:		$this->Annotation($x, $y, $w, $w, $name, $opt, 0);
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$this->x -= $w;
tcpdf.php:			$this->x += $w;
tcpdf.php:	 * @param float|null $x Abscissa of the upper-left corner of the rectangle
tcpdf.php:	 * @param float|null $y Ordinate of the upper-left corner of the rectangle
tcpdf.php:	 * @since 4.8.000 (2009-09-07)
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:		// check page for no-write regions and adapt page margins if necessary
tcpdf.php:		list($x, $y) = $this->checkPageRegions($h, $x, $y);
tcpdf.php:			$this->_addfield('button', $name, $this->x, $this->y, $w, $h, $prop);
tcpdf.php:			$this->javascript .= 'f'.$name.".buttonSetCaption('".addslashes($caption)."');\n";
tcpdf.php:			$this->javascript .= 'f'.$name.".setAction('MouseUp','".addslashes($action)."');\n";
tcpdf.php:			$this->javascript .= 'f'.$name.".highlight='push';\n";
tcpdf.php:			$this->javascript .= 'f'.$name.".print=false;\n";
tcpdf.php:		$prop = array_merge($this->getFormDefaultProp(), $prop);
tcpdf.php:		$popt = TCPDF_STATIC::getAnnotOptFromJSProp($prop, $this->spot_colors, $this->rtl);
tcpdf.php:		$this->annotation_fonts[$this->CurrentFont['fontkey']] = $this->CurrentFont['i'];
tcpdf.php:		$fontstyle = sprintf('/F%d %F Tf %s', $this->CurrentFont['i'], $this->FontSizePt, $this->TextColor);
tcpdf.php:		$tmpid = $this->startTemplate($w, $h, false);
tcpdf.php:		$bw = (2 / $this->k); // border width
tcpdf.php:		$this->setFillColor(204);
tcpdf.php:		$this->Cell($w, $h, $caption, $border, 0, 'C', true, '', 1, false, 'T', 'M');
tcpdf.php:		$this->endTemplate();
tcpdf.php:		--$this->n;
tcpdf.php:		$popt['ap']['n'] .= $this->xobjects[$tmpid]['outdata'];
tcpdf.php:		unset($this->xobjects[$tmpid]);
tcpdf.php:		$ann_obj_id = ($this->n + 1);
tcpdf.php:			$ann_obj_id = ($this->n + 2);
tcpdf.php:		$popt['mk']['ca'] = $this->_textstring($caption, $ann_obj_id);
tcpdf.php:		$popt['mk']['rc'] = $this->_textstring($caption, $ann_obj_id);
tcpdf.php:		$popt['mk']['ac'] = $this->_textstring($caption, $ann_obj_id);
tcpdf.php:						$opt['aa'] .= ' /F '.$this->_datastring($val, $ann_obj_id);
tcpdf.php:							$opt['aa'] .= ' '.$this->_textstring($field, $ann_obj_id);
tcpdf.php:				$js_obj_id = $this->addJavascriptObject($action);
tcpdf.php:		$this->Annotation($x, $y, $w, $h, $name, $opt, 0);
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$this->x -= $w;
tcpdf.php:			$this->x += $w;
tcpdf.php:	// --- END FORMS FIELDS ------------------------------------------------
tcpdf.php:	 * @since 4.6.008 (2009-05-07)
tcpdf.php:		if ((!$this->sign) OR (!isset($this->signature_data['cert_type']))) {
tcpdf.php:		$sigobjid = ($this->sig_obj_id + 1);
tcpdf.php:		$out = $this->_getobj($sigobjid)."\n";
tcpdf.php:		$out .= ' /Contents<'.str_repeat('0', $this->signature_max_length).'>';
tcpdf.php:		if (empty($this->signature_data['approval']) OR ($this->signature_data['approval'] != 'A')) {
tcpdf.php:			if ($this->signature_data['cert_type'] > 0) {
tcpdf.php:				$out .= ' /P '.$this->signature_data['cert_type'];
tcpdf.php:				if (!TCPDF_STATIC::empty_string($this->ur['document'])) {
tcpdf.php:					$out .= ' /Document['.$this->ur['document'].']';
tcpdf.php:				if (!TCPDF_STATIC::empty_string($this->ur['form'])) {
tcpdf.php:					$out .= ' /Form['.$this->ur['form'].']';
tcpdf.php:				if (!TCPDF_STATIC::empty_string($this->ur['signature'])) {
tcpdf.php:					$out .= ' /Signature['.$this->ur['signature'].']';
tcpdf.php:				if (!TCPDF_STATIC::empty_string($this->ur['annots'])) {
tcpdf.php:					$out .= ' /Annots['.$this->ur['annots'].']';
tcpdf.php:				if (!TCPDF_STATIC::empty_string($this->ur['ef'])) {
tcpdf.php:					$out .= ' /EF['.$this->ur['ef'].']';
tcpdf.php:				if (!TCPDF_STATIC::empty_string($this->ur['formex'])) {
tcpdf.php:					$out .= ' /FormEX['.$this->ur['formex'].']';
tcpdf.php:		if (isset($this->signature_data['info']['Name']) AND !TCPDF_STATIC::empty_string($this->signature_data['info']['Name'])) {
tcpdf.php:			$out .= ' /Name '.$this->_textstring($this->signature_data['info']['Name'], $sigobjid);
tcpdf.php:		if (isset($this->signature_data['info']['Location']) AND !TCPDF_STATIC::empty_string($this->signature_data['info']['Location'])) {
tcpdf.php:			$out .= ' /Location '.$this->_textstring($this->signature_data['info']['Location'], $sigobjid);
tcpdf.php:		if (isset($this->signature_data['info']['Reason']) AND !TCPDF_STATIC::empty_string($this->signature_data['info']['Reason'])) {
tcpdf.php:			$out .= ' /Reason '.$this->_textstring($this->signature_data['info']['Reason'], $sigobjid);
tcpdf.php:		if (isset($this->signature_data['info']['ContactInfo']) AND !TCPDF_STATIC::empty_string($this->signature_data['info']['ContactInfo'])) {
tcpdf.php:			$out .= ' /ContactInfo '.$this->_textstring($this->signature_data['info']['ContactInfo'], $sigobjid);
tcpdf.php:		$out .= ' /M '.$this->_datestring($sigobjid, $this->doc_modification_timestamp);
tcpdf.php:		$this->_out($out);
tcpdf.php:	 * @param string $document Names specifying additional document-wide usage rights for the document. The only defined value is "/FullSave", which permits a user to save the document along with modified form and/or annotation data.
tcpdf.php:	 * @param string $annots Names specifying additional annotation-related usage rights for the document. Valid names in PDF 1.5 and later are /Create/Delete/Modify/Copy/Import/Export, which permit the user to perform the named operation on annotations.
tcpdf.php:	 * @param string $form Names specifying additional form-field-related usage rights for the document. Valid names are: /Add/Delete/FillIn/Import/Export/SubmitStandalone/SpawnTemplate
tcpdf.php:	 * @param string $signature Names specifying additional signature-related usage rights for the document. The only defined value is /Modify, which permits a user to apply a digital signature to an existing signature form field or clear a signed signature form field.
tcpdf.php:	 Names specifying additional embedded-files-related usage rights for the document.
tcpdf.php:	 * @param string $formex Names specifying additional form-field-related usage rights. The only valid name is BarcodePlaintext, which permits text form field data to be encoded as a plaintext two-dimensional barcode.
tcpdf.php:	 * @since 2.9.000 (2008-03-26)
tcpdf.php:		$this->ur['enabled'] = $enable;
tcpdf.php:		$this->ur['document'] = $document;
tcpdf.php:		$this->ur['annots'] = $annots;
tcpdf.php:		$this->ur['form'] = $form;
tcpdf.php:		$this->ur['signature'] = $signature;
tcpdf.php:		$this->ur['ef'] = $ef;
tcpdf.php:		$this->ur['formex'] = $formex;
tcpdf.php:		if (!$this->sign) {
tcpdf.php:			$this->setSignature('', '', '', '', 0, array());
tcpdf.php:	 * To create self-signed signature: openssl req -x509 -nodes -days 365000 -newkey rsa:1024 -keyout tcpdf.crt -out tcpdf.crt
tcpdf.php:	 * To export crt to p12: openssl pkcs12 -export -in tcpdf.crt -out tcpdf.p12
tcpdf.php:	 * To convert pfx certificate to pem: openssl pkcs12 -in tcpdf.pfx -out tcpdf.crt -nodes
tcpdf.php:	 * @since 4.6.005 (2009-04-24)
tcpdf.php:		// to create self-signed signature: openssl req -x509 -nodes -days 365000 -newkey rsa:1024 -keyout tcpdf.crt -out tcpdf.crt
tcpdf.php:		// to export crt to p12: openssl pkcs12 -export -in tcpdf.crt -out tcpdf.p12
tcpdf.php:		//     OpenSSL> pkcs12 -in <cert.pfx> -out <cert.crt> -nodes
tcpdf.php:		$this->sign = true;
tcpdf.php:		++$this->n;
tcpdf.php:		$this->sig_obj_id = $this->n; // signature widget
tcpdf.php:		++$this->n; // signature object ($this->sig_obj_id + 1)
tcpdf.php:		$this->signature_data = array();
tcpdf.php:			$this->Error('Please provide a certificate file and password!');
tcpdf.php:		$this->signature_data['signcert'] = $signing_cert;
tcpdf.php:		$this->signature_data['privkey'] = $private_key;
tcpdf.php:		$this->signature_data['password'] = $private_key_password;
tcpdf.php:		$this->signature_data['extracerts'] = $extracerts;
tcpdf.php:		$this->signature_data['cert_type'] = $cert_type;
tcpdf.php:		$this->signature_data['info'] = $info;
tcpdf.php:		$this->signature_data['approval'] = $approval;
tcpdf.php:	 * @param float $x Abscissa of the upper-left corner.
tcpdf.php:	 * @param float $y Ordinate of the upper-left corner.
tcpdf.php:	 * @since 5.3.011 (2010-06-17)
tcpdf.php:	public function setSignatureAppearance($x=0, $y=0, $w=0, $h=0, $page=-1, $name='') {
tcpdf.php:		$this->signature_appearance = $this->getSignatureAppearanceArray($x, $y, $w, $h, $page, $name);
tcpdf.php:	 * @param float $x Abscissa of the upper-left corner.
tcpdf.php:	 * @param float $y Ordinate of the upper-left corner.
tcpdf.php:	 * @since 5.9.101 (2011-07-06)
tcpdf.php:	public function addEmptySignatureAppearance($x=0, $y=0, $w=0, $h=0, $page=-1, $name='') {
tcpdf.php:		++$this->n;
tcpdf.php:		$this->empty_signature_appearance[] = array('objid' => $this->n) + $this->getSignatureAppearanceArray($x, $y, $w, $h, $page, $name);
tcpdf.php:	 * @param float $x Abscissa of the upper-left corner.
tcpdf.php:	 * @param float $y Ordinate of the upper-left corner.
tcpdf.php:	 * @since 5.9.101 (2011-07-06)
tcpdf.php:	protected function getSignatureAppearanceArray($x=0, $y=0, $w=0, $h=0, $page=-1, $name='') {
tcpdf.php:		if (($page < 1) OR ($page > $this->numpages)) {
tcpdf.php:			$sigapp['page'] = $this->page;
tcpdf.php:		$a = $x * $this->k;
tcpdf.php:		$b = $this->pagedim[($sigapp['page'])]['h'] - (($y + $h) * $this->k);
tcpdf.php:		$c = $w * $this->k;
tcpdf.php:		$d = $h * $this->k;
tcpdf.php:	 * @since 6.0.090 (2014-06-16)
tcpdf.php:		$this->tsa_data = array();
tcpdf.php:			$this->Error('Please enable cURL PHP extension!');
tcpdf.php:			$this->Error('Please specify the host of Time Stamping Authority (TSA)!');
tcpdf.php:		$this->tsa_data['tsa_host'] = $tsa_host;
tcpdf.php:			$this->tsa_data['tsa_auth'] = $tsa_username;
tcpdf.php:			$this->tsa_data['tsa_username'] = $tsa_username;
tcpdf.php:		$this->tsa_data['tsa_password'] = $tsa_password;
tcpdf.php:		$this->tsa_data['tsa_cert'] = $tsa_cert;
tcpdf.php:		$this->tsa_timestamp = true;
tcpdf.php:	 * @since 6.0.090 (2014-06-16)
tcpdf.php:		if (!$this->tsa_timestamp) {
tcpdf.php:	 * @since 3.0.000 (2008-03-27)
tcpdf.php:			$page = $this->page + 1;
tcpdf.php:		$this->newpagegroup[$page] = sizeof($this->newpagegroup) + 1;
tcpdf.php:	 * @since 5.9.093 (2011-06-16)
tcpdf.php:		$this->starting_page_number = max(0, intval($num));
tcpdf.php:	 * @since 5.9.099 (2011-06-27)
tcpdf.php:		$rep = str_repeat(' ', $this->GetNumChars($ref));
tcpdf.php:		$wrep = $this->GetStringWidth($rep);
tcpdf.php:			$wdiff = max(1, ($this->GetStringWidth($ref) / $wrep));
tcpdf.php:		if ($this->isUnicodeFont()) {
tcpdf.php:	 * @since 4.0.018 (2008-08-08)
tcpdf.php:		if ($this->isUnicodeFont()) {
tcpdf.php:	 * @since 4.5.000 (2009-01-02)
tcpdf.php:		if ($this->isUnicodeFont()) {
tcpdf.php:	 * @since 3.0.000 (2008-03-27)
tcpdf.php:		if ($this->isUnicodeFont()) {
tcpdf.php:	 * @since 4.5.000 (2009-01-02)
tcpdf.php:		if ($this->isUnicodeFont()) {
tcpdf.php:	 * @since 3.0.000 (2008-03-27)
tcpdf.php:		return $this->pagegroups[$this->currpagegroup];
tcpdf.php:	 * @since 4.3.003 (2008-11-18)
tcpdf.php:		return TCPDF_STATIC::formatPageNumber($this->getGroupPageNo());
tcpdf.php:	 * @since 4.2.005 (2008-11-06)
tcpdf.php:		return TCPDF_STATIC::formatPageNumber($this->PageNo());
tcpdf.php:	 * @since 3.0.000 (2008-03-27)
tcpdf.php:		if (empty($this->pdflayers)) {
tcpdf.php:		foreach ($this->pdflayers as $key => $layer) {
tcpdf.php:			 $this->pdflayers[$key]['objid'] = $this->_newobj();
tcpdf.php:			 $out .= ' /Name '.$this->_textstring($layer['name'], $this->pdflayers[$key]['objid']);
tcpdf.php:			 $this->_out($out);
tcpdf.php:	 * @param string $name Layer name (only a-z letters and numbers). Leave empty for automatic name.
tcpdf.php:	 * @since 5.9.102 (2011-07-13)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:		$layer = sprintf('LYR%03d', (count($this->pdflayers) + 1));
tcpdf.php:			$name = preg_replace('/[^a-zA-Z0-9_\-]/', '', $name);
tcpdf.php:		$this->pdflayers[] = array('layer' => $layer, 'name' => $name, 'print' => $print, 'view' => $view, 'lock' => $lock);
tcpdf.php:		$this->openMarkedContent = true;
tcpdf.php:		$this->_out('/OC /'.$layer.' BDC');
tcpdf.php:	 * @since 5.9.102 (2011-07-13)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:		if ($this->openMarkedContent) {
tcpdf.php:			// close existing open marked-content layer
tcpdf.php:			$this->_out('EMC');
tcpdf.php:			$this->openMarkedContent = false;
tcpdf.php:	 * @since 3.0.000 (2008-03-27)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:		$this->endLayer();
tcpdf.php:				$this->startLayer('Print', true, false);
tcpdf.php:				$this->startLayer('View', false, true);
tcpdf.php:				$this->_out('');
tcpdf.php:				$this->Error('Incorrect visibility: '.$v);
tcpdf.php:	 * @since 3.0.000 (2008-03-27)
tcpdf.php:		if ($this->pdfa_mode || $this->pdfa_version >= 2) {
tcpdf.php:		foreach ($this->extgstates as $i => $ext) {
tcpdf.php:				if ($this->inxobj) {
tcpdf.php:					$this->xobjects[$this->xobjid]['extgstates'][$i] = $ext;
tcpdf.php:		$n = (count($this->extgstates) + 1);
tcpdf.php:		$this->extgstates[$n] = array('parms' => $parms);
tcpdf.php:		if ($this->inxobj) {
tcpdf.php:			$this->xobjects[$this->xobjid]['extgstates'][$n] = $this->extgstates[$n];
tcpdf.php:	 * @since 3.0.000 (2008-03-27)
tcpdf.php:		if (($this->pdfa_mode && $this->pdfa_version < 2) OR ($this->state != 2)) {
tcpdf.php:			// transparency is not allowed in PDF/A-1 mode
tcpdf.php:		$this->_out(sprintf('/GS%d gs', $gs));
tcpdf.php:	 * @since 3.0.000 (2008-03-27)
tcpdf.php:		foreach ($this->extgstates as $i => $ext) {
tcpdf.php:			$this->extgstates[$i]['n'] = $this->_newobj();
tcpdf.php:			$this->_out($out);
tcpdf.php:	 * Set overprint mode for stroking (OP) and non-stroking (op) painting operations.
tcpdf.php:	 * (Check the "Entries in a Graphics State Parameter Dictionary" on PDF 32000-1:2008).
tcpdf.php:	 * @since 5.9.152 (2012-03-23)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:		$this->overprint = array('OP' => $stroking, 'op' => $nonstroking, 'OPM' => $mode);
tcpdf.php:		$gs = $this->addExtGState($this->overprint);
tcpdf.php:		$this->setExtGState($gs);
tcpdf.php:	 * (Check the "Entries in a Graphics State Parameter Dictionary" on PDF 32000-1:2008).
tcpdf.php:	 * @since 5.9.152 (2012-03-23)
tcpdf.php:		return $this->overprint;
tcpdf.php:	 * Set alpha for stroking (CA) and non-stroking (ca) operations.
tcpdf.php:	 * @param float|null $nonstroking Alpha value for non-stroking operations: real value from 0 (transparent) to 1 (opaque).
tcpdf.php:	 * @since 3.0.000 (2008-03-27)
tcpdf.php:		if ($this->pdfa_mode && $this->pdfa_version < 2) {
tcpdf.php:			// transparency is not allowed in PDF/A-1 mode
tcpdf.php:		$this->alpha = array('CA' => $stroking, 'ca' => $nonstroking, 'BM' => '/'.$bm, 'AIS' => $ais);
tcpdf.php:		$gs = $this->addExtGState($this->alpha);
tcpdf.php:		$this->setExtGState($gs);
tcpdf.php:	 * (Check the "Entries in a Graphics State Parameter Dictionary" on PDF 32000-1:2008).
tcpdf.php:	 * @since 5.9.152 (2012-03-23)
tcpdf.php:		return $this->alpha;
tcpdf.php:	 * Set the default JPEG compression quality (1-100)
tcpdf.php:	 * @since 3.0.000 (2008-03-27)
tcpdf.php:		$this->jpeg_quality = intval($quality);
tcpdf.php:	 * @since 3.0.014 (2008-06-04)
tcpdf.php:		$this->default_table_columns = intval($cols);
tcpdf.php:	 * @since 3.0.014 (2008-06-04)
tcpdf.php:		$this->cell_height_ratio = $h;
tcpdf.php:	 * @since 4.0.012 (2008-07-24)
tcpdf.php:		return $this->cell_height_ratio;
tcpdf.php:	 * @since 3.1.000 (2008-06-09)
tcpdf.php:		if ($this->pdfa_mode && $this->pdfa_version == 1 ) {
tcpdf.php:			// PDF/A-1 mode
tcpdf.php:			$this->PDFVersion = '1.4';
tcpdf.php:		} elseif ($this->pdfa_mode && $this->pdfa_version >= 2 ) {
tcpdf.php:            // PDF/A-2 mode
tcpdf.php:            $this->PDFVersion = '1.7';
tcpdf.php:			$this->PDFVersion = $version;
tcpdf.php:	 * <ul><li>HideToolbar boolean (Optional) A flag specifying whether to hide the viewer application's tool bars when the document is active. Default value: false.</li><li>HideMenubar boolean (Optional) A flag specifying whether to hide the viewer application's menu bar when the document is active. Default value: false.</li><li>HideWindowUI boolean (Optional) A flag specifying whether to hide user interface elements in the document's window (such as scroll bars and navigation controls), leaving only the document's contents displayed. Default value: false.</li><li>FitWindow boolean (Optional) A flag specifying whether to resize the document's window to fit the size of the first displayed page. Default value: false.</li><li>CenterWindow boolean (Optional) A flag specifying whether to position the document's window in the center of the screen. Default value: false.</li><li>DisplayDocTitle boolean (Optional; PDF 1.4) A flag specifying whether the window's title bar should display the document title taken from the Title entry of the document information dictionary (see Section 10.2.1, "Document Information Dictionary"). If false, the title bar should instead display the name of the PDF file containing the document. Default value: false.</li><li>NonFullScreenPageMode name (Optional) The document's page mode, specifying how to display the document on exiting full-screen mode:<ul><li>UseNone Neither document outline nor thumbnail images visible</li><li>UseOutlines Document outline visible</li><li>UseThumbs Thumbnail images visible</li><li>UseOC Optional content group panel visible</li></ul>This entry is meaningful only if the value of the PageMode entry in the catalog dictionary (see Section 3.6.1, "Document Catalog") is FullScreen; it is ignored otherwise. Default value: UseNone.</li><li>ViewArea name (Optional; PDF 1.4) The name of the page boundary representing the area of a page to be displayed when viewing the document on the screen. Valid values are (see Section 10.10.1, "Page Boundaries").:<ul><li>MediaBox</li><li>CropBox (default)</li><li>BleedBox</li><li>TrimBox</li><li>ArtBox</li></ul></li><li>ViewClip name (Optional; PDF 1.4) The name of the page boundary to which the contents of a page are to be clipped when viewing the document on the screen. Valid values are (see Section 10.10.1, "Page Boundaries").:<ul><li>MediaBox</li><li>CropBox (default)</li><li>BleedBox</li><li>TrimBox</li><li>ArtBox</li></ul></li><li>PrintArea name (Optional; PDF 1.4) The name of the page boundary representing the area of a page to be rendered when printing the document. Valid values are (see Section 10.10.1, "Page Boundaries").:<ul><li>MediaBox</li><li>CropBox (default)</li><li>BleedBox</li><li>TrimBox</li><li>ArtBox</li></ul></li><li>PrintClip name (Optional; PDF 1.4) The name of the page boundary to which the contents of a page are to be clipped when printing the document. Valid values are (see Section 10.10.1, "Page Boundaries").:<ul><li>MediaBox</li><li>CropBox (default)</li><li>BleedBox</li><li>TrimBox</li><li>ArtBox</li></ul></li><li>PrintScaling name (Optional; PDF 1.6) The page scaling option to be selected when a print dialog is displayed for this document. Valid values are: <ul><li>None, which indicates that the print dialog should reflect no page scaling</li><li>AppDefault (default), which indicates that applications should use the current print scaling</li></ul></li><li>Duplex name (Optional; PDF 1.7) The paper handling option to use when printing the file from the print dialog. The following values are valid:<ul><li>Simplex - Print single-sided</li><li>DuplexFlipShortEdge - Duplex and flip on the short edge of the sheet</li><li>DuplexFlipLongEdge - Duplex and flip on the long edge of the sheet</li></ul>Default value: none</li><li>PickTrayByPDFSize boolean (Optional; PDF 1.7) A flag specifying whether the PDF page size is used to select the input paper tray. This setting influences only the preset values used to populate the print dialog presented by a PDF viewer application. If PickTrayByPDFSize is true, the check box in the print dialog associated with input paper tray is checked. Note: This setting has no effect on Mac OS systems, which do not provide the ability to pick the input tray by size.</li><li>PrintPageRange array (Optional; PDF 1.7) The page numbers used to initialize the print dialog box when the file is printed. The first page of the PDF file is denoted by 1. Each pair consists of the first and last pages in the sub-range. An odd number of integers causes this entry to be ignored. Negative numbers cause the entire array to be ignored. Default value: as defined by PDF viewer application</li><li>NumCopies integer (Optional; PDF 1.7) The number of copies to be printed when the print dialog is opened for this file. Supported values are the integers 2 through 5. Values outside this range are ignored. Default value: as defined by PDF viewer application, but typically 1</li></ul>
tcpdf.php:	 * @since 3.1.000 (2008-06-09)
tcpdf.php:		$this->viewer_preferences = $preferences;
tcpdf.php:	 * @since 4.9.000 (2010-03-26)
tcpdf.php:			foreach ($this->spot_colors as $spot_color_name => $v) {
tcpdf.php:				case 'K': { // KEY - BLACK (CMYK)
tcpdf.php:					$col_b = TCPDF_COLORS::getSpotColor($col, $this->spot_colors);
tcpdf.php:					$this->LinearGradient($xb, $yb, $wb, $hb, $col_a, $col_b, $coords);
tcpdf.php:					$this->setFillColorArray($col_b);
tcpdf.php:					$this->Rect($xb, $yb, $wb, $hb, 'F', array());
tcpdf.php:	 * @param string $type type of crop mark, one symbol per type separated by comma: T = TOP, F = BOTTOM, L = LEFT, R = RIGHT, TL = A = TOP-LEFT, TR = B = TOP-RIGHT, BL = C = BOTTOM-LEFT, BR = D = BOTTOM-RIGHT.
tcpdf.php:	 * @since 4.9.000 (2010-03-26)
tcpdf.php:		$this->setLineStyle(array('width' => (0.5 / $this->k), 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => $color));
tcpdf.php:		$type = preg_replace('/[^A-Z\-\,]*/', '', $type);
tcpdf.php:		$type = str_replace('-', ',', $type);
tcpdf.php:					$y1 = ($y - $h);
tcpdf.php:					$y2 = ($y - $dh);
tcpdf.php:					$x1 = ($x - $w);
tcpdf.php:					$x2 = ($x - $dw);
tcpdf.php:			$this->Line($x1, $y1, $x2, $y2);
tcpdf.php:	 * @since 4.9.000 (2010-03-26)
tcpdf.php:		$line_style = array('width' => max((0.5 / $this->k),($r / 30)), 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => $cola);
tcpdf.php:		$this->setFillColorArray($cola);
tcpdf.php:		$this->PieSector($x, $y, $r, 90, 180, 'F');
tcpdf.php:		$this->PieSector($x, $y, $r, 270, 360, 'F');
tcpdf.php:		$this->Circle($x, $y, $r, 0, 360, 'C', $line_style, array(), 8);
tcpdf.php:			$this->setFillColorArray($colb);
tcpdf.php:			$this->PieSector($x, $y, $ri, 90, 180, 'F');
tcpdf.php:			$this->PieSector($x, $y, $ri, 270, 360, 'F');
tcpdf.php:			$this->setFillColorArray($cola);
tcpdf.php:			$this->PieSector($x, $y, $ri, 0, 90, 'F');
tcpdf.php:			$this->PieSector($x, $y, $ri, 180, 270, 'F');
tcpdf.php:			$this->Circle($x, $y, $ri, 0, 360, 'C', $line_style, array(), 8);
tcpdf.php:	 * @since 6.0.038 (2013-09-30)
tcpdf.php:		$lw = max((0.5 / $this->k),($r / 8));
tcpdf.php:		$this->setFillColorArray(array(100,0,0,0));
tcpdf.php:		$this->PieSector($x, $y, $ri, 270, 360, 'F');
tcpdf.php:		$this->setFillColorArray(array(0,100,0,0));
tcpdf.php:		$this->PieSector($x, $y, $ri, 0, 90, 'F');
tcpdf.php:		$this->setFillColorArray(array(0,0,100,0));
tcpdf.php:		$this->PieSector($x, $y, $ri, 90, 180, 'F');
tcpdf.php:		// Key - black
tcpdf.php:		$this->setFillColorArray(array(0,0,0,100));
tcpdf.php:		$this->PieSector($x, $y, $ri, 180, 270, 'F');
tcpdf.php:		$this->setFillColorArray(array(100,100,100,100,'All'));
tcpdf.php:		$this->Circle($x, $y, $r, 0, 360, 'C', $line_style, array(), 8);
tcpdf.php:		$this->Line($x, ($y - $re), $x, ($y - $ri));
tcpdf.php:		$this->Line($x, ($y + $ri), $x, ($y + $re));
tcpdf.php:		$this->Line(($x - $re), $y, ($x - $ri), $y);
tcpdf.php:		$this->Line(($x + $ri), $y, ($x + $re), $y);
tcpdf.php:	 * @since 3.1.000 (2008-06-09)
tcpdf.php:		$this->Clip($x, $y, $w, $h);
tcpdf.php:		$this->Gradient(2, $coords, array(array('color' => $col1, 'offset' => 0, 'exponent' => 1), array('color' => $col2, 'offset' => 1, 'exponent' => 1)), array(), false);
tcpdf.php:	 * @since 3.1.000 (2008-06-09)
tcpdf.php:		$this->Clip($x, $y, $w, $h);
tcpdf.php:		$this->Gradient(3, $coords, array(array('color' => $col1, 'offset' => 0, 'exponent' => 1), array('color' => $col2, 'offset' => 1, 'exponent' => 1)), array(), false);
tcpdf.php:	 * @param array $coords <ul><li>for one patch mesh: array(float x1, float y1, .... float x12, float y12): 12 pairs of coordinates (normally from 0 to 1) which specify the Bezier control points that define the patch. First pair is the lower left edge point, next is its right control point (control point 2). Then the other points are defined in the order: control point 1, edge point, control point 2 going counter-clockwise around the patch. Last (x12, y12) is the first edge point's left control point (control point 1).</li><li>for two or more patch meshes: array[number of patches]: arrays with the following keys for each patch: f: where to put that patch (0 = first patch, 1, 2, 3 = right, top and left of precedent patch - I didn't figure this out completely - just try and error ;-) points: 12 pairs of coordinates of the Bezier control points as above for the first patch, 8 pairs of coordinates for the following patches, ignoring the coordinates already defined by the precedent patch (I also didn't figure out the order of these - also: try and see what's happening) colors: must be 4 colors for the first patch, 2 colors for the following patches</li></ul>
tcpdf.php:	 * @since 3.1.000 (2008-06-09)
tcpdf.php:		if (($this->pdfa_mode && $this->pdfa_version < 2) OR ($this->state != 2)) {
tcpdf.php:		$this->Clip($x, $y, $w, $h);
tcpdf.php:		$n = count($this->gradients) + 1;
tcpdf.php:		$this->gradients[$n] = array();
tcpdf.php:		$this->gradients[$n]['type'] = 6; //coons patch mesh
tcpdf.php:		$this->gradients[$n]['coords'] = array();
tcpdf.php:		$this->gradients[$n]['antialias'] = $antialias;
tcpdf.php:		$this->gradients[$n]['colors'] = array();
tcpdf.php:		$this->gradients[$n]['transparency'] = false;
tcpdf.php:			//simple array -> convert to multi patch array
tcpdf.php:		$this->gradients[$n]['stream'] = '';
tcpdf.php:			$this->gradients[$n]['stream'] .= chr($patch_array[$i]['f']); //start with the edge flag as 8 bit
tcpdf.php:				$patch_array[$i]['points'][$j] = (($patch_array[$i]['points'][$j] - $coords_min) / ($coords_max - $coords_min)) * $bpcd;
tcpdf.php:				$this->gradients[$n]['stream'] .= chr((int) floor($patch_array[$i]['points'][$j] / 256));
tcpdf.php:				$this->gradients[$n]['stream'] .= chr((int) floor(intval($patch_array[$i]['points'][$j]) % 256));
tcpdf.php:				$this->gradients[$n]['stream'] .= chr($patch_array[$i]['colors'][$j]['r']);
tcpdf.php:				$this->gradients[$n]['stream'] .= chr($patch_array[$i]['colors'][$j]['g']);
tcpdf.php:				$this->gradients[$n]['stream'] .= chr($patch_array[$i]['colors'][$j]['b']);
tcpdf.php:		$this->_out('/Sh'.$n.' sh');
tcpdf.php:		$this->_outRestoreGraphicsState();
tcpdf.php:		if ($this->inxobj) {
tcpdf.php:			$this->xobjects[$this->xobjid]['gradients'][$n] = $this->gradients[$n];
tcpdf.php:	 * @since 3.1.000 (2008-06-09)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$x = $this->w - $x - $w;
tcpdf.php:		$s .= sprintf(' %F %F %F %F re W n', $x*$this->k, ($this->h-$y)*$this->k, $w*$this->k, -$h*$this->k);
tcpdf.php:		$s .= sprintf(' %F 0 0 %F %F %F cm', $w*$this->k, $h*$this->k, $x*$this->k, ($this->h-($y+$h))*$this->k);
tcpdf.php:		$this->_out($s);
tcpdf.php:	 * @param int $type type of gradient (1 Function-based shading; 2 Axial shading; 3 Radial shading; 4 Free-form Gouraud-shaded triangle mesh; 5 Lattice-form Gouraud-shaded triangle mesh; 6 Coons patch mesh; 7 Tensor-product patch mesh). (Not all types are currently supported)
tcpdf.php:	 * @since 3.1.000 (2008-06-09)
tcpdf.php:		if (($this->pdfa_mode && $this->pdfa_version < 2) OR ($this->state != 2)) {
tcpdf.php:		$n = count($this->gradients) + 1;
tcpdf.php:		$this->gradients[$n] = array();
tcpdf.php:		$this->gradients[$n]['type'] = $type;
tcpdf.php:		$this->gradients[$n]['coords'] = $coords;
tcpdf.php:		$this->gradients[$n]['antialias'] = $antialias;
tcpdf.php:		$this->gradients[$n]['colors'] = array();
tcpdf.php:		$this->gradients[$n]['transparency'] = false;
tcpdf.php:				$this->gradients[$n]['colspace'] = 'DeviceCMYK';
tcpdf.php:					$this->gradients[$n]['background'] = sprintf('%F %F %F %F', $bcolor[0]/100, $bcolor[1]/100, $bcolor[2]/100, $bcolor[3]/100);
tcpdf.php:				$this->gradients[$n]['colspace'] = 'DeviceRGB';
tcpdf.php:					$this->gradients[$n]['background'] = sprintf('%F %F %F', $bcolor[0]/255, $bcolor[1]/255, $bcolor[2]/255);
tcpdf.php:				$this->gradients[$n]['colspace'] = 'DeviceGray';
tcpdf.php:					$this->gradients[$n]['background'] = sprintf('%F', $bcolor[0]/255);
tcpdf.php:		$last_stop_id = $num_stops - 1;
tcpdf.php:			$this->gradients[$n]['colors'][$key] = array();
tcpdf.php:				$this->gradients[$n]['colors'][$key]['offset'] = $stop['offset'];
tcpdf.php:					$this->gradients[$n]['colors'][$key]['offset'] = 0;
tcpdf.php:					$this->gradients[$n]['colors'][$key]['offset'] = 1;
tcpdf.php:					$offsetstep = (1 - $this->gradients[$n]['colors'][($key - 1)]['offset']) / ($num_stops - $key);
tcpdf.php:					$this->gradients[$n]['colors'][$key]['offset'] = $this->gradients[$n]['colors'][($key - 1)]['offset'] + $offsetstep;
tcpdf.php:				$this->gradients[$n]['colors'][$key]['opacity'] = $stop['opacity'];
tcpdf.php:				if ((!($this->pdfa_mode && $this->pdfa_version < 2)) AND ($stop['opacity'] < 1)) {
tcpdf.php:					$this->gradients[$n]['transparency'] = true;
tcpdf.php:				$this->gradients[$n]['colors'][$key]['opacity'] = 1;
tcpdf.php:				$this->gradients[$n]['colors'][$key]['exponent'] = $stop['exponent'];
tcpdf.php:				$this->gradients[$n]['colors'][$key]['exponent'] = 1;
tcpdf.php:					$this->gradients[$n]['colors'][$key]['color'] = sprintf('%F %F %F %F', $color[0]/100, $color[1]/100, $color[2]/100, $color[3]/100);
tcpdf.php:					$this->gradients[$n]['colors'][$key]['color'] = sprintf('%F %F %F', $color[0]/255, $color[1]/255, $color[2]/255);
tcpdf.php:					$this->gradients[$n]['colors'][$key]['color'] = sprintf('%F', $color[0]/255);
tcpdf.php:		if ($this->gradients[$n]['transparency']) {
tcpdf.php:			$this->_out('/TGS'.$n.' gs');
tcpdf.php:		$this->_out('/Sh'.$n.' sh');
tcpdf.php:		$this->_outRestoreGraphicsState();
tcpdf.php:		if ($this->inxobj) {
tcpdf.php:			$this->xobjects[$this->xobjid]['gradients'][$n] = $this->gradients[$n];
tcpdf.php:	 * @since 3.1.000 (2008-06-09)
tcpdf.php:		if ($this->pdfa_mode && $this->pdfa_version < 2) {
tcpdf.php:		$idt = count($this->gradients); //index for transparency gradients
tcpdf.php:		foreach ($this->gradients as $id => $grad) {
tcpdf.php:				$fc = $this->_newobj();
tcpdf.php:				$lastcols = $num_cols - 1;
tcpdf.php:				$this->_out($out);
tcpdf.php:					$this->_newobj();
tcpdf.php:					$out .= ' /C0 ['.$grad['colors'][($i - 1)]['color'].']';
tcpdf.php:					$this->_out($out);
tcpdf.php:					$ft = $this->_newobj();
tcpdf.php:					$this->_out($out);
tcpdf.php:						$this->_newobj();
tcpdf.php:						$out .= ' /C0 ['.$grad['colors'][($i - 1)]['opacity'].']';
tcpdf.php:						$this->_out($out);
tcpdf.php:			$this->_newobj();
tcpdf.php:				$stream = $this->_getrawstream($grad['stream']);
tcpdf.php:			$this->_out($out);
tcpdf.php:				$shading_transparency = preg_replace('/\/Function [0-9]+ /si', '/Function '.$ft.' ', $shading_transparency);
tcpdf.php:			$this->gradients[$id]['id'] = $this->n;
tcpdf.php:			$this->_newobj();
tcpdf.php:			$out .= ' /Shading '.$this->gradients[$id]['id'].' 0 R';
tcpdf.php:			$this->_out($out);
tcpdf.php:			$this->gradients[$id]['pattern'] = $this->n;
tcpdf.php:				$this->_newobj();
tcpdf.php:				$this->_out($shading_transparency);
tcpdf.php:				$this->gradients[$idgs]['id'] = $this->n;
tcpdf.php:				$this->_newobj();
tcpdf.php:				$out .= ' /Shading '.$this->gradients[$idgs]['id'].' 0 R';
tcpdf.php:				$this->_out($out);
tcpdf.php:				$this->gradients[$idgs]['pattern'] = $this->n;
tcpdf.php:				$oid = $this->_newobj();
tcpdf.php:				$this->xobjects['LX'.$oid] = array('n' => $oid);
tcpdf.php:				$stream = 'q /a0 gs /Pattern cs /p'.$idgs.' scn 0 0 '.$this->wPt.' '.$this->hPt.' re f Q';
tcpdf.php:				if ($this->compress) {
tcpdf.php:				$stream = $this->_getrawstream($stream);
tcpdf.php:				$rect = sprintf('%F %F', $this->wPt, $this->hPt);
tcpdf.php:				$out .= ' /Pattern << /p'.$idgs.' '.$this->gradients[$idgs]['pattern'].' 0 R >>';
tcpdf.php:				$this->_out($out);
tcpdf.php:				$this->_newobj();
tcpdf.php:				$out = '<< /Type /Mask /S /Luminosity /G '.($this->n - 1).' 0 R >>'."\n".'endobj';
tcpdf.php:				$this->_out($out);
tcpdf.php:				$this->_newobj();
tcpdf.php:				$out = '<< /Type /ExtGState /SMask '.($this->n - 1).' 0 R /AIS false >>'."\n".'endobj';
tcpdf.php:				$this->_out($out);
tcpdf.php:				$this->extgstates[] = array('n' => $this->n, 'name' => 'TGS'.$id);
tcpdf.php:	 * @since 3.1.000 (2008-06-09)
tcpdf.php:		$this->PieSectorXY($xc, $yc, $r, $r, $a, $b, $style, $cw, $o);
tcpdf.php:	 * @param float $rx the x-axis radius.
tcpdf.php:	 * @param float $ry the y-axis radius.
tcpdf.php:	 * @since 3.1.000 (2008-06-09)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$xc = ($this->w - $xc);
tcpdf.php:			$b = (360 - $a + $o);
tcpdf.php:			$a = (360 - $d + $o);
tcpdf.php:		$this->_outellipticalarc($xc, $yc, $rx, $ry, 0, $a, $b, true, $nc);
tcpdf.php:		$this->_out($op);
tcpdf.php:	 * Embed vector-based Adobe Illustrator (AI) or AI-compatible EPS files.
tcpdf.php:	 * @param float|null $x Abscissa of the upper-left corner.
tcpdf.php:	 * @param float|null $y Ordinate of the upper-left corner.
tcpdf.php:	 * @param string $align Indicates the alignment of the pointer next to image insertion relative to image height. The value can be:<ul><li>T: top-right for LTR or top-left for RTL</li><li>M: middle-right for LTR or middle-left for RTL</li><li>B: bottom-right for LTR or bottom-left for RTL</li><li>N: next line</li></ul>
tcpdf.php:	 * @param mixed $border Indicates if borders must be drawn around the cell. The value can be a number:<ul><li>0: no border (default)</li><li>1: frame</li></ul> or a string containing some or all of the following characters (in any order):<ul><li>L: left</li><li>T: top</li><li>R: right</li><li>B: bottom</li></ul> or an array of line styles for each border group - for example: array('LTRB' => array('width' => 2, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0, 0, 0)))
tcpdf.php:	 * @since 3.1.000 (2008-06-09)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:		if ($this->rasterize_vector_images AND ($w > 0) AND ($h > 0)) {
tcpdf.php:			return $this->Image($file, $x, $y, $w, $h, 'EPS', $link, $align, true, 300, $palign, false, false, $border, false, false, $fitonpage);
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:		// check page for no-write regions and adapt page margins if necessary
tcpdf.php:		list($x, $y) = $this->checkPageRegions($h, $x, $y);
tcpdf.php:		$k = $this->k;
tcpdf.php:            $data = $this->getCachedFileContents($file);
tcpdf.php:			$this->Error('EPS file not found: '.$file);
tcpdf.php:					$this->Error('This version of Adobe Illustrator file is not supported: '.$file);
tcpdf.php:		// strip binary bytes in front of PS-header
tcpdf.php:		$start = strpos($data, '%!PS-Adobe');
tcpdf.php:			$this->Error('No BoundingBox found in EPS/AI file: '.$file);
tcpdf.php:			$w = ($x2 - $x1) / $k;
tcpdf.php:			$h = ($y2 - $y1) / $k;
tcpdf.php:			$w = ($x2-$x1) / $k * ($h / (($y2 - $y1) / $k));
tcpdf.php:			$h = ($y2 - $y1) / $k * ($w / (($x2 - $x1) / $k));
tcpdf.php:		list($w, $h, $x, $y) = $this->fitBlock($w, $h, $x, $y, $fitonpage);
tcpdf.php:		if ($this->rasterize_vector_images) {
tcpdf.php:			return $this->Image($file, $x, $y, $w, $h, 'EPS', $link, $align, true, 300, $palign, false, false, $border, false, false, $fitonpage);
tcpdf.php:		$scale_x = $w / (($x2 - $x1) / $k);
tcpdf.php:		$scale_y = $h / (($y2 - $y1) / $k);
tcpdf.php:		$this->img_rb_y = $y + $h;
tcpdf.php:		if ($this->rtl) {
tcpdf.php:				$ximg = $this->lMargin;
tcpdf.php:				$ximg = ($this->w + $this->lMargin - $this->rMargin - $w) / 2;
tcpdf.php:				$ximg = $this->w - $this->rMargin - $w;
tcpdf.php:				$ximg = $x - $w;
tcpdf.php:			$this->img_rb_x = $ximg;
tcpdf.php:				$ximg = $this->lMargin;
tcpdf.php:				$ximg = ($this->w + $this->lMargin - $this->rMargin - $w) / 2;
tcpdf.php:				$ximg = $this->w - $this->rMargin - $w;
tcpdf.php:			$this->img_rb_x = $ximg + $w;
tcpdf.php:			$dx = $ximg * $k - $x1;
tcpdf.php:			$dy = $y * $k - $y1;
tcpdf.php:		$this->_out('q'.$this->epsmarker);
tcpdf.php:		$this->_out(sprintf('%F %F %F %F %F %F cm', 1, 0, 0, 1, $dx, $dy + ($this->hPt - (2 * $y * $k) - ($y2 - $y1))));
tcpdf.php:			$this->_out(sprintf('%F %F %F %F %F %F cm', $scale_x, 0, 0, $scale_y, $x1 * (1 - $scale_x), $y2 * (1 - $scale_y)));
tcpdf.php:		$lines = preg_split('/[\r\n]+/si', $data, -1, PREG_SPLIT_NO_EMPTY);
tcpdf.php:			if (strcasecmp('x', substr(trim($line), -1)) == 0) {
tcpdf.php:					$color_name = substr($color_name, 1, -1);
tcpdf.php:				$this->_out(''.$r.' '.$g.' '.$b.' '.($cmd=='Xa'?'rg':'RG')); //substr($line, 0, -2).'rg' -> in EPS (AI8): c m y k r g b rg!
tcpdf.php:					$this->_out($line);
tcpdf.php:						$this->_out(''.$col_c.' '.$col_m.' '.$col_y.' '.$col_k.' k');
tcpdf.php:						$this->AddSpotColor($color_name, ($col_c * 100), ($col_m * 100), ($col_y * 100), ($col_k * 100));
tcpdf.php:						$color_cmd = sprintf('/CS%d cs %F scn', $this->spot_colors[$color_name]['i'], (1 - $col_t));
tcpdf.php:						$this->_out($color_cmd);
tcpdf.php:						$this->_out(''.$col_c.' '.$col_m.' '.$col_y.' '.$col_k.' K');
tcpdf.php:						$this->AddSpotColor($color_name, ($col_c * 100), ($col_m * 100), ($col_y * 100), ($col_k * 100));
tcpdf.php:						$color_cmd = sprintf('/CS%d CS %F SCN', $this->spot_colors[$color_name]['i'], (1 - $col_t));
tcpdf.php:						$this->_out($color_cmd);
tcpdf.php:					$line[($len - 1)] = strtolower($cmd);
tcpdf.php:					$this->_out($line);
tcpdf.php:					$this->_out($cmd . '*');
tcpdf.php:							$this->_out('f*');
tcpdf.php:						$this->_out('f*');
tcpdf.php:					--$u;
tcpdf.php:		$this->_out($this->epsmarker.'Q');
tcpdf.php:			$bx = $this->x;
tcpdf.php:			$by = $this->y;
tcpdf.php:			$this->x = $ximg;
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$this->x += $w;
tcpdf.php:			$this->y = $y;
tcpdf.php:			$this->Cell($w, $h, '', $border, 0, '', 0, '', 0, true);
tcpdf.php:			$this->x = $bx;
tcpdf.php:			$this->y = $by;
tcpdf.php:			$this->Link($ximg, $y, $w, $h, $link, 0);
tcpdf.php:				$this->y = $y;
tcpdf.php:				$this->x = $this->img_rb_x;
tcpdf.php:				$this->y = $y + round($h/2);
tcpdf.php:				$this->x = $this->img_rb_x;
tcpdf.php:				$this->y = $this->img_rb_y;
tcpdf.php:				$this->x = $this->img_rb_x;
tcpdf.php:				$this->setY($this->img_rb_y);
tcpdf.php:		$this->endlinex = $this->img_rb_x;
tcpdf.php:		$this->barcode = $bc;
tcpdf.php:	 * @since 4.0.012 (2008-07-24)
tcpdf.php:		return $this->barcode;
tcpdf.php:	 * @param string $align Indicates the alignment of the pointer next to barcode insertion relative to barcode height. The value can be:<ul><li>T: top-right for LTR or top-left for RTL</li><li>M: middle-right for LTR or middle-left for RTL</li><li>B: bottom-right for LTR or bottom-left for RTL</li><li>N: next line</li></ul>
tcpdf.php:	 * @since 3.1.000 (2008-06-09)
tcpdf.php:		$gvars = $this->getGraphicVars();
tcpdf.php:		$arrcode = $barcodeobj->getBarcodeArray();
tcpdf.php:			$this->Error('Error in 1D barcode string');
tcpdf.php:			$this->setFont($style['font'], '', $fontsize);
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:		// check page for no-write regions and adapt page margins if necessary
tcpdf.php:		list($x, $y) = $this->checkPageRegions($h, $x, $y);
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$w = $x - $this->lMargin;
tcpdf.php:				$w = $this->w - $this->rMargin - $x;
tcpdf.php:		$max_xres = ($w - (2 * $hpadding)) / $arrcode['maxw'];
tcpdf.php:				$xres = (0.141 * $this->k); // default bar width = 0.4 mm
tcpdf.php:						if ($this->rtl) {
tcpdf.php:							$x -= ($wold - $w);
tcpdf.php:						if (!$this->rtl) {
tcpdf.php:							$x += ($wold - $w);
tcpdf.php:						if ($this->rtl) {
tcpdf.php:							$x -= (($wold - $w) / 2);
tcpdf.php:							$x += (($wold - $w) / 2);
tcpdf.php:		$text_height = $this->getCellHeight($fontsize / $this->k);
tcpdf.php:		$barh = $h - $text_height - (2 * $vpadding);
tcpdf.php:				$fontsize = (($h * $this->k) / (4 * $this->cell_height_ratio));
tcpdf.php:				$text_height = $this->getCellHeight($fontsize / $this->k);
tcpdf.php:				$this->setFont($style['font'], '', $fontsize);
tcpdf.php:				$vpadding = (($h - $text_height) / 4);
tcpdf.php:			$barh = $h - $text_height - (2 * $vpadding);
tcpdf.php:		list($w, $h, $x, $y) = $this->fitBlock($w, $h, $x, $y, false);
tcpdf.php:		$this->img_rb_y = $y + $h;
tcpdf.php:		if ($this->rtl) {
tcpdf.php:				$xpos = $this->lMargin;
tcpdf.php:				$xpos = ($this->w + $this->lMargin - $this->rMargin - $w) / 2;
tcpdf.php:				$xpos = $this->w - $this->rMargin - $w;
tcpdf.php:				$xpos = $x - $w;
tcpdf.php:			$this->img_rb_x = $xpos;
tcpdf.php:				$xpos = $this->lMargin;
tcpdf.php:				$xpos = ($this->w + $this->lMargin - $this->rMargin - $w) / 2;
tcpdf.php:				$xpos = $this->w - $this->rMargin - $w;
tcpdf.php:			$this->img_rb_x = $xpos + $w;
tcpdf.php:				$xpos = $xpos_rect + ($w - ($arrcode['maxw'] * $xres)) - $hpadding;
tcpdf.php:				$xpos = $xpos_rect + (($w - ($arrcode['maxw'] * $xres)) / 2);
tcpdf.php:		$tempRTL = $this->rtl;
tcpdf.php:		$this->rtl = false;
tcpdf.php:			$this->Rect($xpos_rect, $y, $w, $h, $style['border'] ? 'DF' : 'F', '', $style['bgcolor']);
tcpdf.php:			$this->Rect($xpos_rect, $y, $w, $h, 'D');
tcpdf.php:		$this->setDrawColorArray($style['fgcolor']);
tcpdf.php:		$this->setTextColorArray($style['fgcolor']);
tcpdf.php:				$this->Rect($xpos, $ypos, $bw, ($v['h'] * $barh / $arrcode['maxh']), 'F', array(), $style['fgcolor']);
tcpdf.php:			if ($this->GetStringWidth($label) > $txtwidth) {
tcpdf.php:			$this->x = $xpos_text;
tcpdf.php:			$this->y = $y + $vpadding + $barh;
tcpdf.php:			$cellpadding = $this->cell_padding;
tcpdf.php:			$this->setCellPadding(0);
tcpdf.php:			$this->Cell($txtwidth, 0, $label, 0, 0, 'C', false, '', $style['stretchtext'], false, 'T', 'T');
tcpdf.php:			$this->cell_padding = $cellpadding;
tcpdf.php:		$this->rtl = $tempRTL;
tcpdf.php:		$this->setGraphicVars($gvars);
tcpdf.php:				$this->y = $y;
tcpdf.php:				$this->x = $this->img_rb_x;
tcpdf.php:				$this->y = $y + round($h / 2);
tcpdf.php:				$this->x = $this->img_rb_x;
tcpdf.php:				$this->y = $this->img_rb_y;
tcpdf.php:				$this->x = $this->img_rb_x;
tcpdf.php:				$this->setY($this->img_rb_y);
tcpdf.php:		$this->endlinex = $this->img_rb_x;
tcpdf.php:	 * @param string $align Indicates the alignment of the pointer next to barcode insertion relative to barcode height. The value can be:<ul><li>T: top-right for LTR or top-left for RTL</li><li>M: middle-right for LTR or middle-left for RTL</li><li>B: bottom-right for LTR or bottom-left for RTL</li><li>N: next line</li></ul>
tcpdf.php:	 * @since 4.5.037 (2009-04-07)
tcpdf.php:		$gvars = $this->getGraphicVars();
tcpdf.php:		$arrcode = $barcodeobj->getBarcodeArray();
tcpdf.php:			$this->Error('Error in 2D barcode string');
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:		// check page for no-write regions and adapt page margins if necessary
tcpdf.php:		list($x, $y) = $this->checkPageRegions($h, $x, $y);
tcpdf.php:			$this->Error('Error in 2D barcode string');
tcpdf.php:			$this->Error('Error in 2D barcode string');
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$maxw = $x - $this->lMargin;
tcpdf.php:			$maxw = $this->w - $this->rMargin - $x;
tcpdf.php:		$maxh = ($this->h - $this->tMargin - $this->bMargin);
tcpdf.php:			$w = ($cols + $hpad) * ($mw / $this->k);
tcpdf.php:			$h = ($rows + $vpad) * ($mh / $this->k);
tcpdf.php:				$style['hpadding'] = ($w - $bw) / (2 * $cw);
tcpdf.php:				$style['vpadding'] = ($h - $bh) / (2 * $ch);
tcpdf.php:		list($w, $h, $x, $y) = $this->fitBlock($w, $h, $x, $y, false);
tcpdf.php:		$this->img_rb_y = $y + $h;
tcpdf.php:		if ($this->rtl) {
tcpdf.php:				$xpos = $this->lMargin;
tcpdf.php:				$xpos = ($this->w + $this->lMargin - $this->rMargin - $w) / 2;
tcpdf.php:				$xpos = $this->w - $this->rMargin - $w;
tcpdf.php:				$xpos = $x - $w;
tcpdf.php:			$this->img_rb_x = $xpos;
tcpdf.php:				$xpos = $this->lMargin;
tcpdf.php:				$xpos = ($this->w + $this->lMargin - $this->rMargin - $w) / 2;
tcpdf.php:				$xpos = $this->w - $this->rMargin - $w;
tcpdf.php:			$this->img_rb_x = $xpos + $w;
tcpdf.php:		$tempRTL = $this->rtl;
tcpdf.php:		$this->rtl = false;
tcpdf.php:			$this->Rect($xpos, $y, $w, $h, $style['border'] ? 'DF' : 'F', '', $style['bgcolor']);
tcpdf.php:			$this->Rect($xpos, $y, $w, $h, 'D');
tcpdf.php:		$this->setDrawColorArray($style['fgcolor']);
tcpdf.php:					$this->Rect($xr, $ystart, $cw, $ch, 'F', array(), $style['fgcolor']);
tcpdf.php:		$this->rtl = $tempRTL;
tcpdf.php:		$this->setGraphicVars($gvars);
tcpdf.php:				$this->y = $y;
tcpdf.php:				$this->x = $this->img_rb_x;
tcpdf.php:				$this->y = $y + round($h/2);
tcpdf.php:				$this->x = $this->img_rb_x;
tcpdf.php:				$this->y = $this->img_rb_y;
tcpdf.php:				$this->x = $this->img_rb_x;
tcpdf.php:				$this->setY($this->img_rb_y);
tcpdf.php:		$this->endlinex = $this->img_rb_x;
tcpdf.php:	 * @since 3.2.000 (2008-06-23)
tcpdf.php:			'left' => $this->lMargin,
tcpdf.php:			'right' => $this->rMargin,
tcpdf.php:			'top' => $this->tMargin,
tcpdf.php:			'bottom' => $this->bMargin,
tcpdf.php:			'header' => $this->header_margin,
tcpdf.php:			'footer' => $this->footer_margin,
tcpdf.php:			'cell' => $this->cell_padding,
tcpdf.php:			'padding_left' => $this->cell_padding['L'],
tcpdf.php:			'padding_top' => $this->cell_padding['T'],
tcpdf.php:			'padding_right' => $this->cell_padding['R'],
tcpdf.php:			'padding_bottom' => $this->cell_padding['B']
tcpdf.php:	 * @since 4.0.012 (2008-07-24)
tcpdf.php:			'left' => $this->original_lMargin,
tcpdf.php:			'right' => $this->original_rMargin
tcpdf.php:	 * @since 3.2.000 (2008-06-23)
tcpdf.php:		return $this->FontSize;
tcpdf.php:	 * @since 3.2.000 (2008-06-23)
tcpdf.php:		return $this->FontSizePt;
tcpdf.php:	 * @since 4.3.008 (2008-12-05)
tcpdf.php:		return $this->FontFamily;
tcpdf.php:	 * @since 4.3.008 (2008-12-05)
tcpdf.php:		return $this->FontStyle;
tcpdf.php:	 * @since 5.9.017 (2010-11-16)
tcpdf.php:		return TCPDF_STATIC::fixHTMLCode($html, $default_css, $tagvs, $tidy_options, $this->tagvspaces);
tcpdf.php:	 * @since 5.7.000 (2010-08-02)
tcpdf.php:			$width = (2 / $this->k);
tcpdf.php:			$width = (4 / $this->k);
tcpdf.php:			$width = (6 / $this->k);
tcpdf.php:			$width = $this->getHTMLUnitToUnits($width, 1, 'px', false);
tcpdf.php:	 * @return int sash style (return -1 in case of none or hidden border)
tcpdf.php:	 * @since 5.7.000 (2010-08-02)
tcpdf.php:				$dash = -1;
tcpdf.php:	 * @since 5.7.000 (2010-08-02)
tcpdf.php:		$border['dash'] = $this->getCSSBorderDashStyle($style);
tcpdf.php:		$border['width'] = $this->getCSSBorderWidth($width);
tcpdf.php:		$border['color'] = TCPDF_COLORS::convertHTMLColorToDec($color, $this->spot_colors);
tcpdf.php:	 * @since 5.9.000 (2010-10-04)
tcpdf.php:				return $this->cell_padding;
tcpdf.php:			$width = $this->w - $this->lMargin - $this->rMargin;
tcpdf.php:		$cell_padding['T'] = $this->getHTMLUnitToUnits($cell_padding['T'], $width, 'px', false);
tcpdf.php:		$cell_padding['R'] = $this->getHTMLUnitToUnits($cell_padding['R'], $width, 'px', false);
tcpdf.php:		$cell_padding['B'] = $this->getHTMLUnitToUnits($cell_padding['B'], $width, 'px', false);
tcpdf.php:		$cell_padding['L'] = $this->getHTMLUnitToUnits($cell_padding['L'], $width, 'px', false);
tcpdf.php:	 * @since 5.9.000 (2010-10-04)
tcpdf.php:				return $this->cell_margin;
tcpdf.php:			$width = $this->w - $this->lMargin - $this->rMargin;
tcpdf.php:		$cell_margin['T'] = $this->getHTMLUnitToUnits(str_replace('auto', '0', $cell_margin['T']), $width, 'px', false);
tcpdf.php:		$cell_margin['R'] = $this->getHTMLUnitToUnits(str_replace('auto', '0', $cell_margin['R']), $width, 'px', false);
tcpdf.php:		$cell_margin['B'] = $this->getHTMLUnitToUnits(str_replace('auto', '0', $cell_margin['B']), $width, 'px', false);
tcpdf.php:		$cell_margin['L'] = $this->getHTMLUnitToUnits(str_replace('auto', '0', $cell_margin['L']), $width, 'px', false);
tcpdf.php:	 * Get the border-spacing from CSS attribute.
tcpdf.php:	 * @param string $cssbspace border-spacing CSS properties
tcpdf.php:	 * @since 5.9.010 (2010-10-27)
tcpdf.php:			$width = $this->w - $this->lMargin - $this->rMargin;
tcpdf.php:		$border_spacing['H'] = $this->getHTMLUnitToUnits($border_spacing['H'], $width, 'px', false);
tcpdf.php:		$border_spacing['V'] = $this->getHTMLUnitToUnits($border_spacing['V'], $width, 'px', false);
tcpdf.php:	 * Returns the letter-spacing value from CSS value
tcpdf.php:	 * @param string $spacing letter-spacing value
tcpdf.php:	 * @since 5.9.000 (2010-10-02)
tcpdf.php:				$val = $this->getHTMLUnitToUnits($spacing, 0, 'px', false);
tcpdf.php:	 * @since 5.9.000 (2010-10-02)
tcpdf.php:			case 'ultra-condensed': {
tcpdf.php:			case 'extra-condensed': {
tcpdf.php:			case 'semi-condensed': {
tcpdf.php:			case 'semi-expanded': {
tcpdf.php:			case 'extra-expanded': {
tcpdf.php:			case 'ultra-expanded': {
tcpdf.php:				$val = ($parent - 10);
tcpdf.php:				$val = $this->getHTMLUnitToUnits($stretch, 100, '%', false);
tcpdf.php:			case 'xx-small': {
tcpdf.php:				$size = ($refsize - 4);
tcpdf.php:			case 'x-small': {
tcpdf.php:				$size = ($refsize - 3);
tcpdf.php:				$size = ($refsize - 2);
tcpdf.php:			case 'x-large': {
tcpdf.php:			case 'xx-large': {
tcpdf.php:				$size = ($parent_size - 3);
tcpdf.php:				$size = $this->getHTMLUnitToUnits($val, $parent_size, $defaultunit, true);
tcpdf.php:	 * @since 3.2.000 (2008-06-20)
tcpdf.php:				$css = array_merge($css, json_decode($this->unhtmlentities($matches[1][0]), true));
tcpdf.php:                            $cssdata = $this->getCachedFileContents(trim($type[1]));
tcpdf.php:		// define self-closing tags
tcpdf.php:			$html_b = substr($html, $offset, ($pos - $offset + 6));
tcpdf.php:			while (preg_match("'<xre([^\>]*)>(.*?)".$this->re_space['p']."(.*?)</pre>'".$this->re_space['m'], $html_b)) {
tcpdf.php:				$html_b = preg_replace("'<xre([^\>]*)>(.*?)".$this->re_space['p']."(.*?)</pre>'".$this->re_space['m'], "<xre\\1>\\2&nbsp;\\3</pre>", $html_b);
tcpdf.php:			$html_b = substr($html, $offset, ($pos - $offset + 11));
tcpdf.php:			$html_b = substr($html, $offset, ($pos - $offset + 9));
tcpdf.php:		$html = preg_replace('/'.$this->re_space['p'].'+<\/(td|th|li|dt|dd)>/'.$this->re_space['m'], '</\\1>', $html);
tcpdf.php:		$html = preg_replace('/'.$this->re_space['p'].'+<(ul|ol|dl|br)/'.$this->re_space['m'], '<\\1', $html);
tcpdf.php:		$html = preg_replace('/<\/(td|th)>/', '<marker style="font-size:0"/></\\1>', $html);
tcpdf.php:		$html = preg_replace('/<\/table>([\s]*)<marker style="font-size:0"\/>/', '</table>', $html);
tcpdf.php:		$html = preg_replace('/'.$this->re_space['p'].'+<img/'.$this->re_space['m'], chr(32).'<img', $html);
tcpdf.php:		$html = preg_replace('/<img([^\>]*)>/xi', '<img\\1><span><marker style="font-size:0"/></span>', $html);
tcpdf.php:		$html = preg_replace('/<li([^\>]*)>'.$this->re_space['p'].'*<img/'.$this->re_space['m'], '<li\\1><font size="1">&nbsp;</font><img', $html);
tcpdf.php:		$html = preg_replace('/'.$this->re_space['p'].'+/'.$this->re_space['m'], chr(32), $html); // replace multiple spaces with a single space
tcpdf.php:		$html = $this->stringTrim($html);
tcpdf.php:		$html = preg_replace('/^<img/', '<span style="font-size:0"><br /></span> <img', $html, 1);
tcpdf.php:		$a = preg_split($tagpattern, $html, -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);
tcpdf.php:		// possible inheritable properties are: azimuth, border-collapse, border-spacing, caption-side, color, cursor, direction, empty-cells, font, font-family, font-stretch, font-size, font-size-adjust, font-style, font-variant, font-weight, letter-spacing, line-height, list-style, list-style-image, list-style-position, list-style-type, orphans, page, page-break-inside, quotes, speak, speak-header, text-align, text-indent, text-transform, volume, white-space, widows, word-spacing
tcpdf.php:		$dom[$key]['fontname'] = $this->FontFamily;
tcpdf.php:		$dom[$key]['fontstyle'] = $this->FontStyle;
tcpdf.php:		$dom[$key]['fontsize'] = $this->FontSizePt;
tcpdf.php:		$dom[$key]['font-stretch'] = $this->font_stretching;
tcpdf.php:		$dom[$key]['letter-spacing'] = $this->font_spacing;
tcpdf.php:		$dom[$key]['stroke'] = $this->textstrokewidth;
tcpdf.php:		$dom[$key]['fill'] = (($this->textrendermode % 2) == 0);
tcpdf.php:		$dom[$key]['clip'] = ($this->textrendermode > 3);
tcpdf.php:		$dom[$key]['line-height'] = $this->cell_height_ratio;
tcpdf.php:		$dom[$key]['fgcolor'] = $this->fgcolor; // color
tcpdf.php:		$dom[$key]['strokecolor'] = $this->strokecolor;
tcpdf.php:		$dom[$key]['text-indent'] = 0;
tcpdf.php:		$dom[$key]['text-transform'] = '';
tcpdf.php:		$dom[$key]['dir'] = $this->rtl?'rtl':'ltr';
tcpdf.php:				$element = substr($element, 1, -1);
tcpdf.php:				preg_match('/[\/]?([a-zA-Z0-9]*)/', $element, $tag);
tcpdf.php:					$dom[$key]['font-stretch'] = $dom[($dom[($dom[$key]['parent'])]['parent'])]['font-stretch'];
tcpdf.php:					$dom[$key]['letter-spacing'] = $dom[($dom[($dom[$key]['parent'])]['parent'])]['letter-spacing'];
tcpdf.php:					$dom[$key]['line-height'] = $dom[($dom[($dom[$key]['parent'])]['parent'])]['line-height'];
tcpdf.php:					$dom[$key]['text-transform'] = $dom[($dom[($dom[$key]['parent'])]['parent'])]['text-transform'];
tcpdf.php:					// *** opening or self-closing html tag
tcpdf.php:					if ((substr($element, -1, 1) == '/') OR (in_array($dom[$key]['value'], $selfclosingtags))) {
tcpdf.php:						// self-closing tag
tcpdf.php:						$dom[$key]['font-stretch'] = $dom[$parentkey]['font-stretch'];
tcpdf.php:						$dom[$key]['letter-spacing'] = $dom[$parentkey]['letter-spacing'];
tcpdf.php:						$dom[$key]['line-height'] = $dom[$parentkey]['line-height'];
tcpdf.php:						$dom[$key]['text-indent'] = $dom[$parentkey]['text-indent'];
tcpdf.php:						$dom[$key]['text-transform'] = $dom[$parentkey]['text-transform'];
tcpdf.php:						// --- get some style attributes ---
tcpdf.php:						if (isset($dom[$key]['style']['font-family'])) {
tcpdf.php:							$dom[$key]['fontname'] = $this->getFontFamilyName($dom[$key]['style']['font-family']);
tcpdf.php:						// list-style-type
tcpdf.php:						if (isset($dom[$key]['style']['list-style-type'])) {
tcpdf.php:							$dom[$key]['listtype'] = trim(strtolower($dom[$key]['style']['list-style-type']));
tcpdf.php:						// text-indent
tcpdf.php:						if (isset($dom[$key]['style']['text-indent'])) {
tcpdf.php:							$dom[$key]['text-indent'] = $this->getHTMLUnitToUnits($dom[$key]['style']['text-indent']);
tcpdf.php:							if ($dom[$key]['text-indent'] == 'inherit') {
tcpdf.php:								$dom[$key]['text-indent'] = $dom[$parentkey]['text-indent'];
tcpdf.php:						// text-transform
tcpdf.php:						if (isset($dom[$key]['style']['text-transform'])) {
tcpdf.php:							$dom[$key]['text-transform'] = $dom[$key]['style']['text-transform'];
tcpdf.php:						if (isset($dom[$key]['style']['font-size'])) {
tcpdf.php:							$fsize = trim($dom[$key]['style']['font-size']);
tcpdf.php:							$dom[$key]['fontsize'] = $this->getHTMLFontUnits($fsize, $dom[0]['fontsize'], $dom[$parentkey]['fontsize'], 'pt');
tcpdf.php:						// font-stretch
tcpdf.php:						if (isset($dom[$key]['style']['font-stretch'])) {
tcpdf.php:							$dom[$key]['font-stretch'] = $this->getCSSFontStretching($dom[$key]['style']['font-stretch'], $dom[$parentkey]['font-stretch']);
tcpdf.php:						// letter-spacing
tcpdf.php:						if (isset($dom[$key]['style']['letter-spacing'])) {
tcpdf.php:							$dom[$key]['letter-spacing'] = $this->getCSSFontSpacing($dom[$key]['style']['letter-spacing'], $dom[$parentkey]['letter-spacing']);
tcpdf.php:						// line-height (internally is the cell height ratio)
tcpdf.php:						if (isset($dom[$key]['style']['line-height'])) {
tcpdf.php:							$lineheight = trim($dom[$key]['style']['line-height']);
tcpdf.php:									$dom[$key]['line-height'] = $dom[0]['line-height'];
tcpdf.php:									$dom[$key]['line-height'] = $dom[$parentkey]['line-height'];
tcpdf.php:									$dom[$key]['line-height'] = $this->getHTMLUnitToUnits($lineheight, 1, '%', true);
tcpdf.php:									if (substr($lineheight, -1) !== '%') {
tcpdf.php:											$dom[$key]['line-height'] = 1;
tcpdf.php:											$dom[$key]['line-height'] = (($dom[$key]['line-height'] - $this->cell_padding['T'] - $this->cell_padding['B']) / $dom[$key]['fontsize']);
tcpdf.php:						if (isset($dom[$key]['style']['font-weight'])) {
tcpdf.php:							if (strtolower($dom[$key]['style']['font-weight'][0]) == 'n') {
tcpdf.php:							} elseif (strtolower($dom[$key]['style']['font-weight'][0]) == 'b') {
tcpdf.php:						if (isset($dom[$key]['style']['font-style']) AND (strtolower($dom[$key]['style']['font-style'][0]) == 'i')) {
tcpdf.php:							$dom[$key]['fgcolor'] = TCPDF_COLORS::convertHTMLColorToDec($dom[$key]['style']['color'], $this->spot_colors);
tcpdf.php:							$dom[$key]['fgcolor'] = $this->htmlLinkColorArray;
tcpdf.php:						if (isset($dom[$key]['style']['background-color']) AND (!TCPDF_STATIC::empty_string($dom[$key]['style']['background-color']))) {
tcpdf.php:							$dom[$key]['bgcolor'] = TCPDF_COLORS::convertHTMLColorToDec($dom[$key]['style']['background-color'], $this->spot_colors);
tcpdf.php:						// text-decoration
tcpdf.php:						if (isset($dom[$key]['style']['text-decoration'])) {
tcpdf.php:							$decors = explode(' ', strtolower($dom[$key]['style']['text-decoration']));
tcpdf.php:										// line-through
tcpdf.php:							$dom[$key]['fontstyle'] = $this->htmlLinkFontStyle;
tcpdf.php:						if (isset($dom[$key]['style']['text-align'])) {
tcpdf.php:							$dom[$key]['align'] = strtoupper($dom[$key]['style']['text-align'][0]);
tcpdf.php:							$borderstyle = $this->getCSSBorderStyle($dom[$key]['style']['border']);
tcpdf.php:						if (isset($dom[$key]['style']['border-color'])) {
tcpdf.php:							$brd_colors = preg_split('/[\s]+/', trim($dom[$key]['style']['border-color']));
tcpdf.php:								$dom[$key]['border']['L']['color'] = TCPDF_COLORS::convertHTMLColorToDec($brd_colors[3], $this->spot_colors);
tcpdf.php:								$dom[$key]['border']['R']['color'] = TCPDF_COLORS::convertHTMLColorToDec($brd_colors[1], $this->spot_colors);
tcpdf.php:								$dom[$key]['border']['T']['color'] = TCPDF_COLORS::convertHTMLColorToDec($brd_colors[0], $this->spot_colors);
tcpdf.php:								$dom[$key]['border']['B']['color'] = TCPDF_COLORS::convertHTMLColorToDec($brd_colors[2], $this->spot_colors);
tcpdf.php:						if (isset($dom[$key]['style']['border-width'])) {
tcpdf.php:							$brd_widths = preg_split('/[\s]+/', trim($dom[$key]['style']['border-width']));
tcpdf.php:								$dom[$key]['border']['L']['width'] = $this->getCSSBorderWidth($brd_widths[3]);
tcpdf.php:								$dom[$key]['border']['R']['width'] = $this->getCSSBorderWidth($brd_widths[1]);
tcpdf.php:								$dom[$key]['border']['T']['width'] = $this->getCSSBorderWidth($brd_widths[0]);
tcpdf.php:								$dom[$key]['border']['B']['width'] = $this->getCSSBorderWidth($brd_widths[2]);
tcpdf.php:						if (isset($dom[$key]['style']['border-style'])) {
tcpdf.php:							$brd_styles = preg_split('/[\s]+/', trim($dom[$key]['style']['border-style']));
tcpdf.php:								$dom[$key]['border']['L']['dash'] = $this->getCSSBorderDashStyle($brd_styles[3]);
tcpdf.php:								$dom[$key]['border']['R']['dash'] = $this->getCSSBorderDashStyle($brd_styles[1]);
tcpdf.php:								$dom[$key]['border']['T']['dash'] = $this->getCSSBorderDashStyle($brd_styles[0]);
tcpdf.php:								$dom[$key]['border']['B']['dash'] = $this->getCSSBorderDashStyle($brd_styles[2]);
tcpdf.php:							if (isset($dom[$key]['style']['border-'.$bsv])) {
tcpdf.php:								$borderstyle = $this->getCSSBorderStyle($dom[$key]['style']['border-'.$bsv]);
tcpdf.php:							if (isset($dom[$key]['style']['border-'.$bsv.'-color'])) {
tcpdf.php:								$dom[$key]['border'][$bsk]['color'] = TCPDF_COLORS::convertHTMLColorToDec($dom[$key]['style']['border-'.$bsv.'-color'], $this->spot_colors);
tcpdf.php:							if (isset($dom[$key]['style']['border-'.$bsv.'-width'])) {
tcpdf.php:								$dom[$key]['border'][$bsk]['width'] = $this->getCSSBorderWidth($dom[$key]['style']['border-'.$bsv.'-width']);
tcpdf.php:							if (isset($dom[$key]['style']['border-'.$bsv.'-style'])) {
tcpdf.php:								$dom[$key]['border'][$bsk]['dash'] = $this->getCSSBorderDashStyle($dom[$key]['style']['border-'.$bsv.'-style']);
tcpdf.php:							$dom[$key]['padding'] = $this->getCSSPadding($dom[$key]['style']['padding']);
tcpdf.php:							$dom[$key]['padding'] = $this->cell_padding;
tcpdf.php:							if (isset($dom[$key]['style']['padding-'.$psv])) {
tcpdf.php:								$dom[$key]['padding'][$psk] = $this->getHTMLUnitToUnits($dom[$key]['style']['padding-'.$psv], 0, 'px', false);
tcpdf.php:							$dom[$key]['margin'] = $this->getCSSMargin($dom[$key]['style']['margin']);
tcpdf.php:							$dom[$key]['margin'] = $this->cell_margin;
tcpdf.php:							if (isset($dom[$key]['style']['margin-'.$psv])) {
tcpdf.php:								$dom[$key]['margin'][$psk] = $this->getHTMLUnitToUnits(str_replace('auto', '0', $dom[$key]['style']['margin-'.$psv]), 0, 'px', false);
tcpdf.php:						// check for CSS border-spacing properties
tcpdf.php:						if (isset($dom[$key]['style']['border-spacing'])) {
tcpdf.php:							$dom[$key]['border-spacing'] = $this->getCSSBorderMargin($dom[$key]['style']['border-spacing']);
tcpdf.php:						// page-break-inside
tcpdf.php:						if (isset($dom[$key]['style']['page-break-inside']) AND ($dom[$key]['style']['page-break-inside'] == 'avoid')) {
tcpdf.php:						// page-break-before
tcpdf.php:						if (isset($dom[$key]['style']['page-break-before'])) {
tcpdf.php:							if ($dom[$key]['style']['page-break-before'] == 'always') {
tcpdf.php:							} elseif ($dom[$key]['style']['page-break-before'] == 'left') {
tcpdf.php:							} elseif ($dom[$key]['style']['page-break-before'] == 'right') {
tcpdf.php:						// page-break-after
tcpdf.php:						if (isset($dom[$key]['style']['page-break-after'])) {
tcpdf.php:							if ($dom[$key]['style']['page-break-after'] == 'always') {
tcpdf.php:							} elseif ($dom[$key]['style']['page-break-after'] == 'left') {
tcpdf.php:							} elseif ($dom[$key]['style']['page-break-after'] == 'right') {
tcpdf.php:						$borderstyle = $this->getCSSBorderStyle($dom[$key]['attribute']['border'].' solid black');
tcpdf.php:							$dom[$key]['fontname'] = $this->getFontFamilyName($dom[$key]['attribute']['face']);
tcpdf.php:								} elseif ($dom[$key]['attribute']['size'][0] == '-') {
tcpdf.php:									$dom[$key]['fontsize'] = $dom[($dom[$key]['parent'])]['fontsize'] - intval(substr($dom[$key]['attribute']['size'], 1));
tcpdf.php:						if ($this->rtl) {
tcpdf.php:						if (!isset($dom[$key]['attribute']['size']) AND !isset($dom[$key]['style']['font-size'])) {
tcpdf.php:					if (!isset($dom[$key]['style']['text-decoration']) AND ($dom[$key]['value'] == 'a')) {
tcpdf.php:						$dom[$key]['fontstyle'] = $this->htmlLinkFontStyle;
tcpdf.php:						$dom[$key]['fontname'] = $this->default_monospaced_font;
tcpdf.php:						if (!isset($dom[$key]['attribute']['size']) AND !isset($dom[$key]['style']['font-size'])) {
tcpdf.php:							$headsize = (4 - intval($dom[$key]['value'][1])) * 2;
tcpdf.php:						if (!isset($dom[$key]['style']['font-weight'])) {
tcpdf.php:						$dom[$key]['fgcolor'] = TCPDF_COLORS::convertHTMLColorToDec($dom[$key]['attribute']['color'], $this->spot_colors);
tcpdf.php:						$dom[$key]['fgcolor'] = $this->htmlLinkColorArray;
tcpdf.php:						$dom[$key]['bgcolor'] = TCPDF_COLORS::convertHTMLColorToDec($dom[$key]['attribute']['bgcolor'], $this->spot_colors);
tcpdf.php:						$dom[$key]['strokecolor'] = TCPDF_COLORS::convertHTMLColorToDec($dom[$key]['attribute']['strokecolor'], $this->spot_colors);
tcpdf.php:						$dom[$key]['stroke'] = $this->getHTMLUnitToUnits($dom[$key]['attribute']['stroke'], $dom[$key]['fontsize'], 'pt', true);
tcpdf.php:				if (!empty($dom[$dom[$key]['parent']]['text-transform'])) {
tcpdf.php:					// text-transform for unicode requires mb_convert_case (Multibyte String Functions)
tcpdf.php:						if (isset($ttm[$dom[$dom[$key]['parent']]['text-transform']])) {
tcpdf.php:							$element = mb_convert_case($element, $ttm[$dom[$dom[$key]['parent']]['text-transform']], $this->encoding);
tcpdf.php:					} elseif (!$this->isunicode) {
tcpdf.php:						switch ($dom[$dom[$key]['parent']]['text-transform']) {
tcpdf.php:				$dom[$key]['value'] = stripslashes($this->unhtmlentities($element));
tcpdf.php:	 * @since 4.8.024 (2010-01-15)
tcpdf.php:		if ($this->isUnicodeFont()) {
tcpdf.php:		return md5(strlen($data).$this->file_id.$data);
tcpdf.php:		return $this->getHashForTCPDFtagParams($encoded).$encoded;
tcpdf.php:		if ($hash != $this->getHashForTCPDFtagParams($encoded)) {
tcpdf.php:			$this->Error('Invalid parameters');
tcpdf.php:	 * The upper-left corner of the cell corresponds to the current position. After the call, the current position moves to the right or to the next line.<br />
tcpdf.php:	 * IMPORTANT: The HTML must be well formatted - try to clean-up it using an application like HTML-Tidy before submitting.
tcpdf.php:	 * NOTE: all the HTML attributes must be enclosed in double-quote.
tcpdf.php:	 * @param float|null $x upper-left corner X coordinate
tcpdf.php:	 * @param float|null $y upper-left corner Y coordinate
tcpdf.php:	 * @param mixed $border Indicates if borders must be drawn around the cell. The value can be a number:<ul><li>0: no border (default)</li><li>1: frame</li></ul> or a string containing some or all of the following characters (in any order):<ul><li>L: left</li><li>T: top</li><li>R: right</li><li>B: bottom</li></ul> or an array of line styles for each border group - for example: array('LTRB' => array('width' => 2, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0, 0, 0)))
tcpdf.php:		return $this->MultiCell($w, $h, $html, $border, $align, $fill, $ln, $x, $y, $reseth, 0, true, $autopadding, 0, 'T', false);
tcpdf.php:	 * IMPORTANT: The HTML must be well formatted - try to clean-up it using an application like HTML-Tidy before submitting.
tcpdf.php:	 * NOTE: all the HTML attributes must be enclosed in double-quote.
tcpdf.php:		$gvars = $this->getGraphicVars();
tcpdf.php:		$prev_cell_margin = $this->cell_margin;
tcpdf.php:		$prev_cell_padding = $this->cell_padding;
tcpdf.php:		$prevPage = $this->page;
tcpdf.php:		$prevlMargin = $this->lMargin;
tcpdf.php:		$prevrMargin = $this->rMargin;
tcpdf.php:		$curfontname = $this->FontFamily;
tcpdf.php:		$curfontstyle = $this->FontStyle;
tcpdf.php:		$curfontsize = $this->FontSizePt;
tcpdf.php:		$curfontascent = $this->getFontAscent($curfontname, $curfontstyle, $curfontsize);
tcpdf.php:		$curfontdescent = $this->getFontDescent($curfontname, $curfontstyle, $curfontsize);
tcpdf.php:		$curfontstretcing = $this->font_stretching;
tcpdf.php:		$curfonttracking = $this->font_spacing;
tcpdf.php:		$this->newline = true;
tcpdf.php:		$startlinepage = $this->page;
tcpdf.php:		$minstartliney = $this->y;
tcpdf.php:		$startlinex = $this->x;
tcpdf.php:		$startliney = $this->y;
tcpdf.php:		$this->premode = false;
tcpdf.php:		if ($this->inxobj) {
tcpdf.php:			$pask = count($this->xobjects[$this->xobjid]['annotations']);
tcpdf.php:		} elseif (isset($this->PageAnnots[$this->page])) {
tcpdf.php:			$pask = count($this->PageAnnots[$this->page]);
tcpdf.php:		if ($this->inxobj) {
tcpdf.php:			$startlinepos = strlen($this->xobjects[$this->xobjid]['outdata']);
tcpdf.php:		} elseif (!$this->InFooter) {
tcpdf.php:			if (isset($this->footerlen[$this->page])) {
tcpdf.php:				$this->footerpos[$this->page] = $this->pagelen[$this->page] - $this->footerlen[$this->page];
tcpdf.php:				$this->footerpos[$this->page] = $this->pagelen[$this->page];
tcpdf.php:			$startlinepos = $this->footerpos[$this->page];
tcpdf.php:			$startlinepos = $this->pagelen[$this->page];
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$w = $this->x - $this->lMargin;
tcpdf.php:			$w = $this->w - $this->rMargin - $this->x;
tcpdf.php:		$w -= ($this->cell_padding['L'] + $this->cell_padding['R']);
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$this->x -= $this->cell_padding['R'];
tcpdf.php:				$this->lMargin += $this->cell_padding['L'];
tcpdf.php:				$this->x += $this->cell_padding['L'];
tcpdf.php:				$this->rMargin += $this->cell_padding['R'];
tcpdf.php:		if ($this->customlistindent >= 0) {
tcpdf.php:			$this->listindent = $this->customlistindent;
tcpdf.php:			$this->listindent = $this->GetStringWidth('000000');
tcpdf.php:		$this->listindentlevel = 0;
tcpdf.php:		$prev_cell_height_ratio = $this->cell_height_ratio;
tcpdf.php:		$prev_listnum = $this->listnum;
tcpdf.php:		$prev_listordered = $this->listordered;
tcpdf.php:		$prev_listcount = $this->listcount;
tcpdf.php:		$prev_lispacer = $this->lispacer;
tcpdf.php:		$this->listnum = 0;
tcpdf.php:		$this->listordered = array();
tcpdf.php:		$this->listcount = array();
tcpdf.php:		$this->lispacer = '';
tcpdf.php:		if ((TCPDF_STATIC::empty_string($this->lasth)) OR ($reseth)) {
tcpdf.php:			$this->resetLastH();
tcpdf.php:		$dom = $this->getHtmlDomArray($html);
tcpdf.php:					// skip just this self-closing tag
tcpdf.php:					$this->checkPageBreak($this->PageBreakTrigger + 1);
tcpdf.php:					$this->htmlvspace = ($this->PageBreakTrigger + 1);
tcpdf.php:				if ((($dom[$key]['attribute']['pagebreak'] == 'left') AND (((!$this->rtl) AND (($this->page % 2) == 0)) OR (($this->rtl) AND (($this->page % 2) != 0))))
tcpdf.php:					OR (($dom[$key]['attribute']['pagebreak'] == 'right') AND (((!$this->rtl) AND (($this->page % 2) != 0)) OR (($this->rtl) AND (($this->page % 2) == 0))))) {
tcpdf.php:					$this->checkPageBreak($this->PageBreakTrigger + 1);
tcpdf.php:					$this->htmlvspace = ($this->PageBreakTrigger + 1);
tcpdf.php:					$this->startTransaction();
tcpdf.php:					$this->inthead = true;
tcpdf.php:					$this->writeHTML($this->thead, false, false, false, false, '');
tcpdf.php:					if (($this->y < $this->start_transaction_y) OR ($this->checkPageBreak($this->lasth, '', false))) {
tcpdf.php:						$this->rollbackTransaction(true);
tcpdf.php:						$tmp_thead = $this->thead;
tcpdf.php:						$this->thead = '';
tcpdf.php:						$pre_y = $this->y;
tcpdf.php:						if ((!$this->checkPageBreak($this->PageBreakTrigger + 1)) AND ($this->y < $pre_y)) {
tcpdf.php:							$startliney = $this->y;
tcpdf.php:						$this->start_transaction_page = $this->page;
tcpdf.php:						$this->start_transaction_y = $this->y;
tcpdf.php:						$this->thead = $tmp_thead;
tcpdf.php:							$tmp_cellspacing = $this->getHTMLUnitToUnits($dom[$dom[$key]['parent']]['attribute']['cellspacing'], 1, 'px');
tcpdf.php:						} elseif (isset($dom[$dom[$key]['parent']]['border-spacing'])) {
tcpdf.php:							$tmp_cellspacing = $dom[$dom[$key]['parent']]['border-spacing']['V'];
tcpdf.php:						$dom[$dom[$key]['parent']]['borderposition']['page'] = $this->page;
tcpdf.php:						$dom[$dom[$key]['parent']]['borderposition']['column'] = $this->current_column;
tcpdf.php:						$dom[$dom[$key]['parent']]['borderposition']['y'] = $this->y + $tmp_cellspacing;
tcpdf.php:						$xoffset = ($this->x - $dom[$dom[$key]['parent']]['borderposition']['x']);
tcpdf.php:						$this->writeHTML($this->thead, false, false, false, false, '');
tcpdf.php:					$dom[$key]['align'] = ($this->rtl) ? 'R' : 'L';
tcpdf.php:				if ((!$this->newline) AND ($dom[$key]['value'] == 'img') AND (isset($dom[$key]['height'])) AND ($dom[$key]['height'] > 0)) {
tcpdf.php:					$imgh = $this->getHTMLUnitToUnits($dom[$key]['height'], ($dom[$key]['fontsize'] / $this->k), 'px');
tcpdf.php:						$imgw = $this->getHTMLUnitToUnits($dom[$key]['width'], ($dom[$key]['fontsize'] / $this->k), 'px', false);
tcpdf.php:						if (($imgw <= ($this->w - $this->lMargin - $this->rMargin - $this->cell_padding['L'] - $this->cell_padding['R']))
tcpdf.php:							AND ((($this->rtl) AND (($this->x - $imgw) < ($this->lMargin + $this->cell_padding['L'])))
tcpdf.php:							OR ((!$this->rtl) AND (($this->x + $imgw) > ($this->w - $this->rMargin - $this->cell_padding['R']))))) {
tcpdf.php:							$this->Ln('', $cell);
tcpdf.php:							if ((!$dom[($key-1)]['tag']) AND ($dom[($key-1)]['value'] == ' ')) {
tcpdf.php:								--$key;
tcpdf.php:						if ($this->inPageBody()) {
tcpdf.php:							$pre_y = $this->y;
tcpdf.php:							if ((!$this->checkPageBreak($imgh)) AND ($this->y < $pre_y)) {
tcpdf.php:								$startliney = $this->y;
tcpdf.php:						if ($this->page > $startlinepage) {
tcpdf.php:							if (isset($this->footerlen[$startlinepage])) {
tcpdf.php:								$curpos = $this->pagelen[$startlinepage] - $this->footerlen[$startlinepage];
tcpdf.php:							$pagebuff = $this->getPageBuffer($startlinepage);
tcpdf.php:							$linebeg = substr($pagebuff, $startlinepos, ($curpos - $startlinepos));
tcpdf.php:							$tend = substr($this->getPageBuffer($startlinepage), $curpos);
tcpdf.php:							$this->setPageBuffer($startlinepage, $tstart.''.$tend);
tcpdf.php:							$pagebuff = $this->getPageBuffer($this->page);
tcpdf.php:							$tstart = substr($pagebuff, 0, $this->cntmrk[$this->page]);
tcpdf.php:							$tend = substr($pagebuff, $this->cntmrk[$this->page]);
tcpdf.php:							$yshift = ($minstartliney - $this->y);
tcpdf.php:								$yshift += ($curfontsize / $this->k);
tcpdf.php:							$try = sprintf('1 0 0 1 0 %F cm', ($yshift * $this->k));
tcpdf.php:							$this->setPageBuffer($this->page, $tstart."\nq\n".$try."\n".$linebeg."\nQ\n".$tend);
tcpdf.php:							if (isset($this->PageAnnots[$this->page])) {
tcpdf.php:								$next_pask = count($this->PageAnnots[$this->page]);
tcpdf.php:							if (isset($this->PageAnnots[$startlinepage])) {
tcpdf.php:								foreach ($this->PageAnnots[$startlinepage] as $pak => $pac) {
tcpdf.php:										$this->PageAnnots[$this->page][] = $pac;
tcpdf.php:										unset($this->PageAnnots[$startlinepage][$pak]);
tcpdf.php:										$npak = count($this->PageAnnots[$this->page]) - 1;
tcpdf.php:										$this->PageAnnots[$this->page][$npak]['y'] -= $yshift;
tcpdf.php:							$startlinepos = $this->cntmrk[$this->page];
tcpdf.php:							$startlinepage = $this->page;
tcpdf.php:							$startliney = $this->y;
tcpdf.php:							$this->newline = false;
tcpdf.php:						$this->y += ($this->getCellHeight($curfontsize / $this->k) - ($curfontdescent * $this->cell_height_ratio) - $imgh);
tcpdf.php:						$minstartliney = min($this->y, $minstartliney);
tcpdf.php:						$maxbottomliney = ($startliney + $this->getCellHeight($curfontsize / $this->k));
tcpdf.php:				} elseif (isset($dom[$key]['fontname']) OR isset($dom[$key]['fontstyle']) OR isset($dom[$key]['fontsize']) OR isset($dom[$key]['line-height'])) {
tcpdf.php:					$fontascent = $this->getFontAscent($fontname, $fontstyle, $fontsize);
tcpdf.php:					$fontdescent = $this->getFontDescent($fontname, $fontstyle, $fontsize);
tcpdf.php:						OR ($this->cell_height_ratio != $dom[$key]['line-height'])
tcpdf.php:						if (($key < ($maxel - 1)) AND (
tcpdf.php:								OR ($this->cell_height_ratio != $dom[$key]['line-height'])
tcpdf.php:								OR (!$this->newline AND is_numeric($fontsize) AND is_numeric($curfontsize)
tcpdf.php:							if ($this->page > $startlinepage) {
tcpdf.php:								if (isset($this->footerlen[$startlinepage])) {
tcpdf.php:									$curpos = $this->pagelen[$startlinepage] - $this->footerlen[$startlinepage];
tcpdf.php:								$pagebuff = $this->getPageBuffer($startlinepage);
tcpdf.php:								$linebeg = substr($pagebuff, $startlinepos, ($curpos - $startlinepos));
tcpdf.php:								$tend = substr($this->getPageBuffer($startlinepage), $curpos);
tcpdf.php:								$this->setPageBuffer($startlinepage, $tstart.''.$tend);
tcpdf.php:								$pagebuff = $this->getPageBuffer($this->page);
tcpdf.php:								$tstart = substr($pagebuff, 0, $this->cntmrk[$this->page]);
tcpdf.php:								$tend = substr($pagebuff, $this->cntmrk[$this->page]);
tcpdf.php:								$yshift = ($minstartliney - $this->y);
tcpdf.php:								$try = sprintf('1 0 0 1 0 %F cm', ($yshift * $this->k));
tcpdf.php:								$this->setPageBuffer($this->page, $tstart."\nq\n".$try."\n".$linebeg."\nQ\n".$tend);
tcpdf.php:								if (isset($this->PageAnnots[$this->page])) {
tcpdf.php:									$next_pask = count($this->PageAnnots[$this->page]);
tcpdf.php:								if (isset($this->PageAnnots[$startlinepage])) {
tcpdf.php:									foreach ($this->PageAnnots[$startlinepage] as $pak => $pac) {
tcpdf.php:											$this->PageAnnots[$this->page][] = $pac;
tcpdf.php:											unset($this->PageAnnots[$startlinepage][$pak]);
tcpdf.php:											$npak = count($this->PageAnnots[$this->page]) - 1;
tcpdf.php:											$this->PageAnnots[$this->page][$npak]['y'] -= $yshift;
tcpdf.php:								$startlinepos = $this->cntmrk[$this->page];
tcpdf.php:								$startlinepage = $this->page;
tcpdf.php:								$startliney = $this->y;
tcpdf.php:							if (!isset($dom[$key]['line-height'])) {
tcpdf.php:								$dom[$key]['line-height'] = $this->cell_height_ratio;
tcpdf.php:									$this->y += (((($curfontsize * $this->cell_height_ratio) - ($fontsize * $dom[$key]['line-height'])) / $this->k) + $curfontascent - $fontascent - $curfontdescent + $fontdescent) / 2;
tcpdf.php:									if (isset($line_align_data) AND (($line_align_data[0] == ($key - 1)) OR (($line_align_data[0] == ($key - 2)) AND (isset($dom[($key - 1)])) AND (preg_match('/^([\s]+)$/', $dom[($key - 1)]['value']) > 0)))) {
tcpdf.php:										$minstartliney = min($this->y, $line_align_data[1]);
tcpdf.php:										$maxbottomliney = max(($this->y + $this->getCellHeight($fontsize / $this->k)), $line_align_data[2]);
tcpdf.php:										$minstartliney = min($this->y, $minstartliney);
tcpdf.php:										$maxbottomliney = max(($this->y + $this->getCellHeight($fontsize / $this->k)), $maxbottomliney);
tcpdf.php:							$this->cell_height_ratio = $dom[$key]['line-height'];
tcpdf.php:						$this->setFont($fontname, $fontstyle, $fontsize);
tcpdf.php:						$this->resetLastH();
tcpdf.php:				$textstroke = isset($dom[$key]['stroke']) ? $dom[$key]['stroke'] : $this->textstrokewidth;
tcpdf.php:				$textfill = isset($dom[$key]['fill']) ? $dom[$key]['fill'] : (($this->textrendermode % 2) == 0);
tcpdf.php:				$textclip = isset($dom[$key]['clip']) ? $dom[$key]['clip'] : ($this->textrendermode > 3);
tcpdf.php:				$this->setTextRenderingMode($textstroke, $textfill, $textclip);
tcpdf.php:				if (isset($dom[$key]['font-stretch']) AND ($dom[$key]['font-stretch'] !== false)) {
tcpdf.php:					$this->setFontStretching($dom[$key]['font-stretch']);
tcpdf.php:				if (isset($dom[$key]['letter-spacing']) AND ($dom[$key]['letter-spacing'] !== false)) {
tcpdf.php:					$this->setFontSpacing($dom[$key]['letter-spacing']);
tcpdf.php:				$curpos = $this->pagelen[$startlinepage];
tcpdf.php:					$this->setFillColorArray($dom[$key]['bgcolor']);
tcpdf.php:					$this->setTextColorArray($dom[$key]['fgcolor']);
tcpdf.php:					$this->setDrawColorArray($dom[$key]['strokecolor']);
tcpdf.php:			if ($this->newline AND (strlen($dom[$key]['value']) > 0) AND ($dom[$key]['value'] != 'td') AND ($dom[$key]['value'] != 'th')) {
tcpdf.php:					$yshift = ($minstartliney - $startliney);
tcpdf.php:					if (($yshift > 0) OR ($this->page > $startlinepage)) {
tcpdf.php:					$linew = abs($this->endlinex - $startlinex);
tcpdf.php:					if ($this->inxobj) {
tcpdf.php:						$pstart = substr($this->xobjects[$this->xobjid]['outdata'], 0, $startlinepos);
tcpdf.php:							$pmid = substr($this->xobjects[$this->xobjid]['outdata'], $startlinepos, ($midpos - $startlinepos));
tcpdf.php:							$pend = substr($this->xobjects[$this->xobjid]['outdata'], $midpos);
tcpdf.php:							$pmid = substr($this->xobjects[$this->xobjid]['outdata'], $startlinepos);
tcpdf.php:						$pstart = substr($this->getPageBuffer($startlinepage), 0, $startlinepos);
tcpdf.php:						if (isset($opentagpos) AND isset($this->footerlen[$startlinepage]) AND (!$this->InFooter)) {
tcpdf.php:							$this->footerpos[$startlinepage] = $this->pagelen[$startlinepage] - $this->footerlen[$startlinepage];
tcpdf.php:							$midpos = min($opentagpos, $this->footerpos[$startlinepage]);
tcpdf.php:						} elseif (isset($this->footerlen[$startlinepage]) AND (!$this->InFooter)) {
tcpdf.php:							$this->footerpos[$startlinepage] = $this->pagelen[$startlinepage] - $this->footerlen[$startlinepage];
tcpdf.php:							$midpos = $this->footerpos[$startlinepage];
tcpdf.php:							$pmid = substr($this->getPageBuffer($startlinepage), $startlinepos, ($midpos - $startlinepos));
tcpdf.php:							$pend = substr($this->getPageBuffer($startlinepage), $midpos);
tcpdf.php:							$pmid = substr($this->getPageBuffer($startlinepage), $startlinepos);
tcpdf.php:					if ((isset($plalign) AND ((($plalign == 'C') OR ($plalign == 'J') OR (($plalign == 'R') AND (!$this->rtl)) OR (($plalign == 'L') AND ($this->rtl)))))) {
tcpdf.php:						if (($plalign == 'J') AND $this->isRTLTextDir() AND ($this->num_columns > 1)) {
tcpdf.php:							$tw += $this->cell_padding['R'];
tcpdf.php:						if ($this->lMargin != $prevlMargin) {
tcpdf.php:							$tw += ($prevlMargin - $this->lMargin);
tcpdf.php:						if ($this->rMargin != $prevrMargin) {
tcpdf.php:							$tw += ($prevrMargin - $this->rMargin);
tcpdf.php:						$one_space_width = $this->GetStringWidth(chr(32));
tcpdf.php:						if ($this->isRTLTextDir()) { // RTL
tcpdf.php:								if ($this->isUnicodeFont()) {
tcpdf.php:										$linew -= $one_space_width;
tcpdf.php:								if ($this->isUnicodeFont()) {
tcpdf.php:									$pmid = substr($pmid, 0, ($pos1 - $spacelen)).substr($pmid, $pos1);
tcpdf.php:									$linew -= $one_space_width;
tcpdf.php:						$mdiff = ($tw - $linew);
tcpdf.php:							if ($this->rtl) {
tcpdf.php:								$t_x = -($mdiff / 2);
tcpdf.php:							$t_x = -$mdiff;
tcpdf.php:							if ($this->isRTLTextDir()) {
tcpdf.php:								$t_x = -$mdiff;
tcpdf.php:								$spacestr = $this->getSpaceString();
tcpdf.php:								$maxkk = count($lnstring[1]) - 1;
tcpdf.php:								$spacewidth = ($mdiff / ($ns - $no)) * $this->k;
tcpdf.php:								if ($this->FontSize <= 0) {
tcpdf.php:									$this->FontSize = 1;
tcpdf.php:								$spacewidthu = -1000 * ($mdiff + (($ns + $no) * $one_space_width)) / $ns / $this->FontSize;
tcpdf.php:								if ($this->font_spacing != 0) {
tcpdf.php:									$osw = -1000 * $this->font_spacing / $this->FontSize;
tcpdf.php:								if ($this->isRTLTextDir()) {
tcpdf.php:									$textpos = $this->wPt;
tcpdf.php:								while (preg_match('/([0-9\.\+\-]*)[\s](Td|cm|m|l|c|re)[\s]/x', $pmid, $strpiece, PREG_OFFSET_CAPTURE, $offset) == 1) {
tcpdf.php:										while (($offset !== false) AND ($pmid[($offset - 1)] == '\\')) {
tcpdf.php:											$this->Error('HTML Justification: malformed PDF code.');
tcpdf.php:									if ($this->isRTLTextDir()) {
tcpdf.php:										$spacew = ($spacewidth * ($nsmax - $ns));
tcpdf.php:									$epsposend = strpos($pmid, $this->epsmarker.'Q', $offset);
tcpdf.php:										$epsposend += strlen($this->epsmarker.'Q');
tcpdf.php:										$epsposbeg = strpos($pmid, 'q'.$this->epsmarker, $offset);
tcpdf.php:											$epsposbeg = strpos($pmid, 'q'.$this->epsmarker, ($prev_epsposbeg - 6));
tcpdf.php:											$pmid_m = substr($pmid, $epsposbeg, ($epsposend - $epsposbeg));
tcpdf.php:											preg_match('/([0-9\.\+\-]*)[\s]('.$strpiece[1][0].')[\s]('.$strpiece[2][0].')([\s]*)/x', $pmid, $xmatches);
tcpdf.php:												if ($this->isRTLTextDir()) {
tcpdf.php:													$spacew = ($spacewidth * ($nsmax - $ns));
tcpdf.php:											if (preg_match('/([0-9\.\+\-]*)[\s]('.$strpiece[1][0].')[\s]('.$strpiece[2][0].')([\s]*)/x', $pmid, $pmatch) == 1) {
tcpdf.php:											if (!TCPDF_STATIC::empty_string($this->lispacer)) {
tcpdf.php:												$this->lispacer = '';
tcpdf.php:											preg_match('/([0-9\.\+\-]*)[\s]([0-9\.\+\-]*)[\s]([0-9\.\+\-]*)[\s]('.$strpiece[1][0].')[\s](re)([\s]*)/x', $pmid, $xmatches);
tcpdf.php:											if ($this->isRTLTextDir()) { // RTL
tcpdf.php:													$x_diff = ($spacewidth * ($nsmax - $lnstring[3][$strcount]));
tcpdf.php:														$x_diff = ($spacewidth * ($nsmax - $lnstring[3][($strcount - 1)]));
tcpdf.php:														$w_diff = ($spacewidth * $lnstring[2][($strcount - 1)]);
tcpdf.php:														$x_diff = ($spacewidth * $lnstring[3][($strcount - 1)]);
tcpdf.php:														$x_diff = ($spacewidth * $lnstring[3][($strcount - 2)]);
tcpdf.php:														$w_diff = ($spacewidth * $lnstring[2][($strcount - 1)]);
tcpdf.php:											preg_match('/([0-9\.\+\-]*)[\s]([0-9\.\+\-]*)[\s]([0-9\.\+\-]*)[\s]([0-9\.\+\-]*)[\s]([0-9\.\+\-]*)[\s]('.$strpiece[1][0].')[\s](c)([\s]*)/x', $pmid, $xmatches);
tcpdf.php:									$cxpos = ($currentxpos / $this->k);
tcpdf.php:									$lmpos = ($this->lMargin + $this->cell_padding['L'] + $this->feps);
tcpdf.php:									if ($this->inxobj) {
tcpdf.php:										foreach ($this->xobjects[$this->xobjid]['annotations'] as $pak => $pac) {
tcpdf.php:											if (($pac['y'] >= $minstartliney) AND (($pac['x'] * $this->k) >= ($currentxpos - $this->feps)) AND (($pac['x'] * $this->k) <= ($currentxpos + $this->feps))) {
tcpdf.php:													$this->xobjects[$this->xobjid]['annotations'][$pak]['x'] += ($spacew / $this->k);
tcpdf.php:													$this->xobjects[$this->xobjid]['annotations'][$pak]['w'] += (($spacewidth * $pac['numspaces']) / $this->k);
tcpdf.php:													$this->xobjects[$this->xobjid]['annotations'][$pak]['w'] += (($spacewidth * $pac['numspaces']) / $this->k);
tcpdf.php:									} elseif (isset($this->PageAnnots[$this->page])) {
tcpdf.php:										foreach ($this->PageAnnots[$this->page] as $pak => $pac) {
tcpdf.php:											if (($pac['y'] >= $minstartliney) AND (($pac['x'] * $this->k) >= ($currentxpos - $this->feps)) AND (($pac['x'] * $this->k) <= ($currentxpos + $this->feps))) {
tcpdf.php:													$this->PageAnnots[$this->page][$pak]['x'] += ($spacew / $this->k);
tcpdf.php:													$this->PageAnnots[$this->page][$pak]['w'] += (($spacewidth * $pac['numspaces']) / $this->k);
tcpdf.php:													$this->PageAnnots[$this->page][$pak]['w'] += (($spacewidth * $pac['numspaces']) / $this->k);
tcpdf.php:								if ($this->isUnicodeFont()) {
tcpdf.php:									if ($this->font_stretching != 100) {
tcpdf.php:										$spacew /= ($this->font_stretching / 100);
tcpdf.php:									if ($this->inxobj) {
tcpdf.php:										$this->xobjects[$this->xobjid]['outdata'] = $pstart."\n".$pmid."\n".$pend;
tcpdf.php:										$this->setPageBuffer($startlinepage, $pstart."\n".$pmid."\n".$pend);
tcpdf.php:									// non-unicode (single-byte characters)
tcpdf.php:									if ($this->font_stretching != 100) {
tcpdf.php:										$spacewidth /= ($this->font_stretching / 100);
tcpdf.php:									if ($this->inxobj) {
tcpdf.php:										$this->xobjects[$this->xobjid]['outdata'] = $pstart."\n".$pmid."\nBT 0 Tw ET\n".$pend;
tcpdf.php:										$this->setPageBuffer($startlinepage, $pstart."\n".$pmid."\nBT 0 Tw ET\n".$pend);
tcpdf.php:						$trx = sprintf('1 0 0 1 %F %F cm', ($t_x * $this->k), ($yshift * $this->k));
tcpdf.php:						if ($this->inxobj) {
tcpdf.php:							$this->xobjects[$this->xobjid]['outdata'] = $pstart.$pend;
tcpdf.php:							foreach ($this->xobjects[$this->xobjid]['annotations'] as $pak => $pac) {
tcpdf.php:									$this->xobjects[$this->xobjid]['annotations'][$pak]['x'] += $t_x;
tcpdf.php:									$this->xobjects[$this->xobjid]['annotations'][$pak]['y'] -= $yshift;
tcpdf.php:							$this->setPageBuffer($startlinepage, $pstart.$pend);
tcpdf.php:							if (isset($this->PageAnnots[$this->page])) {
tcpdf.php:								foreach ($this->PageAnnots[$this->page] as $pak => $pac) {
tcpdf.php:										$this->PageAnnots[$this->page][$pak]['x'] += $t_x;
tcpdf.php:										$this->PageAnnots[$this->page][$pak]['y'] -= $yshift;
tcpdf.php:						$this->y -= $yshift;
tcpdf.php:				$pbrk = $this->checkPageBreak($this->lasth);
tcpdf.php:				$this->newline = false;
tcpdf.php:				$startlinex = $this->x;
tcpdf.php:				$startliney = $this->y;
tcpdf.php:					$startliney -= ((0.3 * $this->FontSizePt) / $this->k);
tcpdf.php:					$startliney -= (($this->FontSizePt / 0.7) / $this->k);
tcpdf.php:					$maxbottomliney = ($this->y + $this->getCellHeight($fontsize / $this->k));
tcpdf.php:				$startlinepage = $this->page;
tcpdf.php:					if ($this->inxobj) {
tcpdf.php:						$startlinepos = strlen($this->xobjects[$this->xobjid]['outdata']);
tcpdf.php:					} elseif (!$this->InFooter) {
tcpdf.php:						if (isset($this->footerlen[$this->page])) {
tcpdf.php:							$this->footerpos[$this->page] = $this->pagelen[$this->page] - $this->footerlen[$this->page];
tcpdf.php:							$this->footerpos[$this->page] = $this->pagelen[$this->page];
tcpdf.php:						$startlinepos = $this->footerpos[$this->page];
tcpdf.php:						$startlinepos = $this->pagelen[$this->page];
tcpdf.php:				if (isset($this->PageAnnots[$this->page])) {
tcpdf.php:					$pask = count($this->PageAnnots[$this->page]);
tcpdf.php:					AND (isset($this->emptypagemrk[$this->page]))
tcpdf.php:					AND ($this->emptypagemrk[$this->page] == $this->pagelen[$this->page]))) {
tcpdf.php:					$this->setFont($fontname, $fontstyle, $fontsize);
tcpdf.php:						$this->setFillColorArray($this->bgcolor);
tcpdf.php:					if (isset($dom[$key]['text-indent']) AND $dom[$key]['block']) {
tcpdf.php:						$this->textindent = $dom[$key]['text-indent'];
tcpdf.php:						$this->newline = true;
tcpdf.php:						if ($this->rtl) {
tcpdf.php:							$wtmp = $this->x - $this->lMargin;
tcpdf.php:							$wtmp = $this->w - $this->rMargin - $this->x;
tcpdf.php:							$clsp = $this->getHTMLUnitToUnits($dom[$key]['attribute']['cellspacing'], 1, 'px');
tcpdf.php:						} elseif (isset($dom[$key]['border-spacing'])) {
tcpdf.php:							$cellspacing = $dom[$key]['border-spacing'];
tcpdf.php:							$table_width = $this->getHTMLUnitToUnits($dom[$key]['width'], $wtmp, 'px');
tcpdf.php:						$table_width -= (2 * $cellspacing['H']);
tcpdf.php:						if (!$this->inthead) {
tcpdf.php:							$this->y += $cellspacing['V'];
tcpdf.php:						if ($this->rtl) {
tcpdf.php:							$cellspacingx = -$cellspacing['H'];
tcpdf.php:						$table_columns_width = ($table_width - ($cellspacing['H'] * ($dom[$key]['cols'] - 1)));
tcpdf.php:						$old_cell_padding = $this->cell_padding;
tcpdf.php:							$crclpd = $this->getHTMLUnitToUnits($dom[($dom[$trid]['parent'])]['attribute']['cellpadding'], 1, 'px');
tcpdf.php:						$this->cell_padding = $current_cell_padding;
tcpdf.php:							$cellh = $this->getHTMLUnitToUnits($dom[$key]['height'], 0, 'px');
tcpdf.php:							$dom[$trid]['startpage'] = $this->page;
tcpdf.php:							$this->setPage($dom[$trid]['startpage']);
tcpdf.php:							$dom[$trid]['startcolumn'] = $this->current_column;
tcpdf.php:						} elseif ($this->current_column != $dom[$trid]['startcolumn']) {
tcpdf.php:							$tmpx = $this->x;
tcpdf.php:							$this->selectColumn($dom[$trid]['startcolumn']);
tcpdf.php:							$this->x = $tmpx;
tcpdf.php:							$dom[$trid]['starty'] = $this->y;
tcpdf.php:							$this->y = $dom[$trid]['starty'];
tcpdf.php:							$dom[$trid]['startx'] = $this->x;
tcpdf.php:							$this->x += $cellspacingx;
tcpdf.php:							$this->x += ($cellspacingx / 2);
tcpdf.php:						// skip row-spanned cells started on the previous rows
tcpdf.php:								if ($trwsp['startpage'] < $this->page) {
tcpdf.php:									if (($this->rtl) AND ($this->pagedim[$this->page]['orm'] != $this->pagedim[$trwsp['startpage']]['orm'])) {
tcpdf.php:										$dl = ($this->pagedim[$this->page]['orm'] - $this->pagedim[$trwsp['startpage']]['orm']);
tcpdf.php:										$rsstartx -= $dl;
tcpdf.php:										$rsendx -= $dl;
tcpdf.php:									} elseif ((!$this->rtl) AND ($this->pagedim[$this->page]['olm'] != $this->pagedim[$trwsp['startpage']]['olm'])) {
tcpdf.php:										$dl = ($this->pagedim[$this->page]['olm'] - $this->pagedim[$trwsp['startpage']]['olm']);
tcpdf.php:									AND ($rsstartx > ($this->x - $cellspacing['H'] - $current_cell_padding['L'] - $this->feps))
tcpdf.php:									AND ($rsstartx < ($this->x + $cellspacing['H'] + $current_cell_padding['R'] + $this->feps))
tcpdf.php:									AND (($trwsp['starty'] < ($this->y - $this->feps)) OR ($trwsp['startpage'] < $this->page) OR ($trwsp['startcolumn'] < $this->current_column))) {
tcpdf.php:									$this->x = $rsendx + $cellspacingx;
tcpdf.php:							$cellw = $this->getHTMLUnitToUnits($dom[$parentid]['width'], $table_columns_width, 'px');
tcpdf.php:						$cellw += (($colspan - 1) * $cellspacing['H']);
tcpdf.php:							$trsid = array_push($dom[$table_el]['rowspans'], array('trid' => $trid, 'rowspan' => $rowspan, 'mrowspan' => $rowspan, 'colspan' => $colspan, 'startpage' => $this->page, 'startcolumn' => $this->current_column, 'startx' => $this->x, 'starty' => $this->y));
tcpdf.php:						$cellid = array_push($dom[$trid]['cellpos'], array('startx' => $this->x));
tcpdf.php:							$dom[$trid]['cellpos'][($cellid - 1)]['rowspanid'] = ($trsid - 1);
tcpdf.php:							$dom[$trid]['cellpos'][($cellid - 1)]['bgcolor'] = $dom[$parentid]['bgcolor'];
tcpdf.php:							$dom[$trid]['cellpos'][($cellid - 1)]['border'] = $tdborder;
tcpdf.php:						$prevLastH = $this->lasth;
tcpdf.php:						if ($this->rtl) {
tcpdf.php:							$this->colxshift['x'] = $this->w - $this->x - $this->rMargin;
tcpdf.php:							$this->colxshift['x'] = $this->x - $this->lMargin;
tcpdf.php:						$this->colxshift['s'] = $cellspacing;
tcpdf.php:						$this->colxshift['p'] = $current_cell_padding;
tcpdf.php:						$this->MultiCell($cellw, $cellh, $cell_content, false, $lalign, false, 2, '', '', true, 0, true, true, 0, 'T', false);
tcpdf.php:						$this->colxshift = array('x' => 0, 's' => array('H' => 0, 'V' => 0), 'p' => array('L' => 0, 'T' => 0, 'R' => 0, 'B' => 0));
tcpdf.php:						$this->lasth = $prevLastH;
tcpdf.php:						$this->cell_padding = $old_cell_padding;
tcpdf.php:						$dom[$trid]['cellpos'][($cellid - 1)]['endx'] = $this->x;
tcpdf.php:								if (($this->page == $dom[$trid]['endpage']) AND ($this->current_column == $dom[$trid]['endcolumn'])) {
tcpdf.php:									$dom[$trid]['endy'] = max($this->y, $dom[$trid]['endy']);
tcpdf.php:								} elseif (($this->page > $dom[$trid]['endpage']) OR ($this->current_column > $dom[$trid]['endcolumn'])) {
tcpdf.php:									$dom[$trid]['endy'] = $this->y;
tcpdf.php:								$dom[$trid]['endy'] = $this->y;
tcpdf.php:								$dom[$trid]['endpage'] = max($this->page, $dom[$trid]['endpage']);
tcpdf.php:								$dom[$trid]['endpage'] = $this->page;
tcpdf.php:								$dom[$trid]['endcolumn'] = max($this->current_column, $dom[$trid]['endcolumn']);
tcpdf.php:								$dom[$trid]['endcolumn'] = $this->current_column;
tcpdf.php:							// account for row-spanned cells
tcpdf.php:							$dom[$table_el]['rowspans'][($trsid - 1)]['endx'] = $this->x;
tcpdf.php:							$dom[$table_el]['rowspans'][($trsid - 1)]['endy'] = $this->y;
tcpdf.php:							$dom[$table_el]['rowspans'][($trsid - 1)]['endpage'] = $this->page;
tcpdf.php:							$dom[$table_el]['rowspans'][($trsid - 1)]['endcolumn'] = $this->current_column;
tcpdf.php:											$dom[$trid]['endy'] = $this->pagedim[$dom[$trid]['endpage']]['hk'] - $this->pagedim[$dom[$trid]['endpage']]['bm'];
tcpdf.php:						$this->x += ($cellspacingx / 2);
tcpdf.php:						// opening tag (or self-closing tag)
tcpdf.php:							if ($this->inxobj) {
tcpdf.php:								$opentagpos = strlen($this->xobjects[$this->xobjid]['outdata']);
tcpdf.php:							} elseif (!$this->InFooter) {
tcpdf.php:								if (isset($this->footerlen[$this->page])) {
tcpdf.php:									$this->footerpos[$this->page] = $this->pagelen[$this->page] - $this->footerlen[$this->page];
tcpdf.php:									$this->footerpos[$this->page] = $this->pagelen[$this->page];
tcpdf.php:								$opentagpos = $this->footerpos[$this->page];
tcpdf.php:						$dom = $this->openHTMLTagHandler($dom, $key, $cell);
tcpdf.php:					$prev_numpages = $this->numpages;
tcpdf.php:					$old_bordermrk = $this->bordermrk[$this->page];
tcpdf.php:					$dom = $this->closeHTMLTagHandler($dom, $key, $cell, $maxbottomliney);
tcpdf.php:					if ($this->bordermrk[$this->page] > $old_bordermrk) {
tcpdf.php:						$startlinepos += ($this->bordermrk[$this->page] - $old_bordermrk);
tcpdf.php:					if ($prev_numpages > $this->numpages) {
tcpdf.php:						$startlinepage = $this->page;
tcpdf.php:				// print list-item
tcpdf.php:				if (!TCPDF_STATIC::empty_string($this->lispacer) AND ($this->lispacer != '^')) {
tcpdf.php:					$this->setFont($pfontname, $pfontstyle, $pfontsize);
tcpdf.php:					$this->resetLastH();
tcpdf.php:					$minstartliney = $this->y;
tcpdf.php:					$maxbottomliney = ($startliney + $this->getCellHeight($this->FontSize));
tcpdf.php:						$this->putHtmlListBullet($this->listnum, $this->lispacer, $pfontsize);
tcpdf.php:					$this->setFont($curfontname, $curfontstyle, $curfontsize);
tcpdf.php:					$this->resetLastH();
tcpdf.php:						$pfontascent = $this->getFontAscent($pfontname, $pfontstyle, $pfontsize);
tcpdf.php:						$pfontdescent = $this->getFontDescent($pfontname, $pfontstyle, $pfontsize);
tcpdf.php:						$this->y += ($this->getCellHeight(($pfontsize - $curfontsize) / $this->k) + $pfontascent - $curfontascent - $pfontdescent + $curfontdescent) / 2;
tcpdf.php:						$minstartliney = min($this->y, $minstartliney);
tcpdf.php:						$maxbottomliney = max(($this->y + $this->getCellHeight($pfontsize / $this->k)), $maxbottomliney);
tcpdf.php:				$this->htmlvspace = 0;
tcpdf.php:				if ((!$this->premode) AND $this->isRTLTextDir() AND !$isRTLString) {
tcpdf.php:					if (preg_match('/^('.$this->re_space['p'].'+)/'.$this->re_space['m'], $dom[$key]['value'], $matches)) {
tcpdf.php:					if (preg_match('/('.$this->re_space['p'].'+)$/'.$this->re_space['m'], $dom[$key]['value'], $matches)) {
tcpdf.php:					$dom[$key]['value'] = $rsp.$this->stringTrim($dom[$key]['value']).$lsp;
tcpdf.php:					if (!$this->premode) {
tcpdf.php:						if ($this->isRTLTextDir() AND !$isRTLString) {
tcpdf.php:							// right trim except non-breaking space
tcpdf.php:							$dom[$key]['value'] = $this->stringRightTrim($dom[$key]['value']);
tcpdf.php:							// left trim except non-breaking space
tcpdf.php:							$dom[$key]['value'] = $this->stringLeftTrim($dom[$key]['value']);
tcpdf.php:					$dom[$key]['value'] = preg_replace('/^'.$this->re_space['p'].'+$/'.$this->re_space['m'], chr(32), $dom[$key]['value']);
tcpdf.php:				if ($this->rtl) {
tcpdf.php:					$this->x -= $this->textindent;
tcpdf.php:					$this->x += $this->textindent;
tcpdf.php:					$strlinelen = $this->GetStringWidth($dom[$key]['value']);
tcpdf.php:					if (!empty($this->HREF) AND (isset($this->HREF['url']))) {
tcpdf.php:						$hrefstyle = -1;
tcpdf.php:						$strrest = $this->addHtmlLink($this->HREF['url'], $dom[$key]['value'], $wfill, true, $hrefcolor, $hrefstyle, true);
tcpdf.php:						if ($this->rtl) {
tcpdf.php:							$cwa = ($this->x - $this->lMargin);
tcpdf.php:							$cwa = ($this->w - $this->rMargin - $this->x);
tcpdf.php:							$tmp_fontname = $this->FontFamily;
tcpdf.php:							$tmp_fontstyle = $this->FontStyle;
tcpdf.php:							$tmp_fontsize = $this->FontSizePt;
tcpdf.php:									$tmp_fontname = isset($dom[$nkey]['fontname']) ? $dom[$nkey]['fontname'] : $this->FontFamily;
tcpdf.php:									$tmp_fontstyle = isset($dom[$nkey]['fontstyle']) ? $dom[$nkey]['fontstyle'] : $this->FontStyle;
tcpdf.php:									$tmp_fontsize = isset($dom[$nkey]['fontsize']) ? $dom[$nkey]['fontsize'] : $this->FontSizePt;
tcpdf.php:									$nextstr = TCPDF_STATIC::pregSplit('/'.$this->re_space['p'].'+/', $this->re_space['m'], $dom[$nkey]['value']);
tcpdf.php:										$wadj += $this->GetStringWidth($nextstr[0], $tmp_fontname, $tmp_fontstyle, $tmp_fontsize);
tcpdf.php:							$nextstr = TCPDF_STATIC::pregSplit('/'.$this->re_space['p'].'/', $this->re_space['m'], $dom[$key]['value']);
tcpdf.php:								$wadj = ($cwa - $strlinelen + $this->GetStringWidth($nextstr[($numblks - 1)]));
tcpdf.php:								$wadj = $this->GetStringWidth($nextstr[0]);
tcpdf.php:						if (($wadj > 0) AND (($this->rtl AND ($this->tmprtl === 'L')) OR (!$this->rtl AND ($this->tmprtl === 'R')))) {
tcpdf.php:							$this->rtl = !$this->rtl;
tcpdf.php:							if ($this->rtl) {
tcpdf.php:								$this->x += $revshift;
tcpdf.php:								$this->x -= $revshift;
tcpdf.php:							$xws = $this->x;
tcpdf.php:						$strrest = $this->Write($this->lasth, $dom[$key]['value'], '', $wfill, '', false, 0, true, $firstblock, 0, $wadj);
tcpdf.php:							$this->x = $xws;
tcpdf.php:							$this->rtl = !$this->rtl;
tcpdf.php:				$this->textindent = 0;
tcpdf.php:					$this->newline = true;
tcpdf.php:						if ($this->rtl) {
tcpdf.php:							$this->x -= $this->cell_padding['R'];
tcpdf.php:							$this->x += $this->cell_padding['L'];
tcpdf.php:						--$key;
tcpdf.php:					 if ($this->font_spacing > 0) {
tcpdf.php:					 	if ($this->rtl) {
tcpdf.php:							$this->x -= $this->font_spacing;
tcpdf.php:							$this->x += $this->font_spacing;
tcpdf.php:				if ((!$undo) AND (($this->y < $this->start_transaction_y) OR (($dom[$key]['value'] == 'tr') AND ($dom[($dom[$key]['parent'])]['endy'] < $this->start_transaction_y)))) {
tcpdf.php:					$this->rollbackTransaction(true);
tcpdf.php:						$this->inthead = true;
tcpdf.php:					$pre_y = $this->y;
tcpdf.php:					if ((!$this->checkPageBreak($this->PageBreakTrigger + 1)) AND ($this->y < $pre_y)) {
tcpdf.php:						$startliney = $this->y;
tcpdf.php:			$yshift = ($minstartliney - $startliney);
tcpdf.php:			if (($yshift > 0) OR ($this->page > $startlinepage)) {
tcpdf.php:			$linew = abs($this->endlinex - $startlinex);
tcpdf.php:			if ($this->inxobj) {
tcpdf.php:				$pstart = substr($this->xobjects[$this->xobjid]['outdata'], 0, $startlinepos);
tcpdf.php:					$pmid = substr($this->xobjects[$this->xobjid]['outdata'], $startlinepos, ($midpos - $startlinepos));
tcpdf.php:					$pend = substr($this->xobjects[$this->xobjid]['outdata'], $midpos);
tcpdf.php:					$pmid = substr($this->xobjects[$this->xobjid]['outdata'], $startlinepos);
tcpdf.php:				$pstart = substr($this->getPageBuffer($startlinepage), 0, $startlinepos);
tcpdf.php:				if (isset($opentagpos) AND isset($this->footerlen[$startlinepage]) AND (!$this->InFooter)) {
tcpdf.php:					$this->footerpos[$startlinepage] = $this->pagelen[$startlinepage] - $this->footerlen[$startlinepage];
tcpdf.php:					$midpos = min($opentagpos, $this->footerpos[$startlinepage]);
tcpdf.php:				} elseif (isset($this->footerlen[$startlinepage]) AND (!$this->InFooter)) {
tcpdf.php:					$this->footerpos[$startlinepage] = $this->pagelen[$startlinepage] - $this->footerlen[$startlinepage];
tcpdf.php:					$midpos = $this->footerpos[$startlinepage];
tcpdf.php:					$pmid = substr($this->getPageBuffer($startlinepage), $startlinepos, ($midpos - $startlinepos));
tcpdf.php:					$pend = substr($this->getPageBuffer($startlinepage), $midpos);
tcpdf.php:					$pmid = substr($this->getPageBuffer($startlinepage), $startlinepos);
tcpdf.php:			if ((isset($plalign) AND ((($plalign == 'C') OR (($plalign == 'R') AND (!$this->rtl)) OR (($plalign == 'L') AND ($this->rtl)))))) {
tcpdf.php:				if ($this->lMargin != $prevlMargin) {
tcpdf.php:					$tw += ($prevlMargin - $this->lMargin);
tcpdf.php:				if ($this->rMargin != $prevrMargin) {
tcpdf.php:					$tw += ($prevrMargin - $this->rMargin);
tcpdf.php:				$one_space_width = $this->GetStringWidth(chr(32));
tcpdf.php:				if ($this->isRTLTextDir()) { // RTL
tcpdf.php:						if ($this->isUnicodeFont()) {
tcpdf.php:								$linew -= $one_space_width;
tcpdf.php:						if ($this->isUnicodeFont()) {
tcpdf.php:							$pmid = substr($pmid, 0, ($pos1 - $spacelen)).substr($pmid, $pos1);
tcpdf.php:							$linew -= $one_space_width;
tcpdf.php:				$mdiff = ($tw - $linew);
tcpdf.php:					if ($this->rtl) {
tcpdf.php:						$t_x = -($mdiff / 2);
tcpdf.php:					$t_x = -$mdiff;
tcpdf.php:				$trx = sprintf('1 0 0 1 %F %F cm', ($t_x * $this->k), ($yshift * $this->k));
tcpdf.php:				if ($this->inxobj) {
tcpdf.php:					$this->xobjects[$this->xobjid]['outdata'] = $pstart.$pend;
tcpdf.php:					foreach ($this->xobjects[$this->xobjid]['annotations'] as $pak => $pac) {
tcpdf.php:							$this->xobjects[$this->xobjid]['annotations'][$pak]['x'] += $t_x;
tcpdf.php:							$this->xobjects[$this->xobjid]['annotations'][$pak]['y'] -= $yshift;
tcpdf.php:					$this->setPageBuffer($startlinepage, $pstart.$pend);
tcpdf.php:					if (isset($this->PageAnnots[$this->page])) {
tcpdf.php:						foreach ($this->PageAnnots[$this->page] as $pak => $pac) {
tcpdf.php:								$this->PageAnnots[$this->page][$pak]['x'] += $t_x;
tcpdf.php:								$this->PageAnnots[$this->page][$pak]['y'] -= $yshift;
tcpdf.php:				$this->y -= $yshift;
tcpdf.php:		$this->setGraphicVars($gvars);
tcpdf.php:		if ($this->num_columns > 1) {
tcpdf.php:			$this->selectColumn();
tcpdf.php:		} elseif ($this->page > $prevPage) {
tcpdf.php:			$this->lMargin = $this->pagedim[$this->page]['olm'];
tcpdf.php:			$this->rMargin = $this->pagedim[$this->page]['orm'];
tcpdf.php:		$this->cell_height_ratio = $prev_cell_height_ratio;
tcpdf.php:		$this->listnum = $prev_listnum;
tcpdf.php:		$this->listordered = $prev_listordered;
tcpdf.php:		$this->listcount = $prev_listcount;
tcpdf.php:		$this->lispacer = $prev_lispacer;
tcpdf.php:		if ($ln AND (!($cell AND ($dom[$key-1]['value'] == 'table')))) {
tcpdf.php:			$this->Ln($this->lasth);
tcpdf.php:			if (($this->y < $maxbottomliney) AND ($startlinepage == $this->page)) {
tcpdf.php:				$this->y = $maxbottomliney;
tcpdf.php:			$this->setTempRTL($tag['dir']);
tcpdf.php:			$this->tmprtl = false;
tcpdf.php:			if (isset($this->tagvspaces[$tag['value']][0]['h']) && !empty($this->tagvspaces[$tag['value']][0]['h']) && ($this->tagvspaces[$tag['value']][0]['h'] >= 0)) {
tcpdf.php:				$cur_h = $this->tagvspaces[$tag['value']][0]['h'];
tcpdf.php:				$cur_h = $this->getCellHeight($tag['fontsize'] / $this->k);
tcpdf.php:				$cur_h = $this->getCellHeight($this->FontSize);
tcpdf.php:			if (isset($this->tagvspaces[$tag['value']][0]['n'])) {
tcpdf.php:				$on = $this->tagvspaces[$tag['value']][0]['n'];
tcpdf.php:			} elseif (preg_match('/[h][0-9]/', $tag['value']) > 0) {
tcpdf.php:			if ((!isset($this->tagvspaces[$tag['value']])) AND (in_array($tag['value'], array('div', 'dt', 'dd', 'li', 'br', 'hr')))) {
tcpdf.php:			if (($this->htmlvspace <= 0) AND ($on > 0)) {
tcpdf.php:					$hbz = (($parent['fontsize'] / $this->k) * $this->cell_height_ratio);
tcpdf.php:					$hbz = $this->getCellHeight($this->FontSize);
tcpdf.php:			if (isset($dom[($key - 1)]) AND ($dom[($key - 1)]['value'] == 'table')) {
tcpdf.php:			if (isset($this->tagvspaces[$tag['value']][1]['h']) && !empty($this->tagvspaces[$tag['value']][1]['h']) && ($this->tagvspaces[$tag['value']][1]['h'] >= 0)) {
tcpdf.php:				$pre_h = $this->tagvspaces[$tag['value']][1]['h'];
tcpdf.php:				$pre_h = $this->getCellHeight($parent['fontsize'] / $this->k);
tcpdf.php:				$pre_h = $this->getCellHeight($this->FontSize);
tcpdf.php:			if (isset($this->tagvspaces[$tag['value']][1]['n'])) {
tcpdf.php:				$cn = $this->tagvspaces[$tag['value']][1]['n'];
tcpdf.php:			} elseif (preg_match('/[h][0-9]/', $tag['value']) > 0) {
tcpdf.php:			if (isset($this->tagvspaces[$tag['value']][1])) {
tcpdf.php:					$this->htmlvspace = 0;
tcpdf.php:						$this->thead = $dom[$key]['thead'];
tcpdf.php:						if (!isset($this->theadMargins) OR (empty($this->theadMargins))) {
tcpdf.php:							$this->theadMargins = array();
tcpdf.php:							$this->theadMargins['cell_padding'] = $this->cell_padding;
tcpdf.php:							$this->theadMargins['lmargin'] = $this->lMargin;
tcpdf.php:							$this->theadMargins['rmargin'] = $this->rMargin;
tcpdf.php:							$this->theadMargins['page'] = $this->page;
tcpdf.php:							$this->theadMargins['cell'] = $cell;
tcpdf.php:							$this->theadMargins['gvars'] = $this->getGraphicVars();
tcpdf.php:				$dom[$key]['old_cell_padding'] = $this->cell_padding;
tcpdf.php:					$pad = $this->getHTMLUnitToUnits($tag['attribute']['cellpadding'], 1, 'px');
tcpdf.php:					$this->setCellPadding($pad);
tcpdf.php:					$this->cell_padding = $tag['padding'];
tcpdf.php:					$cs = $this->getHTMLUnitToUnits($tag['attribute']['cellspacing'], 1, 'px');
tcpdf.php:				} elseif (isset($tag['border-spacing'])) {
tcpdf.php:					$cs = $tag['border-spacing']['V'];
tcpdf.php:				$prev_y = $this->y;
tcpdf.php:				if ($this->checkPageBreak(((2 * $cp) + (2 * $cs) + $this->lasth), '', false) OR ($this->y < $prev_y)) {
tcpdf.php:					$this->inthead = true;
tcpdf.php:					$this->checkPageBreak($this->PageBreakTrigger + 1);
tcpdf.php:					$hrHeight = $this->getHTMLUnitToUnits($tag['height'], 1, 'px');
tcpdf.php:					$hrHeight = $this->GetLineWidth();
tcpdf.php:				$this->addHTMLVertSpace($hbz, max($hb, ($hrHeight / 2)), $cell, $firsttag);
tcpdf.php:				$x = $this->GetX();
tcpdf.php:				$y = $this->GetY();
tcpdf.php:				$wtmp = $this->w - $this->lMargin - $this->rMargin;
tcpdf.php:					$wtmp -= ($this->cell_padding['L'] + $this->cell_padding['R']);
tcpdf.php:					$hrWidth = $this->getHTMLUnitToUnits($tag['width'], $wtmp, 'px');
tcpdf.php:				$prevlinewidth = $this->GetLineWidth();
tcpdf.php:				$this->setLineWidth($hrHeight);
tcpdf.php:				$this->Line($x, $y, $x + $hrWidth, $y, $lineStyle);
tcpdf.php:				$this->setLineWidth($prevlinewidth);
tcpdf.php:				$this->addHTMLVertSpace(max($hbc, ($hrHeight / 2)), 0, $cell, !isset($dom[($key + 1)]));
tcpdf.php:					$this->HREF['url'] = $tag['attribute']['href'];
tcpdf.php:				} elseif ( $this->allowLocalFiles && substr($imgsrc, 0, 7) === 'file://') {
tcpdf.php:							if (substr($_SERVER['DOCUMENT_ROOT'], -1) == '/') {
tcpdf.php:								$imgsrc = substr($_SERVER['DOCUMENT_ROOT'], 0, -1).$imgsrc;
tcpdf.php:				$prevy = $this->y;
tcpdf.php:				$xpos = $this->x;
tcpdf.php:				if (isset($this->HREF['url']) AND !TCPDF_STATIC::empty_string($this->HREF['url'])) {
tcpdf.php:					$imglink = $this->HREF['url'];
tcpdf.php:								$page = $this->page;
tcpdf.php:							$imglink = $this->AddLink();
tcpdf.php:							$this->setLink($imglink, $lnky, $page);
tcpdf.php:					$iw = $this->getHTMLUnitToUnits($tag['width'], ($tag['fontsize'] / $this->k), 'px', false);
tcpdf.php:					$ih = $this->getHTMLUnitToUnits($tag['height'], ($tag['fontsize'] / $this->k), 'px', false);
tcpdf.php:					$this->ImageEps($imgsrc, $xpos, $this->y, $iw, $ih, $imglink, true, $align, '', $border, true);
tcpdf.php:					$this->ImageSVG($imgsrc, $xpos, $this->y, $iw, $ih, $imglink, $align, '', $border, true);
tcpdf.php:					$this->Image($imgsrc, $xpos, $this->y, $iw, $ih, '', $imglink, $align, false, 300, '', false, false, $border, false, false, true);
tcpdf.php:						$this->y = $prevy;
tcpdf.php:						$this->y = (($this->img_rb_y + $prevy - ($this->getCellHeight($tag['fontsize'] / $this->k))) / 2);
tcpdf.php:						$this->y = $this->img_rb_y - ($this->getCellHeight($tag['fontsize'] / $this->k) - ($this->getFontDescent($tag['fontname'], $tag['fontstyle'], $tag['fontsize']) * $this->cell_height_ratio));
tcpdf.php:				++$this->listnum;
tcpdf.php:				if ($this->listnum == 1) {
tcpdf.php:					$this->addHTMLVertSpace($hbz, $hb, $cell, $firsttag);
tcpdf.php:					$this->addHTMLVertSpace(0, 0, $cell, $firsttag);
tcpdf.php:				$this->addHTMLVertSpace($hbz, $hb, $cell, $firsttag);
tcpdf.php:				if ($this->rtl) {
tcpdf.php:					$this->rMargin += $this->listindent;
tcpdf.php:					$this->lMargin += $this->listindent;
tcpdf.php:				++$this->listindentlevel;
tcpdf.php:				$this->addHTMLVertSpace($hbz, $hb, $cell, $firsttag);
tcpdf.php:				++$this->listnum;
tcpdf.php:					$this->listordered[$this->listnum] = true;
tcpdf.php:					$this->listordered[$this->listnum] = false;
tcpdf.php:					$this->listcount[$this->listnum] = intval($tag['attribute']['start']) - 1;
tcpdf.php:					$this->listcount[$this->listnum] = 0;
tcpdf.php:				if ($this->rtl) {
tcpdf.php:					$this->rMargin += $this->listindent;
tcpdf.php:					$this->x -= $this->listindent;
tcpdf.php:					$this->lMargin += $this->listindent;
tcpdf.php:					$this->x += $this->listindent;
tcpdf.php:				++$this->listindentlevel;
tcpdf.php:				if ($this->listnum == 1) {
tcpdf.php:						$this->addHTMLVertSpace($hbz, $hb, $cell, $firsttag);
tcpdf.php:					$this->addHTMLVertSpace(0, 0, $cell, $firsttag);
tcpdf.php:					$this->addHTMLVertSpace($hbz, $hb, $cell, $firsttag);
tcpdf.php:				if ($this->listordered[$this->listnum]) {
tcpdf.php:						$this->lispacer = $parent['attribute']['type'];
tcpdf.php:						$this->lispacer = $parent['listtype'];
tcpdf.php:					} elseif (isset($this->lisymbol) AND !TCPDF_STATIC::empty_string($this->lisymbol)) {
tcpdf.php:						$this->lispacer = $this->lisymbol;
tcpdf.php:						$this->lispacer = '#';
tcpdf.php:					++$this->listcount[$this->listnum];
tcpdf.php:						$this->listcount[$this->listnum] = intval($tag['attribute']['value']);
tcpdf.php:						$this->lispacer = $parent['attribute']['type'];
tcpdf.php:						$this->lispacer = $parent['listtype'];
tcpdf.php:					} elseif (isset($this->lisymbol) AND !TCPDF_STATIC::empty_string($this->lisymbol)) {
tcpdf.php:						$this->lispacer = $this->lisymbol;
tcpdf.php:						$this->lispacer = '!';
tcpdf.php:				if ($this->rtl) {
tcpdf.php:					$this->rMargin += $this->listindent;
tcpdf.php:					$this->lMargin += $this->listindent;
tcpdf.php:				++$this->listindentlevel;
tcpdf.php:				$this->addHTMLVertSpace($hbz, $hb, $cell, $firsttag);
tcpdf.php:				$this->addHTMLVertSpace($hbz, $hb, $cell, $firsttag);
tcpdf.php:				$this->addHTMLVertSpace($hbz, $hb, $cell, $firsttag);
tcpdf.php:				$this->addHTMLVertSpace($hbz, $hb, $cell, $firsttag);
tcpdf.php:				$this->addHTMLVertSpace($hbz, $hb, $cell, $firsttag);
tcpdf.php:				$this->premode = true;
tcpdf.php:				$this->setXY($this->GetX(), $this->GetY() - ((0.7 * $this->FontSizePt) / $this->k));
tcpdf.php:				$this->setXY($this->GetX(), $this->GetY() + ((0.3 * $this->FontSizePt) / $this->k));
tcpdf.php:				$this->addHTMLVertSpace($hbz, $hb, $cell, $firsttag);
tcpdf.php:			// Form fields (since 4.8.000 - 2009-09-07)
tcpdf.php:					$this->form_action = $tag['attribute']['action'];
tcpdf.php:					$this->Error('Please explicitly set action attribute path!');
tcpdf.php:					$this->form_enctype = $tag['attribute']['enctype'];
tcpdf.php:					$this->form_enctype = 'application/x-www-form-urlencoded';
tcpdf.php:					$this->form_mode = $tag['attribute']['method'];
tcpdf.php:					$this->form_mode = 'post';
tcpdf.php:				$h = $this->getCellHeight($this->FontSize);
tcpdf.php:					$w = intval($tag['attribute']['size']) * $this->GetStringWidth(chr(32)) * 2;
tcpdf.php:						$this->TextField($name, $w, $h, $prop, $opt, '', '', false);
tcpdf.php:						$this->TextField($name, $w, $h, $prop, $opt, '', '', false);
tcpdf.php:						$this->CheckBox($name, $w, $checked, $prop, $opt, $value, '', '', false);
tcpdf.php:						$this->RadioButton($name, $w, $prop, $opt, $value, $checked, '', '', false);
tcpdf.php:						$w = $this->GetStringWidth($value) * 1.5;
tcpdf.php:						$action['F'] = $this->form_action;
tcpdf.php:						if ($this->form_enctype != 'FDF') {
tcpdf.php:						if ($this->form_mode == 'get') {
tcpdf.php:						$this->Button($name, $w, $h, $value, $action, $prop, $opt, '', '', false);
tcpdf.php:						$w = $this->GetStringWidth($value) * 1.5;
tcpdf.php:						$this->Button($name, $w, $h, $value, array('S'=>'ResetForm'), $prop, $opt, '', '', false);
tcpdf.php:						$this->TextField($name, $w, $h, $prop, $opt, '', '', false);
tcpdf.php:						$w = $this->GetStringWidth($value) * 2;
tcpdf.php:						$this->Button('FB_'.$name, $w, $h, $value, $jsaction, $prop, $opt, '', '', false);
tcpdf.php:						$this->TextField($name, 0, 0, $prop, $opt, '', '', false);
tcpdf.php:						$this->Button($name, $w, $h, $value, $jsaction, $prop, $opt, '', '', false);
tcpdf.php:						$w = $this->GetStringWidth($value) * 1.5;
tcpdf.php:						$this->Button($name, $w, $h, $value, $jsaction, $prop, $opt, '', '', false);
tcpdf.php:					$w = intval($tag['attribute']['cols']) * $this->GetStringWidth(chr(32)) * 2;
tcpdf.php:					$h = intval($tag['attribute']['rows']) * $this->getCellHeight($this->FontSize);
tcpdf.php:				$this->TextField($name, $w, $h, $prop, $opt, '', '', false);
tcpdf.php:				$h = $this->getCellHeight($this->FontSize);
tcpdf.php:							$w = max($w, $this->GetStringWidth($opts[1]));
tcpdf.php:							$w = max($w, $this->GetStringWidth($val));
tcpdf.php:					$this->ListBox($name, $w, $h, $values, $prop, $opt, '', '', false);
tcpdf.php:					$this->ComboBox($name, $w, $h, $values, $prop, $opt, '', '', false);
tcpdf.php:								$params = $this->unserializeTCPDFtagParameters($tag['attribute']['params']);
tcpdf.php:								$this->$tcpdf_method();
tcpdf.php:							$this->newline = true;
tcpdf.php:			$dom[$key]['borderposition'] = $this->getBorderStartPosition();
tcpdf.php:				$this->checkPageBreak($this->PageBreakTrigger + 1);
tcpdf.php:			if ((($pba == 'left') AND (((!$this->rtl) AND (($this->page % 2) == 0)) OR (($this->rtl) AND (($this->page % 2) != 0))))
tcpdf.php:				OR (($pba == 'right') AND (((!$this->rtl) AND (($this->page % 2) != 0)) OR (($this->rtl) AND (($this->page % 2) == 0))))) {
tcpdf.php:				$this->checkPageBreak($this->PageBreakTrigger + 1);
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$xmax = $this->w;
tcpdf.php:			if (isset($this->tagvspaces[$tag['value']][1]['h']) && !empty($this->tagvspaces[$tag['value']][1]['h']) && ($this->tagvspaces[$tag['value']][1]['h'] >= 0)) {
tcpdf.php:				$pre_h = $this->tagvspaces[$tag['value']][1]['h'];
tcpdf.php:				$pre_h = $this->getCellHeight($parent['fontsize'] / $this->k);
tcpdf.php:				$pre_h = $this->getCellHeight($this->FontSize);
tcpdf.php:			if (isset($this->tagvspaces[$tag['value']][1]['n'])) {
tcpdf.php:				$cn = $this->tagvspaces[$tag['value']][1]['n'];
tcpdf.php:			} elseif (preg_match('/[h][0-9]/', $tag['value']) > 0) {
tcpdf.php:			if ((!isset($this->tagvspaces[$tag['value']])) AND ($tag['value'] == 'div')) {
tcpdf.php:			if ($maxbottomliney > $this->PageBreakTrigger) {
tcpdf.php:				$hbz = $this->getCellHeight($this->FontSize);
tcpdf.php:			} elseif ($this->y < $maxbottomliney) {
tcpdf.php:				$hbz = ($maxbottomliney - $this->y);
tcpdf.php:					$dom[($dom[$key]['parent'])]['endy'] = $this->y;
tcpdf.php:					$parent['endy'] = $this->y;
tcpdf.php:					$dom[($dom[$key]['parent'])]['endpage'] = $this->page;
tcpdf.php:					$parent['endpage'] = $this->page;
tcpdf.php:					$dom[($dom[$key]['parent'])]['endcolumn'] = $this->current_column;
tcpdf.php:					$parent['endcolumn'] = $this->current_column;
tcpdf.php:				// update row-spanned cells
tcpdf.php:						$dom[$table_el]['rowspans'][$k]['rowspan'] -= 1;
tcpdf.php:				$prev_page = $this->page;
tcpdf.php:				$this->setPage($dom[($dom[$key]['parent'])]['endpage']);
tcpdf.php:				if ($this->num_columns > 1) {
tcpdf.php:					if (($prev_page < $this->page)
tcpdf.php:						AND ((($this->current_column == 0) AND ($dom[($dom[$key]['parent'])]['endcolumn'] == ($this->num_columns - 1)))
tcpdf.php:							OR ($this->current_column == $dom[($dom[$key]['parent'])]['endcolumn']))) {
tcpdf.php:						$this->selectColumn(0);
tcpdf.php:						$dom[($dom[$key]['parent'])]['endy'] = $this->y;
tcpdf.php:						$this->selectColumn($dom[($dom[$key]['parent'])]['endcolumn']);
tcpdf.php:						$this->y = $dom[($dom[$key]['parent'])]['endy'];
tcpdf.php:					$this->y = $dom[($dom[$key]['parent'])]['endy'];
tcpdf.php:					$this->y += $this->getHTMLUnitToUnits($dom[$table_el]['attribute']['cellspacing'], 1, 'px');
tcpdf.php:				} elseif (isset($dom[$table_el]['border-spacing'])) {
tcpdf.php:					$this->y += $dom[$table_el]['border-spacing']['V'];
tcpdf.php:				$this->Ln(0, $cell);
tcpdf.php:				if ($this->current_column == $parent['startcolumn']) {
tcpdf.php:					$this->x = $parent['startx'];
tcpdf.php:				if ($this->page > $parent['startpage']) {
tcpdf.php:					if (($this->rtl) AND ($this->pagedim[$this->page]['orm'] != $this->pagedim[$parent['startpage']]['orm'])) {
tcpdf.php:						$this->x -= ($this->pagedim[$this->page]['orm'] - $this->pagedim[$parent['startpage']]['orm']);
tcpdf.php:					} elseif ((!$this->rtl) AND ($this->pagedim[$this->page]['olm'] != $this->pagedim[$parent['startpage']]['olm'])) {
tcpdf.php:						$this->x += ($this->pagedim[$this->page]['olm'] - $this->pagedim[$parent['startpage']]['olm']);
tcpdf.php:				$this->inthead = false;
tcpdf.php:					$border = array('LTRB' => array('width' => $this->getCSSBorderWidth($table_el['attribute']['border']), 'cap'=>'square', 'join'=>'miter', 'dash'=> 0, 'color'=>array(0,0,0)));
tcpdf.php:					// update row-spanned cells
tcpdf.php:								$dom[($dom[$key]['parent'])]['rowspans'][$k]['mrowspan'] -= 1;
tcpdf.php:						$pgendy = $this->pagedim[$dom[$prevtrkey]['endpage']]['hk'] - $this->pagedim[$dom[$prevtrkey]['endpage']]['bm'];
tcpdf.php:						// update row-spanned cells
tcpdf.php:									$dom[($dom[$key]['parent'])]['rowspans'][$k]['mrowspan'] = -1;
tcpdf.php:						$xmax = $parent['cellpos'][(count($parent['cellpos']) - 1)]['endx'];
tcpdf.php:						if ($this->num_columns == 0) {
tcpdf.php:							$this->num_columns = 1;
tcpdf.php:							$this->setFillColorArray($cellpos['bgcolor']);
tcpdf.php:						$w = abs($cellpos['endx'] - $cellpos['startx']);
tcpdf.php:						$border_start = TCPDF_STATIC::getBorderMode($border, $position='start', $this->opencell);
tcpdf.php:						$border_end = TCPDF_STATIC::getBorderMode($border, $position='end', $this->opencell);
tcpdf.php:						$border_middle = TCPDF_STATIC::getBorderMode($border, $position='middle', $this->opencell);
tcpdf.php:							$this->setPage($page);
tcpdf.php:							if ($this->num_columns < 2) {
tcpdf.php:								// single-column mode
tcpdf.php:								$this->x = $x;
tcpdf.php:								$this->y = $this->tMargin;
tcpdf.php:								if (($this->rtl) AND ($this->pagedim[$page]['orm'] != $this->pagedim[$startpage]['orm'])) {
tcpdf.php:									$this->x -= ($this->pagedim[$page]['orm'] - $this->pagedim[$startpage]['orm']);
tcpdf.php:								} elseif ((!$this->rtl) AND ($this->pagedim[$page]['olm'] != $this->pagedim[$startpage]['olm'])) {
tcpdf.php:									$this->x += ($this->pagedim[$page]['olm'] - $this->pagedim[$startpage]['olm']);
tcpdf.php:									$this->selectColumn($column);
tcpdf.php:										$h = $endy - $parent['starty'];
tcpdf.php:										$this->y = $y;
tcpdf.php:										$this->x = $x;
tcpdf.php:										$this->y = $starty;
tcpdf.php:										$this->x = $x;
tcpdf.php:										$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:										if ($this->rtl) {
tcpdf.php:											$deltacol = $this->x + $this->rMargin - $this->w;
tcpdf.php:											$deltacol = $this->x - $this->lMargin;
tcpdf.php:										if (isset($this->columns[$column]['th']['\''.$page.'\''])) {
tcpdf.php:											$this->y = $this->columns[$column]['th']['\''.$page.'\''];
tcpdf.php:										$this->x += $deltacol;
tcpdf.php:										$h = $endy - $this->y;
tcpdf.php:										if (isset($this->columns[$column]['th']['\''.$page.'\''])) {
tcpdf.php:											$this->y = $this->columns[$column]['th']['\''.$page.'\''];
tcpdf.php:										$this->x += $deltacol;
tcpdf.php:										$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:									$ccode .= $this->getCellCode($w, $h, '', $cborder, 1, '', $fill, '', 0, true)."\n";
tcpdf.php:								for ($column = $startcolumn; $column < $this->num_columns; ++$column) { // for each column
tcpdf.php:									$this->selectColumn($column);
tcpdf.php:										$this->y = $starty;
tcpdf.php:										$this->x = $x;
tcpdf.php:										$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:										if ($this->rtl) {
tcpdf.php:											$deltacol = $this->x + $this->rMargin - $this->w;
tcpdf.php:											$deltacol = $this->x - $this->lMargin;
tcpdf.php:										if (isset($this->columns[$column]['th']['\''.$page.'\''])) {
tcpdf.php:											$this->y = $this->columns[$column]['th']['\''.$page.'\''];
tcpdf.php:										$this->x += $deltacol;
tcpdf.php:										$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:									$ccode .= $this->getCellCode($w, $h, '', $cborder, 1, '', $fill, '', 0, true)."\n";
tcpdf.php:									$this->selectColumn($column);
tcpdf.php:										if (isset($this->columns[$column]['th']['\''.$page.'\''])) {
tcpdf.php:											$this->y = $this->columns[$column]['th']['\''.$page.'\''];
tcpdf.php:										$this->x += $deltacol;
tcpdf.php:										$h = $endy - $this->y;
tcpdf.php:										if (isset($this->columns[$column]['th']['\''.$page.'\''])) {
tcpdf.php:											$this->y = $this->columns[$column]['th']['\''.$page.'\''];
tcpdf.php:										$this->x += $deltacol;
tcpdf.php:										$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:									$ccode .= $this->getCellCode($w, $h, '', $cborder, 1, '', $fill, '', 0, true)."\n";
tcpdf.php:								for ($column = 0; $column < $this->num_columns; ++$column) { // for each column
tcpdf.php:									$this->selectColumn($column);
tcpdf.php:									if (isset($this->columns[$column]['th']['\''.$page.'\''])) {
tcpdf.php:										$this->y = $this->columns[$column]['th']['\''.$page.'\''];
tcpdf.php:									$this->x += $deltacol;
tcpdf.php:									$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:									$ccode .= $this->getCellCode($w, $h, '', $cborder, 1, '', $fill, '', 0, true)."\n";
tcpdf.php:								if ($this->inxobj) {
tcpdf.php:									if (end($this->xobjects[$this->xobjid]['transfmrk']) !== false) {
tcpdf.php:										$pagemarkkey = key($this->xobjects[$this->xobjid]['transfmrk']);
tcpdf.php:										$pagemark = $this->xobjects[$this->xobjid]['transfmrk'][$pagemarkkey];
tcpdf.php:										$this->xobjects[$this->xobjid]['transfmrk'][$pagemarkkey] += $offsetlen;
tcpdf.php:										$pagemark = $this->xobjects[$this->xobjid]['intmrk'];
tcpdf.php:										$this->xobjects[$this->xobjid]['intmrk'] += $offsetlen;
tcpdf.php:									$pagebuff = $this->xobjects[$this->xobjid]['outdata'];
tcpdf.php:									$this->xobjects[$this->xobjid]['outdata'] = $pstart.$ccode.$pend;
tcpdf.php:									if (end($this->transfmrk[$this->page]) !== false) {
tcpdf.php:										$pagemarkkey = key($this->transfmrk[$this->page]);
tcpdf.php:										$pagemark = $this->transfmrk[$this->page][$pagemarkkey];
tcpdf.php:									} elseif ($this->InFooter) {
tcpdf.php:										$pagemark = $this->footerpos[$this->page];
tcpdf.php:										$pagemark = $this->intmrk[$this->page];
tcpdf.php:									$pagebuff = $this->getPageBuffer($this->page);
tcpdf.php:									$this->setPageBuffer($this->page, $pstart.$ccode.$pend);
tcpdf.php:						$this->y += $this->getHTMLUnitToUnits($table_el['attribute']['cellspacing'], 1, 'px');
tcpdf.php:					} elseif (isset($table_el['border-spacing'])) {
tcpdf.php:						$this->y += $table_el['border-spacing']['V'];
tcpdf.php:					$this->Ln(0, $cell);
tcpdf.php:					$this->x = $parent['startx'];
tcpdf.php:						if (($this->rtl) AND ($this->pagedim[$endpage]['orm'] != $this->pagedim[$startpage]['orm'])) {
tcpdf.php:							$this->x += ($this->pagedim[$endpage]['orm'] - $this->pagedim[$startpage]['orm']);
tcpdf.php:						} elseif ((!$this->rtl) AND ($this->pagedim[$endpage]['olm'] != $this->pagedim[$startpage]['olm'])) {
tcpdf.php:							$this->x += ($this->pagedim[$endpage]['olm'] - $this->pagedim[$startpage]['olm']);
tcpdf.php:					$this->cell_padding = isset($table_el['old_cell_padding']) ? $table_el['old_cell_padding'] : null;
tcpdf.php:					$this->resetLastH();
tcpdf.php:					if (($this->page == ($this->numpages - 1)) AND ($this->pageopen[$this->numpages])) {
tcpdf.php:						$plendiff = ($this->pagelen[$this->numpages] - $this->emptypagemrk[$this->numpages]);
tcpdf.php:							$pagediff = substr($this->getPageBuffer($this->numpages), $this->emptypagemrk[$this->numpages], $plendiff);
tcpdf.php:							$this->deletePage($this->numpages);
tcpdf.php:					if (isset($this->theadMargins['top'])) {
tcpdf.php:						$this->tMargin = $this->theadMargins['top'];
tcpdf.php:						$this->thead = '';
tcpdf.php:						$this->theadMargins = array();
tcpdf.php:						$this->pagedim[$this->page]['tm'] = $this->tMargin;
tcpdf.php:				$this->HREF = array();
tcpdf.php:				$this->setXY($this->GetX(), $this->GetY() + ((0.7 * $parent['fontsize']) / $this->k));
tcpdf.php:				$this->setXY($this->GetX(), $this->GetY() - ((0.3 * $parent['fontsize']) / $this->k));
tcpdf.php:				$this->addHTMLVertSpace($hbz, $hb, $cell, false, $lasttag);
tcpdf.php:				if ($this->rtl) {
tcpdf.php:					$this->rMargin -= $this->listindent;
tcpdf.php:					$this->lMargin -= $this->listindent;
tcpdf.php:				--$this->listindentlevel;
tcpdf.php:				$this->addHTMLVertSpace($hbz, $hb, $cell, false, $lasttag);
tcpdf.php:				$this->addHTMLVertSpace($hbz, $hb, $cell, false, $lasttag);
tcpdf.php:				$this->addHTMLVertSpace($hbz, $hb, $cell, false, $lasttag);
tcpdf.php:				$this->premode = false;
tcpdf.php:				--$this->listnum;
tcpdf.php:				if ($this->listnum <= 0) {
tcpdf.php:					$this->listnum = 0;
tcpdf.php:					$this->addHTMLVertSpace($hbz, $hb, $cell, false, $lasttag);
tcpdf.php:					$this->addHTMLVertSpace(0, 0, $cell, false, $lasttag);
tcpdf.php:				$this->resetLastH();
tcpdf.php:				$this->lispacer = '';
tcpdf.php:				$this->addHTMLVertSpace(0, 0, $cell, false, $lasttag);
tcpdf.php:				$this->lispacer = '';
tcpdf.php:				if ($this->rtl) {
tcpdf.php:					$this->rMargin -= $this->listindent;
tcpdf.php:					$this->lMargin -= $this->listindent;
tcpdf.php:				--$this->listindentlevel;
tcpdf.php:				$this->addHTMLVertSpace(0, 0, $cell, false, $lasttag);
tcpdf.php:				--$this->listnum;
tcpdf.php:				$this->lispacer = '';
tcpdf.php:				if ($this->rtl) {
tcpdf.php:					$this->rMargin -= $this->listindent;
tcpdf.php:					$this->lMargin -= $this->listindent;
tcpdf.php:				--$this->listindentlevel;
tcpdf.php:				if ($this->listnum <= 0) {
tcpdf.php:					$this->listnum = 0;
tcpdf.php:					$this->addHTMLVertSpace($hbz, $hb, $cell, false, $lasttag);
tcpdf.php:					$this->addHTMLVertSpace(0, 0, $cell, false, $lasttag);
tcpdf.php:				$this->resetLastH();
tcpdf.php:				$this->lispacer = '';
tcpdf.php:				$this->addHTMLVertSpace(0, 0, $cell, false, $lasttag);
tcpdf.php:				$this->addHTMLVertSpace($hbz, $hb, $cell, false, $lasttag);
tcpdf.php:			// Form fields (since 4.8.000 - 2009-09-07)
tcpdf.php:				$this->form_action = '';
tcpdf.php:				$this->form_enctype = 'application/x-www-form-urlencoded';
tcpdf.php:		$this->drawHTMLTagBorder($parent, $xmax);
tcpdf.php:				$this->checkPageBreak($this->PageBreakTrigger + 1);
tcpdf.php:			if ((($pba == 'left') AND (((!$this->rtl) AND (($this->page % 2) == 0)) OR (($this->rtl) AND (($this->page % 2) != 0))))
tcpdf.php:				OR (($pba == 'right') AND (((!$this->rtl) AND (($this->page % 2) != 0)) OR (($this->rtl) AND (($this->page % 2) == 0))))) {
tcpdf.php:				$this->checkPageBreak($this->PageBreakTrigger + 1);
tcpdf.php:		$this->tmprtl = false;
tcpdf.php:			$this->Ln(0, $cell);
tcpdf.php:			$this->htmlvspace = 0;
tcpdf.php:			$this->Ln($hbz, $cell);
tcpdf.php:			$this->htmlvspace = 0;
tcpdf.php:		if ($hb < $this->htmlvspace) {
tcpdf.php:			$hd = $hb - $this->htmlvspace;
tcpdf.php:			$this->htmlvspace = $hb;
tcpdf.php:		$this->Ln(($hbz + $hd), $cell);
tcpdf.php:	 * @return array containing top-left border coordinates
tcpdf.php:	 * @since 5.7.000 (2010-08-03)
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$xmax = $this->lMargin;
tcpdf.php:			$xmax = $this->w - $this->rMargin;
tcpdf.php:		return array('page' => $this->page, 'column' => $this->current_column, 'x' => $this->x, 'y' => $this->y, 'xmax' => $xmax);
tcpdf.php:	 * @since 5.7.000 (2010-08-03)
tcpdf.php:		$prev_x = $this->x;
tcpdf.php:		$prev_y = $this->y;
tcpdf.php:		$prev_lasth = $this->lasth;
tcpdf.php:		$this->lasth = 0;
tcpdf.php:			if (!TCPDF_STATIC::empty_string($this->thead) AND (!$this->inthead)) {
tcpdf.php:				$border = TCPDF_STATIC::getBorderMode($border, $position='middle', $this->opencell);
tcpdf.php:			$old_bgcolor = $this->bgcolor;
tcpdf.php:			$this->setFillColorArray($tag['bgcolor']);
tcpdf.php:			$clsp = $this->getHTMLUnitToUnits($tag['attribute']['cellspacing'], 1, 'px');
tcpdf.php:		} elseif (isset($tag['border-spacing'])) {
tcpdf.php:			$cellspacing = $tag['border-spacing'];
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$w = ($tag['borderposition']['x'] - $xmax);
tcpdf.php:			$w = ($xmax - $tag['borderposition']['x']);
tcpdf.php:		$endpage = $this->page;
tcpdf.php:		$starty = $tag['borderposition']['y'] - $cellspacing['V'];
tcpdf.php:		$currentY = $this->y;
tcpdf.php:		$this->x = $x;
tcpdf.php:		$endcolumn = $this->current_column;
tcpdf.php:		if ($this->num_columns == 0) {
tcpdf.php:			$this->num_columns = 1;
tcpdf.php:		$border_start = TCPDF_STATIC::getBorderMode($border, $position='start', $this->opencell);
tcpdf.php:		$border_end = TCPDF_STATIC::getBorderMode($border, $position='end', $this->opencell);
tcpdf.php:		$border_middle = TCPDF_STATIC::getBorderMode($border, $position='middle', $this->opencell);
tcpdf.php:		$temp_page_regions = $this->page_regions;
tcpdf.php:		$this->page_regions = array();
tcpdf.php:			$this->setPage($page);
tcpdf.php:			if ($this->num_columns < 2) {
tcpdf.php:				// single-column mode
tcpdf.php:				$this->x = $x;
tcpdf.php:				$this->y = $this->tMargin;
tcpdf.php:				if (($this->rtl) AND ($this->pagedim[$page]['orm'] != $this->pagedim[$startpage]['orm'])) {
tcpdf.php:					$this->x -= ($this->pagedim[$page]['orm'] - $this->pagedim[$startpage]['orm']);
tcpdf.php:				} elseif ((!$this->rtl) AND ($this->pagedim[$page]['olm'] != $this->pagedim[$startpage]['olm'])) {
tcpdf.php:					$this->x += ($this->pagedim[$page]['olm'] - $this->pagedim[$startpage]['olm']);
tcpdf.php:					$this->selectColumn($column);
tcpdf.php:						$h = ($currentY - $y) + $cellspacing['V'];
tcpdf.php:						$this->y = $starty;
tcpdf.php:						$this->y = $starty;
tcpdf.php:						$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:						$h = $currentY - $this->y;
tcpdf.php:						$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:					$ccode .= $this->getCellCode($w, $h, '', $cborder, 1, '', $fill, '', 0, true)."\n";
tcpdf.php:				for ($column = $startcolumn; $column < $this->num_columns; ++$column) { // for each column
tcpdf.php:					$this->selectColumn($column);
tcpdf.php:						$this->y = $starty;
tcpdf.php:						$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:						$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:					$ccode .= $this->getCellCode($w, $h, '', $cborder, 1, '', $fill, '', 0, true)."\n";
tcpdf.php:					$this->selectColumn($column);
tcpdf.php:						$h = $currentY - $this->y;
tcpdf.php:						$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:					$ccode .= $this->getCellCode($w, $h, '', $cborder, 1, '', $fill, '', 0, true)."\n";
tcpdf.php:				for ($column = 0; $column < $this->num_columns; ++$column) { // for each column
tcpdf.php:					$this->selectColumn($column);
tcpdf.php:					$h = $this->h - $this->y - $this->bMargin;
tcpdf.php:					$ccode .= $this->getCellCode($w, $h, '', $cborder, 1, '', $fill, '', 0, true)."\n";
tcpdf.php:				if ($this->inxobj) {
tcpdf.php:					if (end($this->xobjects[$this->xobjid]['transfmrk']) !== false) {
tcpdf.php:						$pagemarkkey = key($this->xobjects[$this->xobjid]['transfmrk']);
tcpdf.php:						$pagemark = $this->xobjects[$this->xobjid]['transfmrk'][$pagemarkkey];
tcpdf.php:						$this->xobjects[$this->xobjid]['transfmrk'][$pagemarkkey] += $offsetlen;
tcpdf.php:						$pagemark = $this->xobjects[$this->xobjid]['intmrk'];
tcpdf.php:						$this->xobjects[$this->xobjid]['intmrk'] += $offsetlen;
tcpdf.php:					$pagebuff = $this->xobjects[$this->xobjid]['outdata'];
tcpdf.php:					$this->xobjects[$this->xobjid]['outdata'] = $pstart.$ccode.$pend;
tcpdf.php:					if (end($this->transfmrk[$this->page]) !== false) {
tcpdf.php:						$pagemarkkey = key($this->transfmrk[$this->page]);
tcpdf.php:						$pagemark = $this->transfmrk[$this->page][$pagemarkkey];
tcpdf.php:					} elseif ($this->InFooter) {
tcpdf.php:						$pagemark = $this->footerpos[$this->page];
tcpdf.php:						$pagemark = $this->intmrk[$this->page];
tcpdf.php:					$pagebuff = $this->getPageBuffer($this->page);
tcpdf.php:					$this->setPageBuffer($this->page, $pstart.$ccode.$pend);
tcpdf.php:					$this->bordermrk[$this->page] += $offsetlen;
tcpdf.php:					$this->cntmrk[$this->page] += $offsetlen;
tcpdf.php:		$this->page_regions = $temp_page_regions;
tcpdf.php:			$this->setFillColorArray($old_bgcolor);
tcpdf.php:		$this->x = $prev_x;
tcpdf.php:		$this->y = $prev_y;
tcpdf.php:		$this->lasth = $prev_lasth;
tcpdf.php:	 * @param string $symbol character or string to be used (legal values are: '' = automatic, '!' = auto bullet, '#' = auto numbering, 'disc', 'disc', 'circle', 'square', '1', 'decimal', 'decimal-leading-zero', 'i', 'lower-roman', 'I', 'upper-roman', 'a', 'lower-alpha', 'lower-latin', 'A', 'upper-alpha', 'upper-latin', 'lower-greek', 'img|type|width|height|image.ext')
tcpdf.php:	 * @since 4.0.028 (2008-09-26)
tcpdf.php:			$this->lisymbol = $symbol;
tcpdf.php:		$valid_symbols = array('!', '#', 'disc', 'circle', 'square', '1', 'decimal', 'decimal-leading-zero', 'i', 'lower-roman', 'I', 'upper-roman', 'a', 'lower-alpha', 'lower-latin', 'A', 'upper-alpha', 'upper-latin', 'lower-greek');
tcpdf.php:			$this->lisymbol = $symbol;
tcpdf.php:			$this->lisymbol = '';
tcpdf.php:	 * Set the booklet mode for double-sided pages.
tcpdf.php:	 * @since 4.2.000 (2008-10-29)
tcpdf.php:	public function setBooklet($booklet=true, $inner=-1, $outer=-1) {
tcpdf.php:		$this->booklet = $booklet;
tcpdf.php:			$this->lMargin = $inner;
tcpdf.php:			$this->rMargin = $outer;
tcpdf.php:	 * @since 4.2.000 (2008-10-29)
tcpdf.php:			$mtemp = $this->original_lMargin;
tcpdf.php:			$this->original_lMargin = $this->original_rMargin;
tcpdf.php:			$this->original_rMargin = $mtemp;
tcpdf.php:			$deltam = $this->original_lMargin - $this->original_rMargin;
tcpdf.php:			$this->lMargin += $deltam;
tcpdf.php:			$this->rMargin -= $deltam;
tcpdf.php:	 * @since 4.2.001 (2008-10-30)
tcpdf.php:		$this->tagvspaces = $tagvs;
tcpdf.php:	 * @since 4.2.007 (2008-11-12)
tcpdf.php:		return $this->customlistindent = floatval($width);
tcpdf.php:	 * @since 4.2.010 (2008-11-14)
tcpdf.php:		$this->opencell = $isopen;
tcpdf.php:	 * @since 4.4.003 (2008-12-09)
tcpdf.php:		$this->htmlLinkColorArray = $color;
tcpdf.php:		$this->htmlLinkFontStyle = $fontstyle;
tcpdf.php:	 * @since 4.4.004 (2008-12-10)
tcpdf.php:			$k = $this->k;
tcpdf.php:		} elseif (preg_match('/([0-9\.\-\+]+)/', $htmlval, $mnum)) {
tcpdf.php:			if (preg_match('/([a-z%]+)/', $htmlval, $munit)) {
tcpdf.php:			// relative-size
tcpdf.php:			// height of lower case 'x' (about half the font-size)
tcpdf.php:			// absolute-size
tcpdf.php:				$retval = (($value * $this->dpi) / $k);
tcpdf.php:				$retval = (($value / 2.54 * $this->dpi) / $k);
tcpdf.php:				$retval = (($value / 25.4 * $this->dpi) / $k);
tcpdf.php:				$retval = $this->pixelsToUnits($value);
tcpdf.php:					$retval *= $this->k;
tcpdf.php:	 * @since 4.4.004 (2008-12-10)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:		$size /= $this->k;
tcpdf.php:		$bgcolor = $this->bgcolor;
tcpdf.php:		$color = $this->fgcolor;
tcpdf.php:		$strokecolor = $this->strokecolor;
tcpdf.php:		$tmpx = $this->x;
tcpdf.php:		$lspace = $this->GetStringWidth('  ');
tcpdf.php:			$this->lispacer = '';
tcpdf.php:			$listtype = $deftypes[($listdepth - 1) % 3];
tcpdf.php:				if ($this->rtl) {
tcpdf.php:					$this->x += $lspace;
tcpdf.php:					$this->x -= $lspace;
tcpdf.php:				$this->Circle(($this->x + $r), ($this->y + ($this->lasth / 2)), $r, 0, 360, 'F', array(), $color, 8);
tcpdf.php:				if ($this->rtl) {
tcpdf.php:					$this->x += $lspace;
tcpdf.php:					$this->x -= $lspace;
tcpdf.php:				$prev_line_style = $this->linestyleWidth.' '.$this->linestyleCap.' '.$this->linestyleJoin.' '.$this->linestyleDash.' '.$this->DrawColor;
tcpdf.php:				$this->Circle(($this->x + $r), ($this->y + ($this->lasth / 2)), ($r * (1 - (1/6))), 0, 360, 'D', $new_line_style, array(), 8);
tcpdf.php:				$this->_out($prev_line_style); // restore line settings
tcpdf.php:				if ($this->rtl) {;
tcpdf.php:					$this->x += $lspace;
tcpdf.php:					$this->x -= $lspace;
tcpdf.php:				$this->Rect($this->x, ($this->y + (($this->lasth - $l) / 2)), $l, $l, 'F', array(), $color);
tcpdf.php:				if ($this->rtl) {;
tcpdf.php:					$this->x += $lspace;
tcpdf.php:					$this->x -= $lspace;
tcpdf.php:				$prev_y = $this->y;
tcpdf.php:						$this->ImageSVG($img[4], $this->x, ($this->y + (($this->lasth - $img[3]) / 2)), $img[2], $img[3], '', 'T', '', 0, false);
tcpdf.php:						$this->ImageEps($img[4], $this->x, ($this->y + (($this->lasth - $img[3]) / 2)), $img[2], $img[3], '', true, 'T', '', 0, false);
tcpdf.php:						$this->Image($img[4], $this->x, ($this->y + (($this->lasth - $img[3]) / 2)), $img[2], $img[3], $img[1], '', 'T', false, 300, '', false, false, 0, false, false, false);
tcpdf.php:				$this->y = $prev_y;
tcpdf.php:			// $this->listcount[$this->listnum];
tcpdf.php:				$textitem = $this->listcount[$this->listnum];
tcpdf.php:			case 'decimal-leading-zero': {
tcpdf.php:				$textitem = sprintf('%02d', $this->listcount[$this->listnum]);
tcpdf.php:			case 'lower-roman': {
tcpdf.php:				$textitem = strtolower(TCPDF_STATIC::intToRoman($this->listcount[$this->listnum]));
tcpdf.php:			case 'upper-roman': {
tcpdf.php:				$textitem = TCPDF_STATIC::intToRoman($this->listcount[$this->listnum]);
tcpdf.php:			case 'lower-alpha':
tcpdf.php:			case 'lower-latin': {
tcpdf.php:				$textitem = chr(97 + $this->listcount[$this->listnum] - 1);
tcpdf.php:			case 'upper-alpha':
tcpdf.php:			case 'upper-latin': {
tcpdf.php:				$textitem = chr(65 + $this->listcount[$this->listnum] - 1);
tcpdf.php:			case 'lower-greek': {
tcpdf.php:				$textitem = TCPDF_FONTS::unichr((945 + $this->listcount[$this->listnum] - 1), $this->isunicode);
tcpdf.php:			case 'cjk-ideographic': {
tcpdf.php:			case 'hiragana-iroha': {
tcpdf.php:			case 'katakana-iroha': {
tcpdf.php:				$textitem = $this->listcount[$this->listnum];
tcpdf.php:			$prev_y = $this->y;
tcpdf.php:			$h = $this->getCellHeight($this->FontSize);
tcpdf.php:			if ($this->checkPageBreak($h) OR ($this->y < $prev_y)) {
tcpdf.php:				$tmpx = $this->x;
tcpdf.php:			if ($this->rtl) {
tcpdf.php:			$lspace += $this->GetStringWidth($textitem);
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$this->x += $lspace;
tcpdf.php:				$this->x -= $lspace;
tcpdf.php:			$this->Write($this->lasth, $textitem, '', false, '', false, 0, false);
tcpdf.php:		$this->x = $tmpx;
tcpdf.php:		$this->lispacer = '^';
tcpdf.php:		$this->setFillColorArray($bgcolor);
tcpdf.php:		$this->setDrawColorArray($strokecolor);
tcpdf.php:		$this->settextColorArray($color);
tcpdf.php:	 * @since 4.2.010 (2008-11-14)
tcpdf.php:			'FontFamily' => $this->FontFamily,
tcpdf.php:			'FontStyle' => $this->FontStyle,
tcpdf.php:			'FontSizePt' => $this->FontSizePt,
tcpdf.php:			'rMargin' => $this->rMargin,
tcpdf.php:			'lMargin' => $this->lMargin,
tcpdf.php:			'cell_padding' => $this->cell_padding,
tcpdf.php:			'cell_margin' => $this->cell_margin,
tcpdf.php:			'LineWidth' => $this->LineWidth,
tcpdf.php:			'linestyleWidth' => $this->linestyleWidth,
tcpdf.php:			'linestyleCap' => $this->linestyleCap,
tcpdf.php:			'linestyleJoin' => $this->linestyleJoin,
tcpdf.php:			'linestyleDash' => $this->linestyleDash,
tcpdf.php:			'textrendermode' => $this->textrendermode,
tcpdf.php:			'textstrokewidth' => $this->textstrokewidth,
tcpdf.php:			'DrawColor' => $this->DrawColor,
tcpdf.php:			'FillColor' => $this->FillColor,
tcpdf.php:			'TextColor' => $this->TextColor,
tcpdf.php:			'ColorFlag' => $this->ColorFlag,
tcpdf.php:			'bgcolor' => $this->bgcolor,
tcpdf.php:			'fgcolor' => $this->fgcolor,
tcpdf.php:			'htmlvspace' => $this->htmlvspace,
tcpdf.php:			'listindent' => $this->listindent,
tcpdf.php:			'listindentlevel' => $this->listindentlevel,
tcpdf.php:			'listnum' => $this->listnum,
tcpdf.php:			'listordered' => $this->listordered,
tcpdf.php:			'listcount' => $this->listcount,
tcpdf.php:			'lispacer' => $this->lispacer,
tcpdf.php:			'cell_height_ratio' => $this->cell_height_ratio,
tcpdf.php:			'font_stretching' => $this->font_stretching,
tcpdf.php:			'font_spacing' => $this->font_spacing,
tcpdf.php:			'alpha' => $this->alpha,
tcpdf.php:			'lasth' => $this->lasth,
tcpdf.php:			'tMargin' => $this->tMargin,
tcpdf.php:			'bMargin' => $this->bMargin,
tcpdf.php:			'AutoPageBreak' => $this->AutoPageBreak,
tcpdf.php:			'PageBreakTrigger' => $this->PageBreakTrigger,
tcpdf.php:			'x' => $this->x,
tcpdf.php:			'y' => $this->y,
tcpdf.php:			'w' => $this->w,
tcpdf.php:			'h' => $this->h,
tcpdf.php:			'wPt' => $this->wPt,
tcpdf.php:			'hPt' => $this->hPt,
tcpdf.php:			'fwPt' => $this->fwPt,
tcpdf.php:			'fhPt' => $this->fhPt,
tcpdf.php:			'page' => $this->page,
tcpdf.php:			'current_column' => $this->current_column,
tcpdf.php:			'num_columns' => $this->num_columns
tcpdf.php:	 * @since 4.2.010 (2008-11-14)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:		$this->FontFamily = $gvars['FontFamily'];
tcpdf.php:		$this->FontStyle = $gvars['FontStyle'];
tcpdf.php:		$this->FontSizePt = $gvars['FontSizePt'];
tcpdf.php:		$this->rMargin = $gvars['rMargin'];
tcpdf.php:		$this->lMargin = $gvars['lMargin'];
tcpdf.php:		$this->cell_padding = $gvars['cell_padding'];
tcpdf.php:		$this->cell_margin = $gvars['cell_margin'];
tcpdf.php:		$this->LineWidth = $gvars['LineWidth'];
tcpdf.php:		$this->linestyleWidth = $gvars['linestyleWidth'];
tcpdf.php:		$this->linestyleCap = $gvars['linestyleCap'];
tcpdf.php:		$this->linestyleJoin = $gvars['linestyleJoin'];
tcpdf.php:		$this->linestyleDash = $gvars['linestyleDash'];
tcpdf.php:		$this->textrendermode = $gvars['textrendermode'];
tcpdf.php:		$this->textstrokewidth = $gvars['textstrokewidth'];
tcpdf.php:		$this->DrawColor = $gvars['DrawColor'];
tcpdf.php:		$this->FillColor = $gvars['FillColor'];
tcpdf.php:		$this->TextColor = $gvars['TextColor'];
tcpdf.php:		$this->ColorFlag = $gvars['ColorFlag'];
tcpdf.php:		$this->bgcolor = $gvars['bgcolor'];
tcpdf.php:		$this->fgcolor = $gvars['fgcolor'];
tcpdf.php:		$this->htmlvspace = $gvars['htmlvspace'];
tcpdf.php:		$this->listindent = $gvars['listindent'];
tcpdf.php:		$this->listindentlevel = $gvars['listindentlevel'];
tcpdf.php:		$this->listnum = $gvars['listnum'];
tcpdf.php:		$this->listordered = $gvars['listordered'];
tcpdf.php:		$this->listcount = $gvars['listcount'];
tcpdf.php:		$this->lispacer = $gvars['lispacer'];
tcpdf.php:		$this->cell_height_ratio = $gvars['cell_height_ratio'];
tcpdf.php:		$this->font_stretching = $gvars['font_stretching'];
tcpdf.php:		$this->font_spacing = $gvars['font_spacing'];
tcpdf.php:		$this->alpha = $gvars['alpha'];
tcpdf.php:			$this->lasth = $gvars['lasth'];
tcpdf.php:			$this->tMargin = $gvars['tMargin'];
tcpdf.php:			$this->bMargin = $gvars['bMargin'];
tcpdf.php:			$this->AutoPageBreak = $gvars['AutoPageBreak'];
tcpdf.php:			$this->PageBreakTrigger = $gvars['PageBreakTrigger'];
tcpdf.php:			$this->x = $gvars['x'];
tcpdf.php:			$this->y = $gvars['y'];
tcpdf.php:			$this->w = $gvars['w'];
tcpdf.php:			$this->h = $gvars['h'];
tcpdf.php:			$this->wPt = $gvars['wPt'];
tcpdf.php:			$this->hPt = $gvars['hPt'];
tcpdf.php:			$this->fwPt = $gvars['fwPt'];
tcpdf.php:			$this->fhPt = $gvars['fhPt'];
tcpdf.php:			$this->page = $gvars['page'];
tcpdf.php:			$this->current_column = $gvars['current_column'];
tcpdf.php:			$this->num_columns = $gvars['num_columns'];
tcpdf.php:		$this->_out(''.$this->linestyleWidth.' '.$this->linestyleCap.' '.$this->linestyleJoin.' '.$this->linestyleDash.' '.$this->DrawColor.' '.$this->FillColor.'');
tcpdf.php:		if (!TCPDF_STATIC::empty_string($this->FontFamily)) {
tcpdf.php:			$this->setFont($this->FontFamily, $this->FontStyle, $this->FontSizePt);
tcpdf.php:		$this->_out('q');
tcpdf.php:		$this->_out('Q');
tcpdf.php:	 * @since 4.5.000 (2009-01-02)
tcpdf.php:		$this->bufferlen += strlen($data);
tcpdf.php:		$this->buffer .= $data;
tcpdf.php:	 * @since 5.5.000 (2010-06-22)
tcpdf.php:		$this->bufferlen = strlen($data);
tcpdf.php:		$this->buffer = $data;
tcpdf.php:	 * @since 4.5.000 (2009-01-02)
tcpdf.php:		return $this->buffer;
tcpdf.php:	 * @since 4.5.000 (2008-12-31)
tcpdf.php:			$this->pages[$page] .= $data;
tcpdf.php:			$this->pages[$page] = $data;
tcpdf.php:		if ($append AND isset($this->pagelen[$page])) {
tcpdf.php:			$this->pagelen[$page] += strlen($data);
tcpdf.php:			$this->pagelen[$page] = strlen($data);
tcpdf.php:	 * @since 4.5.000 (2008-12-31)
tcpdf.php:		if (isset($this->pages[$page])) {
tcpdf.php:			return $this->pages[$page];
tcpdf.php:	 * @since 4.5.000 (2008-12-31)
tcpdf.php:		if (($data['i'] = array_search($image, $this->imagekeys)) === FALSE) {
tcpdf.php:			$this->imagekeys[$this->numimages] = $image;
tcpdf.php:			$data['i'] = $this->numimages;
tcpdf.php:			++$this->numimages;
tcpdf.php:		$this->images[$image] = $data;
tcpdf.php:	 * Set image buffer content for a specified sub-key.
tcpdf.php:	 * @param string $key image sub-key
tcpdf.php:	 * @since 4.5.000 (2008-12-31)
tcpdf.php:		if (!isset($this->images[$image])) {
tcpdf.php:			$this->setImageBuffer($image, array());
tcpdf.php:		$this->images[$image][$key] = $data;
tcpdf.php:	 * @since 4.5.000 (2008-12-31)
tcpdf.php:		if (isset($this->images[$image])) {
tcpdf.php:			return $this->images[$image];
tcpdf.php:	 * @since 4.5.000 (2009-01-02)
tcpdf.php:		$this->fonts[$font] = $data;
tcpdf.php:		if (!in_array($font, $this->fontkeys)) {
tcpdf.php:			$this->fontkeys[] = $font;
tcpdf.php:			++$this->n;
tcpdf.php:			$this->font_obj_ids[$font] = $this->n;
tcpdf.php:			$this->setFontSubBuffer($font, 'n', $this->n);
tcpdf.php:	 * @param string $key font sub-key
tcpdf.php:	 * @since 4.5.000 (2009-01-02)
tcpdf.php:		if (!isset($this->fonts[$font])) {
tcpdf.php:			$this->setFontBuffer($font, array());
tcpdf.php:		$this->fonts[$font][$key] = $data;
tcpdf.php:	 * @since 4.5.000 (2009-01-02)
tcpdf.php:		if (isset($this->fonts[$font])) {
tcpdf.php:			return $this->fonts[$font];
tcpdf.php:	 * @since 4.5.000 (2009-01-02)
tcpdf.php:		if (($frompage > $this->numpages) OR ($frompage <= $topage)) {
tcpdf.php:		if ($frompage == $this->page) {
tcpdf.php:			$this->endPage();
tcpdf.php:		// move all page-related states
tcpdf.php:		$tmppage = $this->getPageBuffer($frompage);
tcpdf.php:		$tmppagedim = $this->pagedim[$frompage];
tcpdf.php:		$tmppagelen = $this->pagelen[$frompage];
tcpdf.php:		$tmpintmrk = $this->intmrk[$frompage];
tcpdf.php:		$tmpbordermrk = $this->bordermrk[$frompage];
tcpdf.php:		$tmpcntmrk = $this->cntmrk[$frompage];
tcpdf.php:		$tmppageobjects = $this->pageobjects[$frompage];
tcpdf.php:		if (isset($this->footerpos[$frompage])) {
tcpdf.php:			$tmpfooterpos = $this->footerpos[$frompage];
tcpdf.php:		if (isset($this->footerlen[$frompage])) {
tcpdf.php:			$tmpfooterlen = $this->footerlen[$frompage];
tcpdf.php:		if (isset($this->transfmrk[$frompage])) {
tcpdf.php:			$tmptransfmrk = $this->transfmrk[$frompage];
tcpdf.php:		if (isset($this->PageAnnots[$frompage])) {
tcpdf.php:			$tmpannots = $this->PageAnnots[$frompage];
tcpdf.php:		if (isset($this->newpagegroup) AND !empty($this->newpagegroup)) {
tcpdf.php:			for ($i = $frompage; $i > $topage; --$i) {
tcpdf.php:				if (isset($this->newpagegroup[$i]) AND (($i + $this->pagegroups[$this->newpagegroup[$i]]) > $frompage)) {
tcpdf.php:					--$this->pagegroups[$this->newpagegroup[$i]];
tcpdf.php:			for ($i = $topage; $i > 0; --$i) {
tcpdf.php:				if (isset($this->newpagegroup[$i]) AND (($i + $this->pagegroups[$this->newpagegroup[$i]]) > $topage)) {
tcpdf.php:					++$this->pagegroups[$this->newpagegroup[$i]];
tcpdf.php:		for ($i = $frompage; $i > $topage; --$i) {
tcpdf.php:			$j = $i - 1;
tcpdf.php:			$this->setPageBuffer($i, $this->getPageBuffer($j));
tcpdf.php:			$this->pagedim[$i] = $this->pagedim[$j];
tcpdf.php:			$this->pagelen[$i] = $this->pagelen[$j];
tcpdf.php:			$this->intmrk[$i] = $this->intmrk[$j];
tcpdf.php:			$this->bordermrk[$i] = $this->bordermrk[$j];
tcpdf.php:			$this->cntmrk[$i] = $this->cntmrk[$j];
tcpdf.php:			$this->pageobjects[$i] = $this->pageobjects[$j];
tcpdf.php:			if (isset($this->footerpos[$j])) {
tcpdf.php:				$this->footerpos[$i] = $this->footerpos[$j];
tcpdf.php:			} elseif (isset($this->footerpos[$i])) {
tcpdf.php:				unset($this->footerpos[$i]);
tcpdf.php:			if (isset($this->footerlen[$j])) {
tcpdf.php:				$this->footerlen[$i] = $this->footerlen[$j];
tcpdf.php:			} elseif (isset($this->footerlen[$i])) {
tcpdf.php:				unset($this->footerlen[$i]);
tcpdf.php:			if (isset($this->transfmrk[$j])) {
tcpdf.php:				$this->transfmrk[$i] = $this->transfmrk[$j];
tcpdf.php:			} elseif (isset($this->transfmrk[$i])) {
tcpdf.php:				unset($this->transfmrk[$i]);
tcpdf.php:			if (isset($this->PageAnnots[$j])) {
tcpdf.php:				$this->PageAnnots[$i] = $this->PageAnnots[$j];
tcpdf.php:			} elseif (isset($this->PageAnnots[$i])) {
tcpdf.php:				unset($this->PageAnnots[$i]);
tcpdf.php:			if (isset($this->newpagegroup[$j])) {
tcpdf.php:				$this->newpagegroup[$i] = $this->newpagegroup[$j];
tcpdf.php:				unset($this->newpagegroup[$j]);
tcpdf.php:			if ($this->currpagegroup == $j) {
tcpdf.php:				$this->currpagegroup = $i;
tcpdf.php:		$this->setPageBuffer($topage, $tmppage);
tcpdf.php:		$this->pagedim[$topage] = $tmppagedim;
tcpdf.php:		$this->pagelen[$topage] = $tmppagelen;
tcpdf.php:		$this->intmrk[$topage] = $tmpintmrk;
tcpdf.php:		$this->bordermrk[$topage] = $tmpbordermrk;
tcpdf.php:		$this->cntmrk[$topage] = $tmpcntmrk;
tcpdf.php:		$this->pageobjects[$topage] = $tmppageobjects;
tcpdf.php:			$this->footerpos[$topage] = $tmpfooterpos;
tcpdf.php:		} elseif (isset($this->footerpos[$topage])) {
tcpdf.php:			unset($this->footerpos[$topage]);
tcpdf.php:			$this->footerlen[$topage] = $tmpfooterlen;
tcpdf.php:		} elseif (isset($this->footerlen[$topage])) {
tcpdf.php:			unset($this->footerlen[$topage]);
tcpdf.php:			$this->transfmrk[$topage] = $tmptransfmrk;
tcpdf.php:		} elseif (isset($this->transfmrk[$topage])) {
tcpdf.php:			unset($this->transfmrk[$topage]);
tcpdf.php:			$this->PageAnnots[$topage] = $tmpannots;
tcpdf.php:		} elseif (isset($this->PageAnnots[$topage])) {
tcpdf.php:			unset($this->PageAnnots[$topage]);
tcpdf.php:		$tmpoutlines = $this->outlines;
tcpdf.php:					$this->outlines[$key]['p'] = ($outline['p'] + 1);
tcpdf.php:					$this->outlines[$key]['p'] = $topage;
tcpdf.php:		$tmpdests = $this->dests;
tcpdf.php:					$this->dests[$key]['p'] = ($dest['p'] + 1);
tcpdf.php:					$this->dests[$key]['p'] = $topage;
tcpdf.php:		$tmplinks = $this->links;
tcpdf.php:					$this->links[$key]['p'] = ($link['p'] + 1);
tcpdf.php:					$this->links[$key]['p'] = $topage;
tcpdf.php:		if (preg_match_all('/this\.addField\(\'([^\']*)\',\'([^\']*)\',([0-9]+)/', $this->javascript, $pamatch) > 0) {
tcpdf.php:				--$newpage;
tcpdf.php:				$this->javascript = str_replace($pmatch, $newjs, $this->javascript);
tcpdf.php:		$this->lastPage(true);
tcpdf.php:	 * @since 4.6.004 (2009-04-23)
tcpdf.php:		if (($page < 1) OR ($page > $this->numpages)) {
tcpdf.php:		unset($this->pages[$page]);
tcpdf.php:		unset($this->pagedim[$page]);
tcpdf.php:		unset($this->pagelen[$page]);
tcpdf.php:		unset($this->intmrk[$page]);
tcpdf.php:		unset($this->bordermrk[$page]);
tcpdf.php:		unset($this->cntmrk[$page]);
tcpdf.php:		foreach ($this->pageobjects[$page] as $oid) {
tcpdf.php:			if (isset($this->offsets[$oid])){
tcpdf.php:				unset($this->offsets[$oid]);
tcpdf.php:		unset($this->pageobjects[$page]);
tcpdf.php:		if (isset($this->footerpos[$page])) {
tcpdf.php:			unset($this->footerpos[$page]);
tcpdf.php:		if (isset($this->footerlen[$page])) {
tcpdf.php:			unset($this->footerlen[$page]);
tcpdf.php:		if (isset($this->transfmrk[$page])) {
tcpdf.php:			unset($this->transfmrk[$page]);
tcpdf.php:		if (isset($this->PageAnnots[$page])) {
tcpdf.php:			unset($this->PageAnnots[$page]);
tcpdf.php:		if (isset($this->newpagegroup) AND !empty($this->newpagegroup)) {
tcpdf.php:			for ($i = $page; $i > 0; --$i) {
tcpdf.php:				if (isset($this->newpagegroup[$i]) AND (($i + $this->pagegroups[$this->newpagegroup[$i]]) > $page)) {
tcpdf.php:					--$this->pagegroups[$this->newpagegroup[$i]];
tcpdf.php:		if (isset($this->pageopen[$page])) {
tcpdf.php:			unset($this->pageopen[$page]);
tcpdf.php:		if ($page < $this->numpages) {
tcpdf.php:			for ($i = $page; $i < $this->numpages; ++$i) {
tcpdf.php:				$this->setPageBuffer($i, $this->getPageBuffer($j));
tcpdf.php:				$this->pagedim[$i] = $this->pagedim[$j];
tcpdf.php:				$this->pagelen[$i] = $this->pagelen[$j];
tcpdf.php:				$this->intmrk[$i] = $this->intmrk[$j];
tcpdf.php:				$this->bordermrk[$i] = $this->bordermrk[$j];
tcpdf.php:				$this->cntmrk[$i] = $this->cntmrk[$j];
tcpdf.php:				$this->pageobjects[$i] = $this->pageobjects[$j];
tcpdf.php:				if (isset($this->footerpos[$j])) {
tcpdf.php:					$this->footerpos[$i] = $this->footerpos[$j];
tcpdf.php:				} elseif (isset($this->footerpos[$i])) {
tcpdf.php:					unset($this->footerpos[$i]);
tcpdf.php:				if (isset($this->footerlen[$j])) {
tcpdf.php:					$this->footerlen[$i] = $this->footerlen[$j];
tcpdf.php:				} elseif (isset($this->footerlen[$i])) {
tcpdf.php:					unset($this->footerlen[$i]);
tcpdf.php:				if (isset($this->transfmrk[$j])) {
tcpdf.php:					$this->transfmrk[$i] = $this->transfmrk[$j];
tcpdf.php:				} elseif (isset($this->transfmrk[$i])) {
tcpdf.php:					unset($this->transfmrk[$i]);
tcpdf.php:				if (isset($this->PageAnnots[$j])) {
tcpdf.php:					$this->PageAnnots[$i] = $this->PageAnnots[$j];
tcpdf.php:				} elseif (isset($this->PageAnnots[$i])) {
tcpdf.php:					unset($this->PageAnnots[$i]);
tcpdf.php:				if (isset($this->newpagegroup[$j])) {
tcpdf.php:					$this->newpagegroup[$i] = $this->newpagegroup[$j];
tcpdf.php:					unset($this->newpagegroup[$j]);
tcpdf.php:				if ($this->currpagegroup == $j) {
tcpdf.php:					$this->currpagegroup = $i;
tcpdf.php:				if (isset($this->pageopen[$j])) {
tcpdf.php:					$this->pageopen[$i] = $this->pageopen[$j];
tcpdf.php:				} elseif (isset($this->pageopen[$i])) {
tcpdf.php:					unset($this->pageopen[$i]);
tcpdf.php:			unset($this->pages[$this->numpages]);
tcpdf.php:			unset($this->pagedim[$this->numpages]);
tcpdf.php:			unset($this->pagelen[$this->numpages]);
tcpdf.php:			unset($this->intmrk[$this->numpages]);
tcpdf.php:			unset($this->bordermrk[$this->numpages]);
tcpdf.php:			unset($this->cntmrk[$this->numpages]);
tcpdf.php:			foreach ($this->pageobjects[$this->numpages] as $oid) {
tcpdf.php:				if (isset($this->offsets[$oid])){
tcpdf.php:					unset($this->offsets[$oid]);
tcpdf.php:			unset($this->pageobjects[$this->numpages]);
tcpdf.php:			if (isset($this->footerpos[$this->numpages])) {
tcpdf.php:				unset($this->footerpos[$this->numpages]);
tcpdf.php:			if (isset($this->footerlen[$this->numpages])) {
tcpdf.php:				unset($this->footerlen[$this->numpages]);
tcpdf.php:			if (isset($this->transfmrk[$this->numpages])) {
tcpdf.php:				unset($this->transfmrk[$this->numpages]);
tcpdf.php:			if (isset($this->PageAnnots[$this->numpages])) {
tcpdf.php:				unset($this->PageAnnots[$this->numpages]);
tcpdf.php:			if (isset($this->newpagegroup[$this->numpages])) {
tcpdf.php:				unset($this->newpagegroup[$this->numpages]);
tcpdf.php:			if ($this->currpagegroup == $this->numpages) {
tcpdf.php:				$this->currpagegroup = ($this->numpages - 1);
tcpdf.php:			if (isset($this->pagegroups[$this->numpages])) {
tcpdf.php:				unset($this->pagegroups[$this->numpages]);
tcpdf.php:			if (isset($this->pageopen[$this->numpages])) {
tcpdf.php:				unset($this->pageopen[$this->numpages]);
tcpdf.php:		--$this->numpages;
tcpdf.php:		$this->page = $this->numpages;
tcpdf.php:		$tmpoutlines = $this->outlines;
tcpdf.php:					$this->outlines[$key]['p'] = $outline['p'] - 1;
tcpdf.php:					unset($this->outlines[$key]);
tcpdf.php:		$tmpdests = $this->dests;
tcpdf.php:					$this->dests[$key]['p'] = $dest['p'] - 1;
tcpdf.php:					unset($this->dests[$key]);
tcpdf.php:		$tmplinks = $this->links;
tcpdf.php:					$this->links[$key]['p'] = $link['p'] - 1;
tcpdf.php:					unset($this->links[$key]);
tcpdf.php:		if (preg_match_all('/this\.addField\(\'([^\']*)\',\'([^\']*)\',([0-9]+)/', $this->javascript, $pamatch) > 0) {
tcpdf.php:					$newpage = ($pagenum - 1);
tcpdf.php:				--$newpage;
tcpdf.php:				$this->javascript = str_replace($pmatch, $newjs, $this->javascript);
tcpdf.php:		if ($this->numpages > 0) {
tcpdf.php:			$this->lastPage(true);
tcpdf.php:	 * @since 4.9.015 (2010-04-20)
tcpdf.php:			$page = $this->page;
tcpdf.php:		if (($page < 1) OR ($page > $this->numpages)) {
tcpdf.php:		$this->endPage();
tcpdf.php:		// copy all page-related states
tcpdf.php:		++$this->numpages;
tcpdf.php:		$this->page = $this->numpages;
tcpdf.php:		$this->setPageBuffer($this->page, $this->getPageBuffer($page));
tcpdf.php:		$this->pagedim[$this->page] = $this->pagedim[$page];
tcpdf.php:		$this->pagelen[$this->page] = $this->pagelen[$page];
tcpdf.php:		$this->intmrk[$this->page] = $this->intmrk[$page];
tcpdf.php:		$this->bordermrk[$this->page] = $this->bordermrk[$page];
tcpdf.php:		$this->cntmrk[$this->page] = $this->cntmrk[$page];
tcpdf.php:		$this->pageobjects[$this->page] = $this->pageobjects[$page];
tcpdf.php:		$this->pageopen[$this->page] = false;
tcpdf.php:		if (isset($this->footerpos[$page])) {
tcpdf.php:			$this->footerpos[$this->page] = $this->footerpos[$page];
tcpdf.php:		if (isset($this->footerlen[$page])) {
tcpdf.php:			$this->footerlen[$this->page] = $this->footerlen[$page];
tcpdf.php:		if (isset($this->transfmrk[$page])) {
tcpdf.php:			$this->transfmrk[$this->page] = $this->transfmrk[$page];
tcpdf.php:		if (isset($this->PageAnnots[$page])) {
tcpdf.php:			$this->PageAnnots[$this->page] = $this->PageAnnots[$page];
tcpdf.php:		if (isset($this->newpagegroup[$page])) {
tcpdf.php:			$this->newpagegroup[$this->page] = sizeof($this->newpagegroup) + 1;
tcpdf.php:			$this->currpagegroup = $this->newpagegroup[$this->page];
tcpdf.php:			$this->pagegroups[$this->currpagegroup] = 1;
tcpdf.php:		} elseif (isset($this->currpagegroup) AND ($this->currpagegroup > 0)) {
tcpdf.php:			++$this->pagegroups[$this->currpagegroup];
tcpdf.php:		$tmpoutlines = $this->outlines;
tcpdf.php:				$this->outlines[] = array('t' => $outline['t'], 'l' => $outline['l'], 'x' => $outline['x'], 'y' => $outline['y'], 'p' => $this->page, 'f' => $outline['f'], 's' => $outline['s'], 'c' => $outline['c']);
tcpdf.php:		$tmplinks = $this->links;
tcpdf.php:				$this->links[] = array('p' => $this->page, 'y' => $link['y'], 'f' => $link['f']);
tcpdf.php:		$this->lastPage(true);
tcpdf.php:	 * @since 4.5.000 (2009-01-02)
tcpdf.php:		$fontsize = $this->FontSizePt;
tcpdf.php:		$fontfamily = $this->FontFamily;
tcpdf.php:		$fontstyle = $this->FontStyle;
tcpdf.php:		$w = $this->w - $this->lMargin - $this->rMargin;
tcpdf.php:		$spacer = $this->GetStringWidth(chr(32)) * 4;
tcpdf.php:		$lmargin = $this->lMargin;
tcpdf.php:		$rmargin = $this->rMargin;
tcpdf.php:		$x_start = $this->GetX();
tcpdf.php:		$page_first = $this->page;
tcpdf.php:		$current_page = $this->page;
tcpdf.php:		$current_column = $this->current_column;
tcpdf.php:			$numbersfont = $this->default_monospaced_font;
tcpdf.php:		$this->setFont($numbersfont, $fontstyle, $fontsize);
tcpdf.php:		$numwidth = $this->GetStringWidth('00000');
tcpdf.php:		foreach ($this->outlines as $key => $outline) {
tcpdf.php:			if (($this->page > $page_first) AND ($outline['p'] >= $this->numpages)) {
tcpdf.php:				$outline['p'] += ($this->page - $page_first);
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$this->setFont($fontfamily, $outline['s'].'B', $fontsize);
tcpdf.php:				$this->setFont($fontfamily, $outline['s'], $fontsize - $outline['l']);
tcpdf.php:			$this->setTextColorArray($outline['c']);
tcpdf.php:			$this->checkPageBreak(2 * $this->getCellHeight($this->FontSize));
tcpdf.php:			if (($this->page == $current_page) AND ($this->current_column == $current_column)) {
tcpdf.php:				$this->lMargin = $lmargin;
tcpdf.php:				$this->rMargin = $rmargin;
tcpdf.php:				if ($this->current_column != $current_column) {
tcpdf.php:					if ($this->rtl) {
tcpdf.php:						$x_start = $this->w - $this->columns[$this->current_column]['x'];
tcpdf.php:						$x_start = $this->columns[$this->current_column]['x'];
tcpdf.php:				$lmargin = $this->lMargin;
tcpdf.php:				$rmargin = $this->rMargin;
tcpdf.php:				$current_page = $this->page;
tcpdf.php:				$current_column = $this->current_column;
tcpdf.php:			$this->setX($x_start);
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$this->x -= $indent;
tcpdf.php:				$this->rMargin = $this->w - $this->x;
tcpdf.php:				$this->x += $indent;
tcpdf.php:				$this->lMargin = $this->x;
tcpdf.php:			$link = $this->AddLink();
tcpdf.php:			$this->setLink($link, $outline['y'], $outline['p']);
tcpdf.php:			if ($this->rtl) {
tcpdf.php:			$this->Write(0, $txt, $link, false, $aligntext, false, 0, false, false, 0, $numwidth, '');
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$tw = $this->x - $this->lMargin;
tcpdf.php:				$tw = $this->w - $this->rMargin - $this->x;
tcpdf.php:			$this->setFont($numbersfont, $fontstyle, $fontsize);
tcpdf.php:				if ($this->isUnicodeFont()) {
tcpdf.php:			$fw = ($tw - $this->GetStringWidth($pagenum.$filler));
tcpdf.php:			$wfiller = $this->GetStringWidth($filler);
tcpdf.php:			if ($this->rtl) {
tcpdf.php:			$this->Cell($tw, 0, $pagenum, 0, 1, $alignnum, 0, $link, 0);
tcpdf.php:		$page_last = $this->getPage();
tcpdf.php:		$numpages = ($page_last - $page_first + 1);
tcpdf.php:		if ($this->booklet) {
tcpdf.php:				$this->addPage();
tcpdf.php:				$this->addPage();
tcpdf.php:				$temppage = $this->getPageBuffer($p);
tcpdf.php:					$pnalias = $this->getInternalPageNumberAliases($a);
tcpdf.php:					if (($n >= $page) AND ($n <= $this->numpages)) {
tcpdf.php:					$na = TCPDF_STATIC::formatTOCPageNumber(($this->starting_page_number + $np - 1));
tcpdf.php:					$nu = TCPDF_FONTS::UTF8ToUTF16BE($na, false, $this->isunicode, $this->CurrentFont);
tcpdf.php:						$sfill = str_repeat($filler, max(0, (strlen($u) - strlen($nu.' '))));
tcpdf.php:						if ($this->rtl) {
tcpdf.php:							$nr = $nu.TCPDF_FONTS::UTF8ToUTF16BE(' '.$sfill, false, $this->isunicode, $this->CurrentFont);
tcpdf.php:							$nr = TCPDF_FONTS::UTF8ToUTF16BE($sfill.' ', false, $this->isunicode, $this->CurrentFont).$nu;
tcpdf.php:						$sfill = str_repeat($filler, max(0, (strlen($a) - strlen($na.' '))));
tcpdf.php:						if ($this->rtl) {
tcpdf.php:				$this->setPageBuffer($p, $temppage);
tcpdf.php:			$this->Bookmark($toc_name, 0, 0, $page_first, $style, $color);
tcpdf.php:				$this->movePage($page_last, $page_first);
tcpdf.php:				$this->movePage($page_last, $page);
tcpdf.php:	 * @since 5.0.001 (2010-05-06)
tcpdf.php:		$prev_htmlLinkColorArray = $this->htmlLinkColorArray;
tcpdf.php:		$prev_htmlLinkFontStyle = $this->htmlLinkFontStyle;
tcpdf.php:		$this->htmlLinkColorArray = array();
tcpdf.php:		$this->htmlLinkFontStyle = '';
tcpdf.php:		$page_first = $this->getPage();
tcpdf.php:		$current_font = $this->FontFamily;
tcpdf.php:			$dom = $this->getHtmlDomArray($html);
tcpdf.php:					$this->setFont($dom[($key - 1)]['fontname']);
tcpdf.php:					$templates['F'.$level] = $this->isUnicodeFont();
tcpdf.php:		$this->setFont($current_font);
tcpdf.php:		foreach ($this->outlines as $key => $outline) {
tcpdf.php:			$this->writeHTML($row, false, false, true, false, '');
tcpdf.php:		$this->htmlLinkColorArray = $prev_htmlLinkColorArray;
tcpdf.php:		$this->htmlLinkFontStyle = $prev_htmlLinkFontStyle;
tcpdf.php:		$page_last = $this->getPage();
tcpdf.php:		$numpages = ($page_last - $page_first + 1);
tcpdf.php:		if ($this->booklet) {
tcpdf.php:				$this->addPage();
tcpdf.php:				$this->addPage();
tcpdf.php:				$temppage = $this->getPageBuffer($p);
tcpdf.php:					$pnalias = $this->getInternalPageNumberAliases($a);
tcpdf.php:					$na = TCPDF_STATIC::formatTOCPageNumber(($this->starting_page_number + $np - 1));
tcpdf.php:					$nu = TCPDF_FONTS::UTF8ToUTF16BE($na, false, $this->isunicode, $this->CurrentFont);
tcpdf.php:							$sfill = str_repeat($filler, (strlen($u) - strlen($nu.' ')));
tcpdf.php:							if ($this->rtl) {
tcpdf.php:								$nr = $nu.TCPDF_FONTS::UTF8ToUTF16BE(' '.$sfill, false, $this->isunicode, $this->CurrentFont);
tcpdf.php:								$nr = TCPDF_FONTS::UTF8ToUTF16BE($sfill.' ', false, $this->isunicode, $this->CurrentFont).$nu;
tcpdf.php:							$sfill = str_repeat($filler, (strlen($a) - strlen($na.' ')));
tcpdf.php:							if ($this->rtl) {
tcpdf.php:				$this->setPageBuffer($p, $temppage);
tcpdf.php:			$this->Bookmark($toc_name, 0, 0, $page_first, $style, $color);
tcpdf.php:				$this->movePage($page_last, $page_first);
tcpdf.php:				$this->movePage($page_last, $page);
tcpdf.php:	 * @since 4.5.029 (2009-03-19)
tcpdf.php:		if (isset($this->objcopy)) {
tcpdf.php:			$this->commitTransaction();
tcpdf.php:		$this->start_transaction_page = $this->page;
tcpdf.php:		$this->start_transaction_y = $this->y;
tcpdf.php:		$this->objcopy = TCPDF_STATIC::objclone($this);
tcpdf.php:	 * @since 4.5.029 (2009-03-19)
tcpdf.php:		if (isset($this->objcopy)) {
tcpdf.php:			$this->objcopy->_destroy(true, true);
tcpdf.php:			$this->objcopy->file_id = NULL;
tcpdf.php:			unset($this->objcopy);
tcpdf.php:	 * @since 4.5.029 (2009-03-19)
tcpdf.php:		if (isset($this->objcopy)) {
tcpdf.php:			$objcopy = $this->objcopy;
tcpdf.php:			$this->_destroy(true, true);
tcpdf.php:					$this->$key = $value;
tcpdf.php:				$objcopy->_destroy(true, true);
tcpdf.php:				$objcopy->file_id = NULL;
tcpdf.php:			$this->file_id = NULL;
tcpdf.php:	// --- MULTI COLUMNS METHODS -----------------------
tcpdf.php:	 * @since 4.9.001 (2010-03-28)
tcpdf.php:		$this->columns = array();
tcpdf.php:			$this->columns = array();
tcpdf.php:			$maxwidth = ($this->w - $this->original_lMargin - $this->original_rMargin) / $numcols;
tcpdf.php:				$y = $this->y;
tcpdf.php:			$space = (($this->w - $this->original_lMargin - $this->original_rMargin - ($numcols * $width)) / ($numcols - 1));
tcpdf.php:				$this->columns[$i] = array('w' => $width, 's' => $space, 'y' => $y);
tcpdf.php:		$this->num_columns = $numcols;
tcpdf.php:		$this->current_column = 0;
tcpdf.php:		$this->column_start_page = $this->page;
tcpdf.php:		$this->selectColumn(0);
tcpdf.php:	 * @since 5.9.072 (2011-04-26)
tcpdf.php:		$this->lMargin = $this->original_lMargin;
tcpdf.php:		$this->rMargin = $this->original_rMargin;
tcpdf.php:		$this->setEqualColumns();
tcpdf.php:	 * @since 4.9.001 (2010-03-28)
tcpdf.php:		$this->columns = $columns;
tcpdf.php:		$this->num_columns = count($columns);
tcpdf.php:		$this->current_column = 0;
tcpdf.php:		$this->column_start_page = $this->page;
tcpdf.php:		$this->selectColumn(0);
tcpdf.php:	 * @param int|null $col column number (from 0 to getNumberOfColumns()-1); empty string = current column.
tcpdf.php:	 * @since 4.9.001 (2010-03-28)
tcpdf.php:			$col = $this->current_column;
tcpdf.php:		} elseif ($col >= $this->num_columns) {
tcpdf.php:		if ($this->num_columns > 1) {
tcpdf.php:			if ($col != $this->current_column) {
tcpdf.php:				if ($this->column_start_page == $this->page) {
tcpdf.php:					$this->y = $this->columns[$col]['y'];
tcpdf.php:					$this->y = $this->tMargin;
tcpdf.php:				if (($this->page > $this->maxselcol['page']) OR (($this->page == $this->maxselcol['page']) AND ($col > $this->maxselcol['column']))) {
tcpdf.php:					$this->maxselcol['page'] = $this->page;
tcpdf.php:					$this->maxselcol['column'] = $col;
tcpdf.php:			$xshift = $this->colxshift;
tcpdf.php:			$listindent = ($this->listindentlevel * $this->listindent);
tcpdf.php:				$colpos += ($this->columns[$i]['w'] + $this->columns[$i]['s']);
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$x = $this->w - $this->original_rMargin - $colpos;
tcpdf.php:				$this->rMargin = ($this->w - $x + $listindent);
tcpdf.php:				$this->lMargin = ($x - $this->columns[$col]['w']);
tcpdf.php:				$this->x = $x - $listindent;
tcpdf.php:				$x = $this->original_lMargin + $colpos;
tcpdf.php:				$this->lMargin = ($x + $listindent);
tcpdf.php:				$this->rMargin = ($this->w - $x - $this->columns[$col]['w']);
tcpdf.php:				$this->x = $x + $listindent;
tcpdf.php:			$this->columns[$col]['x'] = $x;
tcpdf.php:		$this->current_column = $col;
tcpdf.php:		$this->newline = true;
tcpdf.php:		if ((!TCPDF_STATIC::empty_string($this->thead)) AND (!$this->inthead)) {
tcpdf.php:				$this->writeHTML($this->thead, false, false, false, false, '');
tcpdf.php:				$this->y += $xshift['s']['V'];
tcpdf.php:				if (!isset($this->columns[$col]['th'])) {
tcpdf.php:					$this->columns[$col]['th'] = array();
tcpdf.php:				$this->columns[$col]['th']['\''.$this->page.'\''] = $this->y;
tcpdf.php:				$this->lasth = 0;
tcpdf.php:			} elseif (isset($this->columns[$col]['th']['\''.$this->page.'\''])) {
tcpdf.php:				$this->y = $this->columns[$col]['th']['\''.$this->page.'\''];
tcpdf.php:		if ($this->rtl) {
tcpdf.php:			$this->rMargin += $xshift['x'];
tcpdf.php:			$this->x -= ($xshift['x'] + $xshift['p']['R']);
tcpdf.php:			$this->lMargin += $xshift['x'];
tcpdf.php:			$this->x += $xshift['x'] + $xshift['p']['L'];
tcpdf.php:	 * @since 5.5.011 (2010-07-08)
tcpdf.php:		return $this->current_column;
tcpdf.php:	 * @since 5.8.018 (2010-08-25)
tcpdf.php:		return $this->num_columns;
tcpdf.php:	 * @since 4.9.008 (2009-04-02)
tcpdf.php:		// Ref.: PDF 32000-1:2008 - 9.3.6 Text Rendering Mode
tcpdf.php:		$this->textrendermode = $textrendermode;
tcpdf.php:		$this->textstrokewidth = $stroke;
tcpdf.php:	 * @since 5.9.174 (2012-07-25)
tcpdf.php:			$this->txtshadow['enabled'] = $params['enabled']?true:false;
tcpdf.php:			$this->txtshadow['enabled'] = false;
tcpdf.php:			$this->txtshadow['depth_w'] = floatval($params['depth_w']);
tcpdf.php:			$this->txtshadow['depth_w'] = 0;
tcpdf.php:			$this->txtshadow['depth_h'] = floatval($params['depth_h']);
tcpdf.php:			$this->txtshadow['depth_h'] = 0;
tcpdf.php:			$this->txtshadow['color'] = $params['color'];
tcpdf.php:			$this->txtshadow['color'] = $this->strokecolor;
tcpdf.php:			$this->txtshadow['opacity'] = min(1, max(0, floatval($params['opacity'])));
tcpdf.php:			$this->txtshadow['opacity'] = 1;
tcpdf.php:			$this->txtshadow['blend_mode'] = $params['blend_mode'];
tcpdf.php:			$this->txtshadow['blend_mode'] = 'Normal';
tcpdf.php:		if ((($this->txtshadow['depth_w'] == 0) AND ($this->txtshadow['depth_h'] == 0)) OR ($this->txtshadow['opacity'] == 0)) {
tcpdf.php:			$this->txtshadow['enabled'] = false;
tcpdf.php:	 * @since 5.9.174 (2012-07-25)
tcpdf.php:		return $this->txtshadow;
tcpdf.php:	 * @since 4.9.012 (2010-04-12)
tcpdf.php:		$word_string = TCPDF_FONTS::UTF8ArrSubString($word, '', '', $this->isunicode);
tcpdf.php:		// some words will be returned as-is
tcpdf.php:		$pattern = '/^([a-zA-Z0-9_\.\-]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/';
tcpdf.php:		$pattern = '/(([a-zA-Z0-9\-]+\.)?)((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/';
tcpdf.php:			return TCPDF_FONTS::UTF8StringToArray($dictionary[$word_string], $this->isunicode, $this->CurrentFont);
tcpdf.php:		$maxpos = $tmpnumchars - 1;
tcpdf.php:			$imax = min(($tmpnumchars - $pos), $charmax);
tcpdf.php:				$subword = strtolower(TCPDF_FONTS::UTF8ArrSubString($tmpword, $pos, ($pos + $i), $this->isunicode));
tcpdf.php:					$pattern = TCPDF_FONTS::UTF8StringToArray($patterns[$subword], $this->isunicode, $this->CurrentFont);
tcpdf.php:								$zero = $pos - 1;
tcpdf.php:								$zero = $pos + $j - $digits;
tcpdf.php:							$level = ($pattern[$j] - 48);
tcpdf.php:		$maxpos = $numchars - $rightmin;
tcpdf.php:	 * @param mixed $patterns Array of hypenation patterns or a TEX file containing hypenation patterns. TEX patterns can be downloaded from http://www.ctan.org/tex-archive/language/hyph-utf8/tex/generic/hyph-utf8/patterns/
tcpdf.php:	 * @since 4.9.012 (2010-04-12)
tcpdf.php:		$text = $this->unhtmlentities($text);
tcpdf.php:		$unichars = TCPDF_FONTS::UTF8StringToArray($text, $this->isunicode, $this->CurrentFont);
tcpdf.php:					$txtarr = array_merge($txtarr, $this->hyphenateWord($word, $patterns, $dictionary, $leftmin, $rightmin, $charmin, $charmax));
tcpdf.php:					$current = array_slice($txtarr, -6, 5); // last 5 chars
tcpdf.php:						$current = array_slice($txtarr, -7, 1);
tcpdf.php:			$txtarr = array_merge($txtarr, $this->hyphenateWord($word, $patterns, $dictionary, $leftmin, $rightmin, $charmin, $charmax));
tcpdf.php:		return TCPDF_FONTS::UTF8ArrSubString($txtarr, '', '', $this->isunicode);
tcpdf.php:	 * @since 5.0.000 (2010-04-27)
tcpdf.php:		$this->rasterize_vector_images = $mode;
tcpdf.php:	 * @since 5.3.002 (2010-06-07)
tcpdf.php:		if ($this->pdfa_mode) {
tcpdf.php:			$this->font_subsetting = false;
tcpdf.php:			$this->font_subsetting = $enable ? true : false;
tcpdf.php:	 * @since 5.3.002 (2010-06-07)
tcpdf.php:		return $this->font_subsetting;
tcpdf.php:	 * @since 5.8.000 (2010-08-11)
tcpdf.php:		return preg_replace('/^'.$this->re_space['p'].'+/'.$this->re_space['m'], $replace, $str);
tcpdf.php:	 * @since 5.8.000 (2010-08-11)
tcpdf.php:		return preg_replace('/'.$this->re_space['p'].'+$/'.$this->re_space['m'], $replace, $str);
tcpdf.php:	 * @since 5.8.000 (2010-08-11)
tcpdf.php:		$str = $this->stringLeftTrim($str, $replace);
tcpdf.php:		$str = $this->stringRightTrim($str, $replace);
tcpdf.php:	 * @since 5.8.002 (2010-08-14)
tcpdf.php:		return (($this->CurrentFont['type'] == 'TrueTypeUnicode') OR ($this->CurrentFont['type'] == 'cidfont0'));
tcpdf.php:	 * @since 5.8.004 (2010-08-17)
tcpdf.php:		$fontfamily = preg_replace('/[^a-z0-9_\,]/', '', strtolower($fontfamily));
tcpdf.php:			if (in_array(strtolower($font), $this->fontlist) OR in_array($font, $this->fontkeys)) {
tcpdf.php:		return $this->CurrentFont['fontkey'];
tcpdf.php:	 * An XObject Template is a PDF block that is a self-contained description of any sequence of graphics objects (including path objects, text objects, and sampled images).
tcpdf.php:	 * @since 5.8.017 (2010-08-24)
tcpdf.php:		if ($this->inxobj) {
tcpdf.php:		$this->inxobj = true;
tcpdf.php:		++$this->n;
tcpdf.php:		$this->xobjid = 'XT'.$this->n;
tcpdf.php:		$this->xobjects[$this->xobjid] = array('n' => $this->n);
tcpdf.php:		$this->xobjects[$this->xobjid]['gvars'] = $this->getGraphicVars();
tcpdf.php:		$this->xobjects[$this->xobjid]['intmrk'] = 0;
tcpdf.php:		$this->xobjects[$this->xobjid]['transfmrk'] = array();
tcpdf.php:		$this->xobjects[$this->xobjid]['outdata'] = '';
tcpdf.php:		$this->xobjects[$this->xobjid]['xobjects'] = array();
tcpdf.php:		$this->xobjects[$this->xobjid]['images'] = array();
tcpdf.php:		$this->xobjects[$this->xobjid]['fonts'] = array();
tcpdf.php:		$this->xobjects[$this->xobjid]['annotations'] = array();
tcpdf.php:		$this->xobjects[$this->xobjid]['extgstates'] = array();
tcpdf.php:		$this->xobjects[$this->xobjid]['gradients'] = array();
tcpdf.php:		$this->xobjects[$this->xobjid]['spot_colors'] = array();
tcpdf.php:		$this->num_columns = 1;
tcpdf.php:		$this->current_column = 0;
tcpdf.php:		$this->setAutoPageBreak(false);
tcpdf.php:			$w = $this->w - $this->lMargin - $this->rMargin;
tcpdf.php:			$h = $this->h - $this->tMargin - $this->bMargin;
tcpdf.php:		$this->xobjects[$this->xobjid]['x'] = 0;
tcpdf.php:		$this->xobjects[$this->xobjid]['y'] = 0;
tcpdf.php:		$this->xobjects[$this->xobjid]['w'] = $w;
tcpdf.php:		$this->xobjects[$this->xobjid]['h'] = $h;
tcpdf.php:		$this->w = $w;
tcpdf.php:		$this->h = $h;
tcpdf.php:		$this->wPt = $this->w * $this->k;
tcpdf.php:		$this->hPt = $this->h * $this->k;
tcpdf.php:		$this->fwPt = $this->wPt;
tcpdf.php:		$this->fhPt = $this->hPt;
tcpdf.php:		$this->x = 0;
tcpdf.php:		$this->y = 0;
tcpdf.php:		$this->lMargin = 0;
tcpdf.php:		$this->rMargin = 0;
tcpdf.php:		$this->tMargin = 0;
tcpdf.php:		$this->bMargin = 0;
tcpdf.php:		$this->xobjects[$this->xobjid]['group'] = $group;
tcpdf.php:		return $this->xobjid;
tcpdf.php:	 * An XObject Template is a PDF block that is a self-contained description of any sequence of graphics objects (including path objects, text objects, and sampled images).
tcpdf.php:	 * @since 5.8.017 (2010-08-24)
tcpdf.php:		if (!$this->inxobj) {
tcpdf.php:		$this->inxobj = false;
tcpdf.php:		$this->setGraphicVars($this->xobjects[$this->xobjid]['gvars'], true);
tcpdf.php:		return $this->xobjid;
tcpdf.php:	 * An XObject Template is a PDF block that is a self-contained description of any sequence of graphics objects (including path objects, text objects, and sampled images).
tcpdf.php:	 * @param string $align Indicates the alignment of the pointer next to template insertion relative to template height. The value can be:<ul><li>T: top-right for LTR or top-left for RTL</li><li>M: middle-right for LTR or middle-left for RTL</li><li>B: bottom-right for LTR or bottom-left for RTL</li><li>N: next line</li></ul>
tcpdf.php:	 * @since 5.8.017 (2010-08-24)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:		if (!isset($this->xobjects[$id])) {
tcpdf.php:			$this->Error('The XObject Template \''.$id.'\' doesn\'t exist!');
tcpdf.php:		if ($this->inxobj) {
tcpdf.php:			if ($id == $this->xobjid) {
tcpdf.php:				$this->endTemplate();
tcpdf.php:				$this->xobjects[$this->xobjid]['xobjects'][$id] = $this->xobjects[$id];
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:		// check page for no-write regions and adapt page margins if necessary
tcpdf.php:		list($x, $y) = $this->checkPageRegions($h, $x, $y);
tcpdf.php:		$ow = $this->xobjects[$id]['w'];
tcpdf.php:		$oh = $this->xobjects[$id]['h'];
tcpdf.php:		list($w, $h, $x, $y) = $this->fitBlock($w, $h, $x, $y, $fitonpage);
tcpdf.php:		if ($this->rtl) {
tcpdf.php:				$xt = $this->lMargin;
tcpdf.php:				$xt = ($this->w + $this->lMargin - $this->rMargin - $w) / 2;
tcpdf.php:				$xt = $this->w - $this->rMargin - $w;
tcpdf.php:				$xt = $x - $w;
tcpdf.php:				$xt = $this->lMargin;
tcpdf.php:				$xt = ($this->w + $this->lMargin - $this->rMargin - $w) / 2;
tcpdf.php:				$xt = $this->w - $this->rMargin - $w;
tcpdf.php:		$this->StartTransform();
tcpdf.php:		$tm[4] = $xt * $this->k;
tcpdf.php:		$tm[5] = ($this->h - $h - $y) * $this->k;
tcpdf.php:		$this->Transform($tm);
tcpdf.php:		$this->_out('/'.$id.' Do');
tcpdf.php:		$this->StopTransform();
tcpdf.php:		if (!empty($this->xobjects[$id]['annotations'])) {
tcpdf.php:			foreach ($this->xobjects[$id]['annotations'] as $annot) {
tcpdf.php:				$coordlt = TCPDF_STATIC::getTransformationMatrixProduct($tm, array(1, 0, 0, 1, ($annot['x'] * $this->k), (-$annot['y'] * $this->k)));
tcpdf.php:				$ax = ($coordlt[4] / $this->k);
tcpdf.php:				$ay = ($this->h - $h - ($coordlt[5] / $this->k));
tcpdf.php:				$coordrb = TCPDF_STATIC::getTransformationMatrixProduct($tm, array(1, 0, 0, 1, (($annot['x'] + $annot['w']) * $this->k), ((-$annot['y'] - $annot['h']) * $this->k)));
tcpdf.php:				$aw = ($coordrb[4] / $this->k) - $ax;
tcpdf.php:				$ah = ($this->h - $h - ($coordrb[5] / $this->k)) - $ay;
tcpdf.php:				$this->Annotation($ax, $ay, $aw, $ah, $annot['text'], $annot['opt'], $annot['spaces']);
tcpdf.php:				$this->y = $y;
tcpdf.php:				$this->x = $rb_x;
tcpdf.php:				$this->y = $y + round($h/2);
tcpdf.php:				$this->x = $rb_x;
tcpdf.php:				$this->y = $rb_y;
tcpdf.php:				$this->x = $rb_x;
tcpdf.php:				$this->setY($rb_y);
tcpdf.php:	 * @since 5.9.000 (2010-09-29)
tcpdf.php:		$this->font_stretching = $perc;
tcpdf.php:	 * @since 5.9.000 (2010-09-29)
tcpdf.php:		return $this->font_stretching;
tcpdf.php:	 * @since 5.9.000 (2010-09-29)
tcpdf.php:		$this->font_spacing = $spacing;
tcpdf.php:	 * @since 5.9.000 (2010-09-29)
tcpdf.php:		return $this->font_spacing;
tcpdf.php:	 * Return an array of no-write page regions
tcpdf.php:	 * @return array of no-write page regions
tcpdf.php:	 * @since 5.9.003 (2010-10-13)
tcpdf.php:		return $this->page_regions;
tcpdf.php:	 * Set no-write regions on page.
tcpdf.php:	 * A no-write region is a portion of the page with a rectangular or trapezium shape that will not be covered when writing text or html code.
tcpdf.php:	 * @param array $regions array of no-write regions. For each region you can define an array as follow: ('page' => page number or empy for current page, 'xt' => X top, 'yt' => Y top, 'xb' => X bottom, 'yb' => Y bottom, 'side' => page side 'L' = left or 'R' = right). Omit this parameter to remove all regions.
tcpdf.php:	 * @since 5.9.003 (2010-10-13)
tcpdf.php:		$this->page_regions = array();
tcpdf.php:			$this->addPageRegion($data);
tcpdf.php:	 * Add a single no-write region on selected page.
tcpdf.php:	 * A no-write region is a portion of the page with a rectangular or trapezium shape that will not be covered when writing text or html code.
tcpdf.php:	 * @param array $region array of a single no-write region array: ('page' => page number or empy for current page, 'xt' => X top, 'yt' => Y top, 'xb' => X bottom, 'yb' => Y bottom, 'side' => page side 'L' = left or 'R' = right).
tcpdf.php:	 * @since 5.9.003 (2010-10-13)
tcpdf.php:			$region['page'] = $this->page;
tcpdf.php:			$this->page_regions[] = $region;
tcpdf.php:	 * Remove a single no-write region.
tcpdf.php:	 * @since 5.9.003 (2010-10-13)
tcpdf.php:		if (isset($this->page_regions[$key])) {
tcpdf.php:			unset($this->page_regions[$key]);
tcpdf.php:	 * Check page for no-write regions and adapt current coordinates and page margins if necessary.
tcpdf.php:	 * A no-write region is a portion of the page with a rectangular or trapezium shape that will not be covered when writing text or html code.
tcpdf.php:	 * @since 5.9.003 (2010-10-13)
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:		if (!$this->check_page_regions OR empty($this->page_regions)) {
tcpdf.php:			$h = $this->getCellHeight($this->FontSize);
tcpdf.php:		if ($this->checkPageBreak($h, $y)) {
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:		if ($this->num_columns > 1) {
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$this->lMargin = ($this->columns[$this->current_column]['x'] - $this->columns[$this->current_column]['w']);
tcpdf.php:				$this->rMargin = ($this->w - $this->columns[$this->current_column]['x'] - $this->columns[$this->current_column]['w']);
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$this->lMargin = max($this->clMargin, $this->original_lMargin);
tcpdf.php:				$this->rMargin = max($this->crMargin, $this->original_rMargin);
tcpdf.php:		foreach ($this->page_regions as $regid => $regdata) {
tcpdf.php:			if ($regdata['page'] == $this->page) {
tcpdf.php:				if (($y > ($regdata['yt'] - $h)) AND ($y <= $regdata['yb'])) {
tcpdf.php:					$minv = ($regdata['xb'] - $regdata['xt']) / ($regdata['yb'] - $regdata['yt']); // inverse of angular coefficient
tcpdf.php:					$xt = (($yt - $regdata['yt']) * $minv) + $regdata['xt'];
tcpdf.php:					$xb = (($yb - $regdata['yt']) * $minv) + $regdata['xt'];
tcpdf.php:						if ($this->lMargin < $new_margin) {
tcpdf.php:							if ($this->rtl) {
tcpdf.php:								$this->lMargin = max(0, $new_margin);
tcpdf.php:								if ($new_margin > ($this->w - $this->rMargin)) {
tcpdf.php:									$y = $regdata['yb'] - $h;
tcpdf.php:						if (($this->w - $this->rMargin) > $new_margin) {
tcpdf.php:							if (!$this->rtl) {
tcpdf.php:								$this->rMargin = max(0, ($this->w - $new_margin));
tcpdf.php:								if ($new_margin > $this->lMargin) {
tcpdf.php:									$y = $regdata['yb'] - $h;
tcpdf.php:	// --- SVG METHODS ---------------------------------------------------------
tcpdf.php:	 * @param float|null $x Abscissa of the upper-left corner.
tcpdf.php:	 * @param float|null $y Ordinate of the upper-left corner.
tcpdf.php:	 * @param string $align Indicates the alignment of the pointer next to image insertion relative to image height. The value can be:<ul><li>T: top-right for LTR or top-left for RTL</li><li>M: middle-right for LTR or middle-left for RTL</li><li>B: bottom-right for LTR or bottom-left for RTL</li><li>N: next line</li></ul> If the alignment is an empty string, then the pointer will be restored on the starting SVG position.
tcpdf.php:	 * @param mixed $border Indicates if borders must be drawn around the cell. The value can be a number:<ul><li>0: no border (default)</li><li>1: frame</li></ul> or a string containing some or all of the following characters (in any order):<ul><li>L: left</li><li>T: top</li><li>R: right</li><li>B: bottom</li></ul> or an array of line styles for each border group - for example: array('LTRB' => array('width' => 2, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0, 0, 0)))
tcpdf.php:	 * @since 5.0.000 (2010-05-02)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:		$this->svggradients = array();
tcpdf.php:		$this->svggradientid = 0;
tcpdf.php:		$this->svgdefsmode = false;
tcpdf.php:		$this->svgdefs = array();
tcpdf.php:		$this->svgclipmode = false;
tcpdf.php:		$this->svgclippaths = array();
tcpdf.php:		$this->svgcliptm = array();
tcpdf.php:		$this->svgclipid = 0;
tcpdf.php:		$this->svgtext = '';
tcpdf.php:		$this->svgtextmode = array();
tcpdf.php:		if ($this->rasterize_vector_images AND ($w > 0) AND ($h > 0)) {
tcpdf.php:			return $this->Image($file, $x, $y, $w, $h, 'SVG', $link, $align, true, 300, $palign, false, false, $border, false, false, false);
tcpdf.php:			$this->svgdir = '';
tcpdf.php:			$this->svgdir = dirname($file);
tcpdf.php:            $svgdata = $this->getCachedFileContents($file);
tcpdf.php:			$this->Error('SVG file not found: '.$file);
tcpdf.php:			$x = $this->x;
tcpdf.php:			$y = $this->y;
tcpdf.php:		// check page for no-write regions and adapt page margins if necessary
tcpdf.php:		list($x, $y) = $this->checkPageRegions($h, $x, $y);
tcpdf.php:		$k = $this->k;
tcpdf.php:				$ox = $this->getHTMLUnitToUnits($tmp[1], 0, $this->svgunit, false);
tcpdf.php:				$oy = $this->getHTMLUnitToUnits($tmp[1], 0, $this->svgunit, false);
tcpdf.php:				$ow = $this->getHTMLUnitToUnits($tmp[1], 1, $this->svgunit, false);
tcpdf.php:				$oh = $this->getHTMLUnitToUnits($tmp[1], 1, $this->svgunit, false);
tcpdf.php:			if (preg_match('/[\s]+viewBox[\s]*=[\s]*"[\s]*([0-9\.\-]+)[\s]+([0-9\.\-]+)[\s]+([0-9\.]+)[\s]+([0-9\.]+)[\s]*"/si', $regs[1], $tmp)) {
tcpdf.php:						$view_box[$key] = $this->getHTMLUnitToUnits($val, 0, $this->svgunit, false);
tcpdf.php:		list($w, $h, $x, $y) = $this->fitBlock($w, $h, $x, $y, $fitonpage);
tcpdf.php:		if ($this->rasterize_vector_images) {
tcpdf.php:			return $this->Image($file, $x, $y, $w, $h, 'SVG', $link, $align, true, 300, $palign, false, false, $border, false, false, false);
tcpdf.php:		$this->img_rb_y = $y + $h;
tcpdf.php:		if ($this->rtl) {
tcpdf.php:				$ximg = $this->lMargin;
tcpdf.php:				$ximg = ($this->w + $this->lMargin - $this->rMargin - $w) / 2;
tcpdf.php:				$ximg = $this->w - $this->rMargin - $w;
tcpdf.php:				$ximg = $x - $w;
tcpdf.php:			$this->img_rb_x = $ximg;
tcpdf.php:				$ximg = $this->lMargin;
tcpdf.php:				$ximg = ($this->w + $this->lMargin - $this->rMargin - $w) / 2;
tcpdf.php:				$ximg = $this->w - $this->rMargin - $w;
tcpdf.php:			$this->img_rb_x = $ximg + $w;
tcpdf.php:		$gvars = $this->getGraphicVars();
tcpdf.php:		$svgoffset_x = ($ximg - $ox) * $this->k;
tcpdf.php:		$svgoffset_y = -($y - $oy) * $this->k;
tcpdf.php:					$svgoffset_x += (($w * $this->k) - ($ow * $this->k * $svgscale_x));
tcpdf.php:					$svgoffset_x += ((($w * $this->k) - ($ow * $this->k * $svgscale_x)) / 2);
tcpdf.php:					$svgoffset_y -= (($h * $this->k) - ($oh * $this->k * $svgscale_y));
tcpdf.php:					$svgoffset_y -= ((($h * $this->k) - ($oh * $this->k * $svgscale_y)) / 2);
tcpdf.php:		$page_break_mode = $this->AutoPageBreak;
tcpdf.php:		$page_break_margin = $this->getBreakMargin();
tcpdf.php:		$cell_padding = $this->cell_padding;
tcpdf.php:		$this->setCellPadding(0);
tcpdf.php:		$this->setAutoPageBreak(false);
tcpdf.php:		$this->_out('q'.$this->epsmarker);
tcpdf.php:		$this->Rect($ximg, $y, $w, $h, 'CNZ', array(), array());
tcpdf.php:		$e = $ox * $this->k * (1 - $svgscale_x);
tcpdf.php:		$f = ($this->h - $oy) * $this->k * (1 - $svgscale_y);
tcpdf.php:		$this->_out(sprintf('%F %F %F %F %F %F cm', $svgscale_x, 0, 0, $svgscale_y, ($e + $svgoffset_x), ($f + $svgoffset_y)));
tcpdf.php:		$parser = xml_parser_create('UTF-8');
tcpdf.php:		// disable case-folding for this XML parser
tcpdf.php:			$this->Error($error_message);
tcpdf.php:		$this->_out($this->epsmarker.'Q');
tcpdf.php:		$this->setGraphicVars($gvars);
tcpdf.php:		$this->lasth = $gvars['lasth'];
tcpdf.php:			$bx = $this->x;
tcpdf.php:			$by = $this->y;
tcpdf.php:			$this->x = $ximg;
tcpdf.php:			if ($this->rtl) {
tcpdf.php:				$this->x += $w;
tcpdf.php:			$this->y = $y;
tcpdf.php:			$this->Cell($w, $h, '', $border, 0, '', 0, '', 0, true);
tcpdf.php:			$this->x = $bx;
tcpdf.php:			$this->y = $by;
tcpdf.php:			$this->Link($ximg, $y, $w, $h, $link, 0);
tcpdf.php:				$this->y = $y;
tcpdf.php:				$this->x = $this->img_rb_x;
tcpdf.php:				$this->y = $y + round($h/2);
tcpdf.php:				$this->x = $this->img_rb_x;
tcpdf.php:				$this->y = $this->img_rb_y;
tcpdf.php:				$this->x = $this->img_rb_x;
tcpdf.php:				$this->setY($this->img_rb_y);
tcpdf.php:				$this->x = $gvars['x'];
tcpdf.php:				$this->y = $gvars['y'];
tcpdf.php:				$this->page = $gvars['page'];
tcpdf.php:				$this->current_column = $gvars['current_column'];
tcpdf.php:				$this->tMargin = $gvars['tMargin'];
tcpdf.php:				$this->bMargin = $gvars['bMargin'];
tcpdf.php:				$this->w = $gvars['w'];
tcpdf.php:				$this->h = $gvars['h'];
tcpdf.php:				$this->wPt = $gvars['wPt'];
tcpdf.php:				$this->hPt = $gvars['hPt'];
tcpdf.php:				$this->fwPt = $gvars['fwPt'];
tcpdf.php:				$this->fhPt = $gvars['fhPt'];
tcpdf.php:		$this->endlinex = $this->img_rb_x;
tcpdf.php:		$this->setAutoPageBreak($page_break_mode, $page_break_margin);
tcpdf.php:		$this->cell_padding = $cell_padding;
tcpdf.php:	 * @since 5.0.000 (2010-05-02)
tcpdf.php:		$b = -$tm[1];
tcpdf.php:		$c = -$tm[2];
tcpdf.php:		$e = $this->getHTMLUnitToUnits($tm[4], 1, $this->svgunit, false) * $this->k;
tcpdf.php:		$f = -$this->getHTMLUnitToUnits($tm[5], 1, $this->svgunit, false) * $this->k;
tcpdf.php:		$y = $this->h * $this->k;
tcpdf.php:		$e = ($x * (1 - $a)) - ($y * $c) + $e;
tcpdf.php:		$f = ($y * (1 - $d)) - ($x * $b) + $f;
tcpdf.php:	 * @since 5.0.000 (2010-05-02)
tcpdf.php:		$this->Transform($this->convertSVGtMatrix($tm));
tcpdf.php:	 * @since 5.0.000 (2010-05-02)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:		$minlen = (0.01 / $this->k); // minimum acceptable length
tcpdf.php:		// clip-path
tcpdf.php:		if (preg_match('/url\([\s]*\#([^\)]*)\)/si', $svgstyle['clip-path'], $regs)) {
tcpdf.php:			$clip_path = $this->svgclippaths[$regs[1]];
tcpdf.php:				$this->startSVGElementHandler('clip-path', $cp['name'], $cp['attribs'], $cp['tm']);
tcpdf.php:			$this->setAlpha($svgstyle['opacity'], 'Normal', $svgstyle['opacity'], false);
tcpdf.php:		$fill_color = TCPDF_COLORS::convertHTMLColorToDec($svgstyle['color'], $this->spot_colors);
tcpdf.php:		$this->setFillColorArray($fill_color);
tcpdf.php:		$text_color = TCPDF_COLORS::convertHTMLColorToDec($svgstyle['text-color'], $this->spot_colors);
tcpdf.php:		$this->setTextColorArray($text_color);
tcpdf.php:		if (preg_match('/rect\(([a-z0-9\-\.]*)[\s]*([a-z0-9\-\.]*)[\s]*([a-z0-9\-\.]*)[\s]*([a-z0-9\-\.]*)\)/si', $svgstyle['clip'], $regs)) {
tcpdf.php:			$top = (isset($regs[1])?$this->getHTMLUnitToUnits($regs[1], 0, $this->svgunit, false):0);
tcpdf.php:			$right = (isset($regs[2])?$this->getHTMLUnitToUnits($regs[2], 0, $this->svgunit, false):0);
tcpdf.php:			$bottom = (isset($regs[3])?$this->getHTMLUnitToUnits($regs[3], 0, $this->svgunit, false):0);
tcpdf.php:			$left = (isset($regs[4])?$this->getHTMLUnitToUnits($regs[4], 0, $this->svgunit, false):0);
tcpdf.php:			$cw = $w - $left - $right;
tcpdf.php:			$ch = $h - $top - $bottom;
tcpdf.php:			if ($svgstyle['clip-rule'] == 'evenodd') {
tcpdf.php:			$this->Rect($cx, $cy, $cw, $ch, $clip_rule, array(), array());
tcpdf.php:			$gradient = $this->svggradients[$regs[1]];
tcpdf.php:				$newgradient = $this->svggradients[$gradient['xref']];
tcpdf.php:			$this->_outSaveGraphicsState();
tcpdf.php:				$gradient['coords'][0] = $this->getHTMLUnitToUnits($gradient['coords'][0], 0, $this->svgunit, false);
tcpdf.php:				$gradient['coords'][1] = $this->getHTMLUnitToUnits($gradient['coords'][1], 0, $this->svgunit, false);
tcpdf.php:				$gradient['coords'][2] = $this->getHTMLUnitToUnits($gradient['coords'][2], 0, $this->svgunit, false);
tcpdf.php:				$gradient['coords'][3] = $this->getHTMLUnitToUnits($gradient['coords'][3], 0, $this->svgunit, false);
tcpdf.php:				$gradient['coords'][4] = $this->getHTMLUnitToUnits($gradient['coords'][4], 0, $this->svgunit, false);
tcpdf.php:				$gradient['coords'][0] = (($gradient['coords'][0] - $x) / $w);
tcpdf.php:				$gradient['coords'][1] = (($gradient['coords'][1] - $y) / $h);
tcpdf.php:				$gradient['coords'][2] = (($gradient['coords'][2] - $x) / $w);
tcpdf.php:				$gradient['coords'][3] = (($gradient['coords'][3] - $y) / $h);
tcpdf.php:			$cy = ($this->h - $y);
tcpdf.php:				$cy -= ($gradient['coords'][1] * ($w + $h));
tcpdf.php:				$cy -= $h;
tcpdf.php:			$this->_out(sprintf('%F 0 0 %F %F %F cm', ($w * $this->k), ($h * $this->k), ($x * $this->k), ($cy * $this->k)));
tcpdf.php:				$this->Gradient($gradient['type'], $gradient['coords'], $gradient['stops'], array(), false);
tcpdf.php:			$fill_color = TCPDF_COLORS::convertHTMLColorToDec($svgstyle['fill'], $this->spot_colors);
tcpdf.php:			if ($svgstyle['fill-opacity'] != 1) {
tcpdf.php:				$this->setAlpha($this->alpha['CA'], 'Normal', $svgstyle['fill-opacity'], false);
tcpdf.php:			$this->setFillColorArray($fill_color);
tcpdf.php:			if ($svgstyle['fill-rule'] == 'evenodd') {
tcpdf.php:			if ($svgstyle['stroke-opacity'] != 1) {
tcpdf.php:				$this->setAlpha($svgstyle['stroke-opacity'], 'Normal', $this->alpha['ca'], false);
tcpdf.php:				$this->setAlpha($rgba_matches[1], 'Normal', $this->alpha['ca'], false);
tcpdf.php:				'color' => TCPDF_COLORS::convertHTMLColorToDec($svgstyle['stroke'], $this->spot_colors),
tcpdf.php:				'width' => $this->getHTMLUnitToUnits($svgstyle['stroke-width'], 0, $this->svgunit, false),
tcpdf.php:				'cap' => $svgstyle['stroke-linecap'],
tcpdf.php:				'join' => $svgstyle['stroke-linejoin']
tcpdf.php:			if (isset($svgstyle['stroke-dasharray']) AND !empty($svgstyle['stroke-dasharray']) AND ($svgstyle['stroke-dasharray'] != 'none')) {
tcpdf.php:				$stroke_style['dash'] = $svgstyle['stroke-dasharray'];
tcpdf.php:			$this->setLineStyle($stroke_style);
tcpdf.php:			if (preg_match('/font-family[\s]*:[\s]*([^\;\"]*)/si', $svgstyle['font'], $regs)) {
tcpdf.php:				$font_family = $this->getFontFamilyName($regs[1]);
tcpdf.php:				$font_family = $svgstyle['font-family'];
tcpdf.php:			if (preg_match('/font-size[\s]*:[\s]*([^\s\;\"]*)/si', $svgstyle['font'], $regs)) {
tcpdf.php:				$font_size = $svgstyle['font-size'];
tcpdf.php:			if (preg_match('/font-style[\s]*:[\s]*([^\s\;\"]*)/si', $svgstyle['font'], $regs)) {
tcpdf.php:				$font_style = $svgstyle['font-style'];
tcpdf.php:			if (preg_match('/font-weight[\s]*:[\s]*([^\s\;\"]*)/si', $svgstyle['font'], $regs)) {
tcpdf.php:				$font_weight = $svgstyle['font-weight'];
tcpdf.php:			if (preg_match('/font-stretch[\s]*:[\s]*([^\s\;\"]*)/si', $svgstyle['font'], $regs)) {
tcpdf.php:				$font_stretch = $svgstyle['font-stretch'];
tcpdf.php:			if (preg_match('/letter-spacing[\s]*:[\s]*([^\s\;\"]*)/si', $svgstyle['font'], $regs)) {
tcpdf.php:				$font_spacing = $svgstyle['letter-spacing'];
tcpdf.php:			$font_family = $this->getFontFamilyName($svgstyle['font-family']);
tcpdf.php:			$font_size = $svgstyle['font-size'];
tcpdf.php:			$font_style = $svgstyle['font-style'];
tcpdf.php:			$font_weight = $svgstyle['font-weight'];
tcpdf.php:			$font_stretch = $svgstyle['font-stretch'];
tcpdf.php:			$font_spacing = $svgstyle['letter-spacing'];
tcpdf.php:		$font_size = $this->getHTMLFontUnits($font_size, $this->svgstyles[0]['font-size'], $prevsvgstyle['font-size'], $this->svgunit);
tcpdf.php:		$font_stretch = $this->getCSSFontStretching($font_stretch, $svgstyle['font-stretch']);
tcpdf.php:		$font_spacing = $this->getCSSFontSpacing($font_spacing, $svgstyle['letter-spacing']);
tcpdf.php:				if ((substr($font_family, -1) == 'I') AND (substr($font_family, -2, 1) == 'B')) {
tcpdf.php:					$font_family = substr($font_family, 0, -2).'I';
tcpdf.php:				} elseif (substr($font_family, -1) == 'B') {
tcpdf.php:					$font_family = substr($font_family, 0, -1);
tcpdf.php:		switch ($svgstyle['text-decoration']) {
tcpdf.php:			case 'line-through': {
tcpdf.php:		$this->setFont($font_family, $font_style, $font_size);
tcpdf.php:		$this->setFontStretching($font_stretch);
tcpdf.php:		$this->setFontSpacing($font_spacing);
tcpdf.php:	 *	 <li>F*: Fill using the even-odd rule to determine which regions lie inside the clipping path.</li>
tcpdf.php:	 *	 <li>DF* or FD*: Draw and fill using the even-odd rule to determine which regions lie inside the clipping path.</li>
tcpdf.php:	 *	 <li>CNZ: Clipping mode (using the even-odd rule to determine which regions lie inside the clipping path).</li>
tcpdf.php:	 * @since 5.0.000 (2010-05-02)
tcpdf.php:		if ($this->state != 2) {
tcpdf.php:		$d = preg_replace('/([0-9ACHLMQSTVZ])([\-\+])/si', '\\1 \\2', $d);
tcpdf.php:		$d = preg_replace('/(\.[0-9]+)(\.)/s', '\\1 \\2', $d);
tcpdf.php:		$minlen = (0.01 / $this->k); // minimum acceptable length (3 point)
tcpdf.php:					$params[$ck] = $this->getHTMLUnitToUnits($cp, 0, $this->svgunit, false);
tcpdf.php:							if ($firstcmd OR (abs($x0 - $x) >= $minlen) OR (abs($y0 - $y) >= $minlen)) {
tcpdf.php:									$this->_outPoint($x, $y);
tcpdf.php:									$this->_outLine($x, $y);
tcpdf.php:							if ((abs($x0 - $x) >= $minlen) OR (abs($y0 - $y) >= $minlen)) {
tcpdf.php:								$this->_outLine($x, $y);
tcpdf.php:						if ((abs($x0 - $x) >= $minlen) OR (abs($y0 - $y) >= $minlen)) {
tcpdf.php:							$this->_outLine($x, $y);
tcpdf.php:						if ((abs($x0 - $x) >= $minlen) OR (abs($y0 - $y) >= $minlen)) {
tcpdf.php:							$this->_outLine($x, $y);
tcpdf.php:							$x1 = $params[($ck - 5)] + $xoffset;
tcpdf.php:							$y1 = $params[($ck - 4)] + $yoffset;
tcpdf.php:							$x2 = $params[($ck - 3)] + $xoffset;
tcpdf.php:							$y2 = $params[($ck - 2)] + $yoffset;
tcpdf.php:							$x = $params[($ck - 1)] + $xoffset;
tcpdf.php:							$this->_outCurve($x1, $y1, $x2, $y2, $x, $y);
tcpdf.php:							if (($key > 0) AND ((strtoupper($paths[($key - 1)][1]) == 'C') OR (strtoupper($paths[($key - 1)][1]) == 'S'))) {
tcpdf.php:								$x1 = (2 * $x) - $x2;
tcpdf.php:								$y1 = (2 * $y) - $y2;
tcpdf.php:							$x2 = $params[($ck - 3)] + $xoffset;
tcpdf.php:							$y2 = $params[($ck - 2)] + $yoffset;
tcpdf.php:							$x = $params[($ck - 1)] + $xoffset;
tcpdf.php:							$this->_outCurve($x1, $y1, $x2, $y2, $x, $y);
tcpdf.php:							$x1 = $params[($ck - 3)] + $xoffset;
tcpdf.php:							$y1 = $params[($ck - 2)] + $yoffset;
tcpdf.php:							$x = $params[($ck - 1)] + $xoffset;
tcpdf.php:							$this->_outCurve($xa, $ya, $xb, $yb, $x, $y);
tcpdf.php:							if (($key > 0) AND ((strtoupper($paths[($key - 1)][1]) == 'Q') OR (strtoupper($paths[($key - 1)][1]) == 'T'))) {
tcpdf.php:								$x1 = (2 * $x) - $x1;
tcpdf.php:								$y1 = (2 * $y) - $y1;
tcpdf.php:							$x = $params[($ck - 1)] + $xoffset;
tcpdf.php:							$this->_outCurve($xa, $ya, $xb, $yb, $x, $y);
tcpdf.php:							$rx = max(abs($params[($ck - 6)]), .000000001);
tcpdf.php:							$ry = max(abs($params[($ck - 5)]), .000000001);
tcpdf.php:							$ang = -$rawparams[($ck - 4)];
tcpdf.php:							$fa = $rawparams[($ck - 3)]; // large-arc-flag
tcpdf.php:							$fs = $rawparams[($ck - 2)]; // sweep-flag
tcpdf.php:							$x = $params[($ck - 1)] + $xoffset;
tcpdf.php:							if ((abs($x0 - $x) < $minlen) AND (abs($y0 - $y) < $minlen)) {
tcpdf.php:								$a = (($x0 - $x) / 2);
tcpdf.php:								$b = (($y0 - $y) / 2);
tcpdf.php:								$xa = ($a * $cos_ang) - ($b * $sin_ang);
tcpdf.php:								$numerator = (($rx2 * $ry2) - ($rx2 * $ya2) - ($ry2 * $xa2));
tcpdf.php:									$root *= -1;
tcpdf.php:								$cay = -$root * (($ry * $xa) / $rx);
tcpdf.php:								$cx = ($cax * $cos_ang) - ($cay * $sin_ang) + (($x0 + $x) / 2);
tcpdf.php:								$angs = TCPDF_STATIC::getVectorsAngle(1, 0, (($xa - $cax) / $rx), (($cay - $ya) / $ry));
tcpdf.php:								$dang = TCPDF_STATIC::getVectorsAngle((($xa - $cax) / $rx), (($ya - $cay) / $ry), ((-$xa - $cax) / $rx), ((-$ya - $cay) / $ry));
tcpdf.php:									$dang -= (2 * M_PI);
tcpdf.php:								$angf = $angs - $dang;
tcpdf.php:								list($axmin, $aymin, $axmax, $aymax) = $this->_outellipticalarc($cx, $cy, $rx, $ry, $ang, $angs, $angf, $pie, 2, false, ($fs == 0), true);
tcpdf.php:					$this->_out('h');
tcpdf.php:			$this->_out($op);
tcpdf.php:		return array($xmin, $ymin, ($xmax - $xmin), ($ymax - $ymin));
tcpdf.php:			return $parts[(sizeof($parts) - 1)];
tcpdf.php:	 * @param string $name The second parameter, name, contains the name of the element for which this handler is called. If case-folding is in effect for this parser, the element name will be in uppercase letters.
tcpdf.php:	 * @param array $attribs The third parameter, attribs, contains an associative array with the element's attributes (if any). The keys of this array are the attribute names, the values are the attribute values. Attribute names are case-folded on the same criteria as element names. Attribute values are not case-folded. The original order of the attributes can be retrieved by walking through attribs the normal way, using each(). The first key in the array was the first attribute, and so on.
tcpdf.php:	 * @since 5.0.000 (2010-05-02)
tcpdf.php:		$name = $this->removeTagNamespace($name);
tcpdf.php:		if ($this->svgclipmode) {
tcpdf.php:			$this->svgclippaths[$this->svgclipid][] = array('name' => $name, 'attribs' => $attribs, 'tm' => $this->svgcliptm[$this->svgclipid]);
tcpdf.php:		if ($this->svgdefsmode AND !in_array($name, array('clipPath', 'linearGradient', 'radialGradient', 'stop'))) {
tcpdf.php:				$this->svgdefs[$attribs['id']] = array('name' => $name, 'attribs' => $attribs);
tcpdf.php:			if (end($this->svgdefs) !== FALSE) {
tcpdf.php:				$last_svgdefs_id = key($this->svgdefs);
tcpdf.php:				if (isset($this->svgdefs[$last_svgdefs_id]['attribs']['child_elements'])) {
tcpdf.php:					$attribs['id'] = 'DF_'.(count($this->svgdefs[$last_svgdefs_id]['attribs']['child_elements']) + 1);
tcpdf.php:					$this->svgdefs[$last_svgdefs_id]['attribs']['child_elements'][$attribs['id']] = array('name' => $name, 'attribs' => $attribs);
tcpdf.php:		if ($parser == 'clip-path') {
tcpdf.php:		$prev_svgstyle = $this->svgstyles[max(0,(count($this->svgstyles) - 1))]; // previous style
tcpdf.php:		$svgstyle = $this->svgstyles[0]; // set default style
tcpdf.php:				$this->svgdefsmode = true;
tcpdf.php:				$this->svgclipmode = true;
tcpdf.php:					$attribs['id'] = 'CP_'.(count($this->svgcliptm) + 1);
tcpdf.php:				$this->svgclipid = $attribs['id'];
tcpdf.php:				$this->svgclippaths[$this->svgclipid] = array();
tcpdf.php:				$this->svgcliptm[$this->svgclipid] = $tm;
tcpdf.php:				if(++$this->svg_tag_depth <= 1) {
tcpdf.php:				array_push($this->svgstyles, $svgstyle);
tcpdf.php:				$this->StartTransform();
tcpdf.php:				$this->SVGTransform($tm);
tcpdf.php:				$w = (isset($attribs['width'])?$this->getHTMLUnitToUnits($attribs['width'], 0, $this->svgunit, false):$this->w);
tcpdf.php:				$h = (isset($attribs['height'])?$this->getHTMLUnitToUnits($attribs['height'], 0, $this->svgunit, false):$this->h);
tcpdf.php:				$this->Rect($x, $y, $w, $h, 'CNZ', array(), array());
tcpdf.php:					preg_match_all("/[0-9]+/", $attribs['viewBox'], $tmp);
tcpdf.php:								preg_match_all('/[a-zA-Z]+/', $attribs['preserveAspectRatio'], $tmp);
tcpdf.php:								$ax = (($vw * ($wr / $hr)) - $vw);
tcpdf.php:								$ax = ((($vw * ($wr / $hr)) - $vw) / 2);
tcpdf.php:								$ay = (($vh * ($hr / $wr)) - $vh);
tcpdf.php:								$ay = ((($vh * ($hr / $wr)) - $vh) / 2);
tcpdf.php:						$newtm = array($wr, 0, 0, $hr, (($wr * ($ax - $vx)) - $svgX), (($hr * ($ay - $vy)) - $svgY));
tcpdf.php:						$this->SVGTransform($tm);
tcpdf.php:				$this->setSVGStyles($svgstyle, $prev_svgstyle);
tcpdf.php:				array_push($this->svgstyles, $svgstyle);
tcpdf.php:				$this->StartTransform();
tcpdf.php:				$this->SVGTransform($tm);
tcpdf.php:				$this->setSVGStyles($svgstyle, $prev_svgstyle);
tcpdf.php:				if ($this->pdfa_mode && $this->pdfa_version < 2) {
tcpdf.php:					$attribs['id'] = 'GR_'.(count($this->svggradients) + 1);
tcpdf.php:				$this->svggradientid = $attribs['id'];
tcpdf.php:				$this->svggradients[$this->svggradientid] = array();
tcpdf.php:				$this->svggradients[$this->svggradientid]['type'] = 2;
tcpdf.php:				$this->svggradients[$this->svggradientid]['stops'] = array();
tcpdf.php:					$this->svggradients[$this->svggradientid]['gradientUnits'] = $attribs['gradientUnits'];
tcpdf.php:					$this->svggradients[$this->svggradientid]['gradientUnits'] = 'objectBoundingBox';
tcpdf.php:					OR ((isset($attribs['x1']) AND (substr($attribs['x1'], -1) == '%'))
tcpdf.php:						OR (isset($attribs['y1']) AND (substr($attribs['y1'], -1) == '%'))
tcpdf.php:						OR (isset($attribs['x2']) AND (substr($attribs['x2'], -1) == '%'))
tcpdf.php:						OR (isset($attribs['y2']) AND (substr($attribs['y2'], -1) == '%')))) {
tcpdf.php:					$this->svggradients[$this->svggradientid]['mode'] = 'percentage';
tcpdf.php:					$this->svggradients[$this->svggradientid]['mode'] = 'measure';
tcpdf.php:					$this->svggradients[$this->svggradientid]['gradientTransform'] = TCPDF_STATIC::getSVGTransformMatrix($attribs['gradientTransform']);
tcpdf.php:				$this->svggradients[$this->svggradientid]['coords'] = array($x1, $y1, $x2, $y2);
tcpdf.php:					$this->svggradients[$this->svggradientid]['xref'] = substr($attribs['xlink:href'], 1);
tcpdf.php:				if ($this->pdfa_mode && $this->pdfa_version < 2) {
tcpdf.php:					$attribs['id'] = 'GR_'.(count($this->svggradients) + 1);
tcpdf.php:				$this->svggradientid = $attribs['id'];
tcpdf.php:				$this->svggradients[$this->svggradientid] = array();
tcpdf.php:				$this->svggradients[$this->svggradientid]['type'] = 3;
tcpdf.php:				$this->svggradients[$this->svggradientid]['stops'] = array();
tcpdf.php:					$this->svggradients[$this->svggradientid]['gradientUnits'] = $attribs['gradientUnits'];
tcpdf.php:					$this->svggradients[$this->svggradientid]['gradientUnits'] = 'objectBoundingBox';
tcpdf.php:					OR ((isset($attribs['cx']) AND (substr($attribs['cx'], -1) == '%'))
tcpdf.php:					OR (isset($attribs['cy']) AND (substr($attribs['cy'], -1) == '%')))) {
tcpdf.php:					$this->svggradients[$this->svggradientid]['mode'] = 'percentage';
tcpdf.php:					$this->svggradients[$this->svggradientid]['mode'] = 'ratio';
tcpdf.php:					$this->svggradients[$this->svggradientid]['mode'] = 'measure';
tcpdf.php:					$this->svggradients[$this->svggradientid]['gradientTransform'] = TCPDF_STATIC::getSVGTransformMatrix($attribs['gradientTransform']);
tcpdf.php:				$this->svggradients[$this->svggradientid]['coords'] = array($cx, $cy, $fx, $fy, $r);
tcpdf.php:					$this->svggradients[$this->svggradientid]['xref'] = substr($attribs['xlink:href'], 1);
tcpdf.php:				if (substr($attribs['offset'], -1) == '%') {
tcpdf.php:					$offset = floatval(substr($attribs['offset'], 0, -1)) / 100;
tcpdf.php:				$stop_color = isset($svgstyle['stop-color'])?TCPDF_COLORS::convertHTMLColorToDec($svgstyle['stop-color'], $this->spot_colors):'black';
tcpdf.php:				$opacity = isset($svgstyle['stop-opacity'])?$svgstyle['stop-opacity']:1;
tcpdf.php:				$this->svggradients[$this->svggradientid]['stops'][] = array('offset' => $offset, 'color' => $stop_color, 'opacity' => $opacity);
tcpdf.php:							$this->SVGTransform($tm);
tcpdf.php:							$this->SVGPath($d, 'CNZ');
tcpdf.php:							$this->StartTransform();
tcpdf.php:							$this->SVGTransform($tm);
tcpdf.php:							$obstyle = $this->setSVGStyles($svgstyle, $prev_svgstyle, $x, $y, $w, $h, 'SVGPath', array($d, 'CNZ'));
tcpdf.php:								$this->SVGPath($d, $obstyle);
tcpdf.php:							$this->StopTransform();
tcpdf.php:				$x = (isset($attribs['x'])?$this->getHTMLUnitToUnits($attribs['x'], 0, $this->svgunit, false):0);
tcpdf.php:				$y = (isset($attribs['y'])?$this->getHTMLUnitToUnits($attribs['y'], 0, $this->svgunit, false):0);
tcpdf.php:				$w = (isset($attribs['width'])?$this->getHTMLUnitToUnits($attribs['width'], 0, $this->svgunit, false):0);
tcpdf.php:				$h = (isset($attribs['height'])?$this->getHTMLUnitToUnits($attribs['height'], 0, $this->svgunit, false):0);
tcpdf.php:				$rx = (isset($attribs['rx'])?$this->getHTMLUnitToUnits($attribs['rx'], 0, $this->svgunit, false):0);
tcpdf.php:				$ry = (isset($attribs['ry'])?$this->getHTMLUnitToUnits($attribs['ry'], 0, $this->svgunit, false):$rx);
tcpdf.php:					$this->SVGTransform($tm);
tcpdf.php:					$this->RoundedRectXY($x, $y, $w, $h, $rx, $ry, '1111', 'CNZ', array(), array());
tcpdf.php:					$this->StartTransform();
tcpdf.php:					$this->SVGTransform($tm);
tcpdf.php:					$obstyle = $this->setSVGStyles($svgstyle, $prev_svgstyle, $x, $y, $w, $h, 'RoundedRectXY', array($x, $y, $w, $h, $rx, $ry, '1111', 'CNZ'));
tcpdf.php:						$this->RoundedRectXY($x, $y, $w, $h, $rx, $ry, '1111', $obstyle, array(), array());
tcpdf.php:					$this->StopTransform();
tcpdf.php:				$r = (isset($attribs['r']) ? $this->getHTMLUnitToUnits($attribs['r'], 0, $this->svgunit, false) : 0);
tcpdf.php:				$cx = (isset($attribs['cx']) ? $this->getHTMLUnitToUnits($attribs['cx'], 0, $this->svgunit, false) : (isset($attribs['x']) ? $this->getHTMLUnitToUnits($attribs['x'], 0, $this->svgunit, false) : 0));
tcpdf.php:				$cy = (isset($attribs['cy']) ? $this->getHTMLUnitToUnits($attribs['cy'], 0, $this->svgunit, false) : (isset($attribs['y']) ? $this->getHTMLUnitToUnits($attribs['y'], 0, $this->svgunit, false) : 0));
tcpdf.php:				$x = ($cx - $r);
tcpdf.php:				$y = ($cy - $r);
tcpdf.php:					$this->SVGTransform($tm);
tcpdf.php:					$this->Circle($cx, $cy, $r, 0, 360, 'CNZ', array(), array(), 8);
tcpdf.php:					$this->StartTransform();
tcpdf.php:					$this->SVGTransform($tm);
tcpdf.php:					$obstyle = $this->setSVGStyles($svgstyle, $prev_svgstyle, $x, $y, $w, $h, 'Circle', array($cx, $cy, $r, 0, 360, 'CNZ'));
tcpdf.php:						$this->Circle($cx, $cy, $r, 0, 360, $obstyle, array(), array(), 8);
tcpdf.php:					$this->StopTransform();
tcpdf.php:				$rx = (isset($attribs['rx']) ? $this->getHTMLUnitToUnits($attribs['rx'], 0, $this->svgunit, false) : 0);
tcpdf.php:				$ry = (isset($attribs['ry']) ? $this->getHTMLUnitToUnits($attribs['ry'], 0, $this->svgunit, false) : 0);
tcpdf.php:				$cx = (isset($attribs['cx']) ? $this->getHTMLUnitToUnits($attribs['cx'], 0, $this->svgunit, false) : (isset($attribs['x']) ? $this->getHTMLUnitToUnits($attribs['x'], 0, $this->svgunit, false) : 0));
tcpdf.php:				$cy = (isset($attribs['cy']) ? $this->getHTMLUnitToUnits($attribs['cy'], 0, $this->svgunit, false) : (isset($attribs['y']) ? $this->getHTMLUnitToUnits($attribs['y'], 0, $this->svgunit, false) : 0));
tcpdf.php:				$x = ($cx - $rx);
tcpdf.php:				$y = ($cy - $ry);
tcpdf.php:					$this->SVGTransform($tm);
tcpdf.php:					$this->Ellipse($cx, $cy, $rx, $ry, 0, 0, 360, 'CNZ', array(), array(), 8);
tcpdf.php:					$this->StartTransform();
tcpdf.php:					$this->SVGTransform($tm);
tcpdf.php:					$obstyle = $this->setSVGStyles($svgstyle, $prev_svgstyle, $x, $y, $w, $h, 'Ellipse', array($cx, $cy, $rx, $ry, 0, 0, 360, 'CNZ'));
tcpdf.php:						$this->Ellipse($cx, $cy, $rx, $ry, 0, 0, 360, $obstyle, array(), array(), 8);
tcpdf.php:					$this->StopTransform();
tcpdf.php:				$x1 = (isset($attribs['x1'])?$this->getHTMLUnitToUnits($attribs['x1'], 0, $this->svgunit, false):0);
tcpdf.php:				$y1 = (isset($attribs['y1'])?$this->getHTMLUnitToUnits($attribs['y1'], 0, $this->svgunit, false):0);
tcpdf.php:				$x2 = (isset($attribs['x2'])?$this->getHTMLUnitToUnits($attribs['x2'], 0, $this->svgunit, false):0);
tcpdf.php:				$y2 = (isset($attribs['y2'])?$this->getHTMLUnitToUnits($attribs['y2'], 0, $this->svgunit, false):0);
tcpdf.php:				$w = abs($x2 - $x1);
tcpdf.php:				$h = abs($y2 - $y1);
tcpdf.php:					$this->StartTransform();
tcpdf.php:					$this->SVGTransform($tm);
tcpdf.php:					$obstyle = $this->setSVGStyles($svgstyle, $prev_svgstyle, $x, $y, $w, $h, 'Line', array($x1, $y1, $x2, $y2));
tcpdf.php:					$this->Line($x1, $y1, $x2, $y2);
tcpdf.php:					$this->StopTransform();
tcpdf.php:					$p[$key] = $this->getHTMLUnitToUnits($val, 0, $this->svgunit, false);
tcpdf.php:				$w = ($xmax - $xmin);
tcpdf.php:				$h = ($ymax - $ymin);
tcpdf.php:					$this->StartTransform();
tcpdf.php:					$this->SVGTransform($tm);
tcpdf.php:					$obstyle = $this->setSVGStyles($svgstyle, $prev_svgstyle, $x, $y, $w, $h, 'PolyLine', array($p, 'CNZ'));
tcpdf.php:						$this->PolyLine($p, $obstyle, array(), array());
tcpdf.php:					$this->StopTransform();
tcpdf.php:						$this->SVGTransform($tm);
tcpdf.php:						$this->Polygon($p, 'CNZ', array(), array(), true);
tcpdf.php:						$this->StartTransform();
tcpdf.php:						$this->SVGTransform($tm);
tcpdf.php:						$obstyle = $this->setSVGStyles($svgstyle, $prev_svgstyle, $x, $y, $w, $h, 'Polygon', array($p, 'CNZ'));
tcpdf.php:							$this->Polygon($p, $obstyle, array(), array(), true);
tcpdf.php:						$this->StopTransform();
tcpdf.php:				$x = (isset($attribs['x'])?$this->getHTMLUnitToUnits($attribs['x'], 0, $this->svgunit, false):0);
tcpdf.php:				$y = (isset($attribs['y'])?$this->getHTMLUnitToUnits($attribs['y'], 0, $this->svgunit, false):0);
tcpdf.php:				$w = (isset($attribs['width'])?$this->getHTMLUnitToUnits($attribs['width'], 0, $this->svgunit, false):0);
tcpdf.php:				$h = (isset($attribs['height'])?$this->getHTMLUnitToUnits($attribs['height'], 0, $this->svgunit, false):0);
tcpdf.php:					$this->StartTransform();
tcpdf.php:					$this->SVGTransform($tm);
tcpdf.php:					$obstyle = $this->setSVGStyles($svgstyle, $prev_svgstyle, $x, $y, $w, $h);
tcpdf.php:						if (!TCPDF_STATIC::empty_string($this->svgdir) AND (($img[0] == '.') OR (basename($img) == $img))) {
tcpdf.php:							$img = $this->svgdir.'/'.$img;
tcpdf.php:								if (substr($_SERVER['DOCUMENT_ROOT'], -1) == '/') {
tcpdf.php:									$img = substr($_SERVER['DOCUMENT_ROOT'], 0, -1).$img;
tcpdf.php:						$this->ImageEps($img, $x, $y, $w, $h);
tcpdf.php:						$svggradients = $this->svggradients;
tcpdf.php:						$svggradientid = $this->svggradientid;
tcpdf.php:						$svgdefsmode = $this->svgdefsmode;
tcpdf.php:						$svgdefs = $this->svgdefs;
tcpdf.php:						$svgclipmode = $this->svgclipmode;
tcpdf.php:						$svgclippaths = $this->svgclippaths;
tcpdf.php:						$svgcliptm = $this->svgcliptm;
tcpdf.php:						$svgclipid = $this->svgclipid;
tcpdf.php:						$svgtext = $this->svgtext;
tcpdf.php:						$svgtextmode = $this->svgtextmode;
tcpdf.php:						$this->ImageSVG($img, $x, $y, $w, $h);
tcpdf.php:						$this->svggradients = $svggradients;
tcpdf.php:						$this->svggradientid = $svggradientid;
tcpdf.php:						$this->svgdefsmode = $svgdefsmode;
tcpdf.php:						$this->svgdefs = $svgdefs;
tcpdf.php:						$this->svgclipmode = $svgclipmode;
tcpdf.php:						$this->svgclippaths = $svgclippaths;
tcpdf.php:						$this->svgcliptm = $svgcliptm;
tcpdf.php:						$this->svgclipid = $svgclipid;
tcpdf.php:						$this->svgtext = $svgtext;
tcpdf.php:						$this->svgtextmode = $svgtextmode;
tcpdf.php:						$this->Image($img, $x, $y, $w, $h);
tcpdf.php:					$this->StopTransform();
tcpdf.php:				if (isset($this->svgtextmode['text-anchor']) AND !empty($this->svgtext)) {
tcpdf.php:				// only basic support - advanced features must be implemented
tcpdf.php:				$this->svgtextmode['invisible'] = $invisible;
tcpdf.php:				array_push($this->svgstyles, $svgstyle);
tcpdf.php:					$x = $this->getHTMLUnitToUnits($attribs['x'], 0, $this->svgunit, false);
tcpdf.php:					$x = $this->x;
tcpdf.php:					$x += $this->getHTMLUnitToUnits($attribs['dx'], 0, $this->svgunit, false);
tcpdf.php:					$y = $this->getHTMLUnitToUnits($attribs['y'], 0, $this->svgunit, false);
tcpdf.php:					$y = $this->y;
tcpdf.php:					$y += $this->getHTMLUnitToUnits($attribs['dy'], 0, $this->svgunit, false);
tcpdf.php:				$svgstyle['text-color'] = $svgstyle['fill'];
tcpdf.php:				$this->svgtext = '';
tcpdf.php:				if (isset($svgstyle['text-anchor'])) {
tcpdf.php:					$this->svgtextmode['text-anchor'] = $svgstyle['text-anchor'];
tcpdf.php:					$this->svgtextmode['text-anchor'] = 'start';
tcpdf.php:						$this->svgtextmode['rtl'] = true;
tcpdf.php:						$this->svgtextmode['rtl'] = false;
tcpdf.php:					$this->svgtextmode['rtl'] = false;
tcpdf.php:				if (isset($svgstyle['stroke']) AND ($svgstyle['stroke'] != 'none') AND isset($svgstyle['stroke-width']) AND ($svgstyle['stroke-width'] > 0)) {
tcpdf.php:					$this->svgtextmode['stroke'] = $this->getHTMLUnitToUnits($svgstyle['stroke-width'], 0, $this->svgunit, false);
tcpdf.php:					$this->svgtextmode['stroke'] = false;
tcpdf.php:				$this->StartTransform();
tcpdf.php:				$this->SVGTransform($tm);
tcpdf.php:				$obstyle = $this->setSVGStyles($svgstyle, $prev_svgstyle, $x, $y, 1, 1);
tcpdf.php:				$this->x = $x;
tcpdf.php:				$this->y = $y;
tcpdf.php:					if (isset($this->svgdefs[$svgdefid])) {
tcpdf.php:						$use = $this->svgdefs[$svgdefid];
tcpdf.php:						$this->startSVGElementHandler($parser, $use['name'], $attribs);
tcpdf.php:					$this->startSVGElementHandler('child-tag', $child_element['name'], $child_element['attribs']);
tcpdf.php:						$this->svgtext = $child_element['attribs']['content'];
tcpdf.php:					$this->endSVGElementHandler('child-tag', $child_element['name']);
tcpdf.php:	 * @param string $name The second parameter, name, contains the name of the element for which this handler is called. If case-folding is in effect for this parser, the element name will be in uppercase letters.
tcpdf.php:	 * @since 5.0.000 (2010-05-02)
tcpdf.php:		$name = $this->removeTagNamespace($name);
tcpdf.php:		if ($this->svgdefsmode AND !in_array($name, array('defs', 'clipPath', 'linearGradient', 'radialGradient', 'stop'))) {;
tcpdf.php:			if (end($this->svgdefs) !== FALSE) {
tcpdf.php:				$last_svgdefs_id = key($this->svgdefs);
tcpdf.php:				if (isset($this->svgdefs[$last_svgdefs_id]['attribs']['child_elements'])) {
tcpdf.php:					foreach($this->svgdefs[$last_svgdefs_id]['attribs']['child_elements'] as $child_element) {
tcpdf.php:							$this->svgdefs[$last_svgdefs_id]['attribs']['child_elements'][$child_element['attribs']['id'].'_CLOSE'] = array('name' => $name, 'attribs' => array('closing_tag' => TRUE, 'content' => $this->svgtext));
tcpdf.php:					if ($this->svgdefs[$last_svgdefs_id]['name'] == $name) {
tcpdf.php:						$this->svgdefs[$last_svgdefs_id]['attribs']['child_elements'][$last_svgdefs_id.'_CLOSE'] = array('name' => $name, 'attribs' => array('closing_tag' => TRUE, 'content' => $this->svgtext));
tcpdf.php:				$this->svgdefsmode = false;
tcpdf.php:				$this->svgclipmode = false;
tcpdf.php:				if (--$this->svg_tag_depth <= 0) {
tcpdf.php:				array_pop($this->svgstyles);
tcpdf.php:				$this->StopTransform();
tcpdf.php:				if ($this->svgtextmode['invisible']) {
tcpdf.php:				$text = $this->svgtext;
tcpdf.php:				//$text = $this->stringTrim($text);
tcpdf.php:				$textlen = $this->GetStringWidth($text);
tcpdf.php:				if ($this->svgtextmode['text-anchor'] != 'start') {
tcpdf.php:					if ($this->svgtextmode['text-anchor'] == 'end') {
tcpdf.php:						if ($this->svgtextmode['rtl']) {
tcpdf.php:							$this->x += $textlen;
tcpdf.php:							$this->x -= $textlen;
tcpdf.php:					} elseif ($this->svgtextmode['text-anchor'] == 'middle') {
tcpdf.php:						if ($this->svgtextmode['rtl']) {
tcpdf.php:							$this->x += ($textlen / 2);
tcpdf.php:							$this->x -= ($textlen / 2);
tcpdf.php:				$textrendermode = $this->textrendermode;
tcpdf.php:				$textstrokewidth = $this->textstrokewidth;
tcpdf.php:				$this->setTextRenderingMode($this->svgtextmode['stroke'], true, false);
tcpdf.php:					$tmpx = $this->x;
tcpdf.php:					$tmpy = $this->y;
tcpdf.php:				$this->Cell($textlen, 0, $text, 0, 0, '', false, '', 0, false, 'L', 'T');
tcpdf.php:					$this->x = $tmpx;
tcpdf.php:					$this->y = $tmpy;
tcpdf.php:				$this->textrendermode = $textrendermode;
tcpdf.php:				$this->textstrokewidth = $textstrokewidth;
tcpdf.php:				$this->svgtext = '';
tcpdf.php:				$this->StopTransform();
tcpdf.php:				if (!$this->svgdefsmode) {
tcpdf.php:					array_pop($this->svgstyles);
tcpdf.php:	 * @since 5.0.000 (2010-05-02)
tcpdf.php:		$this->svgtext .= $data;
tcpdf.php:	// --- END SVG METHODS -----------------------------------------------------
tcpdf.php:        if (!isset($this->fileContentCache[$file])) {
tcpdf.php:            $this->fileContentCache[$file] = TCPDF_STATIC::fileGetContents($file);
tcpdf.php:        return $this->fileContentCache[$file];
tcpdf.php:        if (isset($this->fileContentCache[$file]) || false !== $this->getImageBuffer($file)) {
tcpdf_autoconfig.php:// Begin       : 2013-05-16
tcpdf_autoconfig.php:// Last Update : 2014-12-18
tcpdf_autoconfig.php:// Authors     : Nicola Asuni - Tecnick.com LTD - www.tecnick.com - info@tecnick.com
tcpdf_autoconfig.php:// License     : GNU-LGPL v3 (http://www.gnu.org/copyleft/lesser.html)
tcpdf_autoconfig.php:// -------------------------------------------------------------------
tcpdf_autoconfig.php:// Copyright (C) 2011-2014 Nicola Asuni - Tecnick.com LTD
tcpdf_autoconfig.php:// -------------------------------------------------------------------
tcpdf_autoconfig.php:		$_SERVER['DOCUMENT_ROOT'] = str_replace( '\\', '/', substr($_SERVER['SCRIPT_FILENAME'], 0, 0-strlen($_SERVER['PHP_SELF'])));
tcpdf_autoconfig.php:		$_SERVER['DOCUMENT_ROOT'] = str_replace( '\\', '/', substr(str_replace('\\\\', '\\', $_SERVER['PATH_TRANSLATED']), 0, 0-strlen($_SERVER['PHP_SELF'])));
tcpdf_autoconfig.php:if (substr($_SERVER['DOCUMENT_ROOT'], -1) != '/') {
tcpdf_autoconfig.php:	$tcpdf_config_files = array(dirname(__FILE__).'/config/tcpdf_config.php', '/etc/php-tcpdf/tcpdf_config.php', '/etc/tcpdf/tcpdf_config.php', '/etc/tcpdf_config.php');
tcpdf_autoconfig.php:		$k_path_url .= str_replace( '\\', '/', substr(K_PATH_MAIN, (strlen($_SERVER['DOCUMENT_ROOT']) - 1)));
tcpdf_autoconfig.php:	$tcpdf_images_dirs = array(K_PATH_MAIN.'examples/images/', K_PATH_MAIN.'images/', '/usr/share/doc/php-tcpdf/examples/images/', '/usr/share/doc/tcpdf/examples/images/', '/usr/share/doc/php/tcpdf/examples/images/', '/var/www/tcpdf/images/', '/var/www/html/tcpdf/images/', '/usr/local/apache2/htdocs/tcpdf/images/', K_PATH_MAIN);
tcpdf_autoconfig.php:	if (substr($K_PATH_CACHE, -1) != '/') {
tcpdf_autoconfig.php:	define ('PDF_HEADER_STRING', "by Nicola Asuni - Tecnick.com\nwww.tcpdf.org");
tcpdf_barcodes_1d.php:// Begin       : 2008-06-09
tcpdf_barcodes_1d.php:// Last Update : 2014-10-20
tcpdf_barcodes_1d.php:// Author      : Nicola Asuni - Tecnick.com LTD - www.tecnick.com - info@tecnick.com
tcpdf_barcodes_1d.php:// License     : GNU-LGPL v3 (http://www.gnu.org/copyleft/lesser.html)
tcpdf_barcodes_1d.php:// -------------------------------------------------------------------
tcpdf_barcodes_1d.php:// Copyright (C) 2008-2014 Nicola Asuni - Tecnick.com LTD
tcpdf_barcodes_1d.php:// -------------------------------------------------------------------
tcpdf_barcodes_1d.php: 	 * @param string $type type of barcode: <ul><li>C39 : CODE 39 - ANSI MH10.8M-1983 - USD-3 - 3 of 9.</li><li>C39+ : CODE 39 with checksum</li><li>C39E : CODE 39 EXTENDED</li><li>C39E+ : CODE 39 EXTENDED + CHECKSUM</li><li>C93 : CODE 93 - USS-93</li><li>S25 : Standard 2 of 5</li><li>S25+ : Standard 2 of 5 + CHECKSUM</li><li>I25 : Interleaved 2 of 5</li><li>I25+ : Interleaved 2 of 5 + CHECKSUM</li><li>C128 : CODE 128</li><li>C128A : CODE 128 A</li><li>C128B : CODE 128 B</li><li>C128C : CODE 128 C</li><li>EAN2 : 2-Digits UPC-Based Extension</li><li>EAN5 : 5-Digits UPC-Based Extension</li><li>EAN8 : EAN 8</li><li>EAN13 : EAN 13</li><li>UPCA : UPC-A</li><li>UPCE : UPC-E</li><li>MSI : MSI (Variation of Plessey code)</li><li>MSI+ : MSI + CHECKSUM (modulo 11)</li><li>POSTNET : POSTNET</li><li>PLANET : PLANET</li><li>RMS4CC : RMS4CC (Royal Mail 4-state Customer Code) - CBC (Customer Bar Code)</li><li>KIX : KIX (Klant index - Customer index)</li><li>IMB: Intelligent Mail Barcode - Onecode - USPS-B-3200</li><li>CODABAR : CODABAR</li><li>CODE11 : CODE 11</li><li>PHARMA : PHARMACODE</li><li>PHARMA2T : PHARMACODE TWO-TRACKS</li></ul>
tcpdf_barcodes_1d.php:		$this->setBarcode($code, $type);
tcpdf_barcodes_1d.php:		return $this->barcode_array;
tcpdf_barcodes_1d.php:		$code = $this->getBarcodeSVGcode($w, $h, $color);
tcpdf_barcodes_1d.php:		header('Content-Type: application/svg+xml');
tcpdf_barcodes_1d.php:		header('Cache-Control: public, must-revalidate, max-age=0'); // HTTP/1.1
tcpdf_barcodes_1d.php:		header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
tcpdf_barcodes_1d.php:		header('Content-Disposition: inline; filename="'.md5($code).'.svg";');
tcpdf_barcodes_1d.php:		//header('Content-Length: '.strlen($code));
tcpdf_barcodes_1d.php:		$svg .= '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">'."\n";
tcpdf_barcodes_1d.php:		$svg .= '<svg width="'.round(($this->barcode_array['maxw'] * $w), 3).'" height="'.$h.'" version="1.1" xmlns="http://www.w3.org/2000/svg">'."\n";
tcpdf_barcodes_1d.php:		$svg .= "\t".'<desc>'.strtr($this->barcode_array['code'], $repstr).'</desc>'."\n";
tcpdf_barcodes_1d.php:		foreach ($this->barcode_array['bcode'] as $k => $v) {
tcpdf_barcodes_1d.php:			$bh = round(($v['h'] * $h / $this->barcode_array['maxh']), 3);
tcpdf_barcodes_1d.php:				$y = round(($v['p'] * $h / $this->barcode_array['maxh']), 3);
tcpdf_barcodes_1d.php:		$html = '<div style="font-size:0;position:relative;width:'.($this->barcode_array['maxw'] * $w).'px;height:'.($h).'px;">'."\n";
tcpdf_barcodes_1d.php:		foreach ($this->barcode_array['bcode'] as $k => $v) {
tcpdf_barcodes_1d.php:			$bh = round(($v['h'] * $h / $this->barcode_array['maxh']), 3);
tcpdf_barcodes_1d.php:				$y = round(($v['p'] * $h / $this->barcode_array['maxh']), 3);
tcpdf_barcodes_1d.php:				$html .= '<div style="background-color:'.$color.';width:'.$bw.'px;height:'.$bh.'px;position:absolute;left:'.$x.'px;top:'.$y.'px;">&nbsp;</div>'."\n";
tcpdf_barcodes_1d.php:	 * @param array $color RGB (0-255) foreground color for bar elements (background is transparent).
tcpdf_barcodes_1d.php:		$data = $this->getBarcodePngData($w, $h, $color);
tcpdf_barcodes_1d.php:		header('Content-Type: image/png');
tcpdf_barcodes_1d.php:		header('Cache-Control: public, must-revalidate, max-age=0'); // HTTP/1.1
tcpdf_barcodes_1d.php:		header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
tcpdf_barcodes_1d.php:		//header('Content-Length: '.strlen($data));
tcpdf_barcodes_1d.php:	 * @param array $color RGB (0-255) foreground color for bar elements (background is transparent).
tcpdf_barcodes_1d.php:		$width = ($this->barcode_array['maxw'] * $w);
tcpdf_barcodes_1d.php:			$png->newImage($width, $height, 'none', 'png');
tcpdf_barcodes_1d.php:			$bar->setfillcolor($fgcol);
tcpdf_barcodes_1d.php:		foreach ($this->barcode_array['bcode'] as $k => $v) {
tcpdf_barcodes_1d.php:			$bh = round(($v['h'] * $h / $this->barcode_array['maxh']), 3);
tcpdf_barcodes_1d.php:				$y = round(($v['p'] * $h / $this->barcode_array['maxh']), 3);
tcpdf_barcodes_1d.php:					$bar->rectangle($x, $y, ($x + $bw - 1), ($y + $bh - 1));
tcpdf_barcodes_1d.php:					imagefilledrectangle($png, $x, $y, ($x + $bw - 1), ($y + $bh - 1), $fgcol);
tcpdf_barcodes_1d.php:			$png->drawimage($bar);
tcpdf_barcodes_1d.php: 	 * @param string $type type of barcode: <ul><li>C39 : CODE 39 - ANSI MH10.8M-1983 - USD-3 - 3 of 9.</li><li>C39+ : CODE 39 with checksum</li><li>C39E : CODE 39 EXTENDED</li><li>C39E+ : CODE 39 EXTENDED + CHECKSUM</li><li>C93 : CODE 93 - USS-93</li><li>S25 : Standard 2 of 5</li><li>S25+ : Standard 2 of 5 + CHECKSUM</li><li>I25 : Interleaved 2 of 5</li><li>I25+ : Interleaved 2 of 5 + CHECKSUM</li><li>C128 : CODE 128</li><li>C128A : CODE 128 A</li><li>C128B : CODE 128 B</li><li>C128C : CODE 128 C</li><li>EAN2 : 2-Digits UPC-Based Extension</li><li>EAN5 : 5-Digits UPC-Based Extension</li><li>EAN8 : EAN 8</li><li>EAN13 : EAN 13</li><li>UPCA : UPC-A</li><li>UPCE : UPC-E</li><li>MSI : MSI (Variation of Plessey code)</li><li>MSI+ : MSI + CHECKSUM (modulo 11)</li><li>POSTNET : POSTNET</li><li>PLANET : PLANET</li><li>RMS4CC : RMS4CC (Royal Mail 4-state Customer Code) - CBC (Customer Bar Code)</li><li>KIX : KIX (Klant index - Customer index)</li><li>IMB: Intelligent Mail Barcode - Onecode - USPS-B-3200</li><li>IMBPRE: Pre-processed Intelligent Mail Barcode - Onecode - USPS-B-3200, using only F,A,D,T letters</li><li>CODABAR : CODABAR</li><li>CODE11 : CODE 11</li><li>PHARMA : PHARMACODE</li><li>PHARMA2T : PHARMACODE TWO-TRACKS</li></ul>
tcpdf_barcodes_1d.php:			case 'C39': { // CODE 39 - ANSI MH10.8M-1983 - USD-3 - 3 of 9.
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_code39($code, false, false);
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_code39($code, false, true);
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_code39($code, true, false);
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_code39($code, true, true);
tcpdf_barcodes_1d.php:			case 'C93': { // CODE 93 - USS-93
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_code93($code);
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_s25($code, false);
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_s25($code, true);
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_i25($code, false);
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_i25($code, true);
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_c128($code, '');
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_c128($code, 'A');
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_c128($code, 'B');
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_c128($code, 'C');
tcpdf_barcodes_1d.php:			case 'EAN2': { // 2-Digits UPC-Based Extension
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_eanext($code, 2);
tcpdf_barcodes_1d.php:			case 'EAN5': { // 5-Digits UPC-Based Extension
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_eanext($code, 5);
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_eanupc($code, 8);
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_eanupc($code, 13);
tcpdf_barcodes_1d.php:			case 'UPCA': { // UPC-A
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_eanupc($code, 12);
tcpdf_barcodes_1d.php:			case 'UPCE': { // UPC-E
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_eanupc($code, 6);
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_msi($code, false);
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_msi($code, true);
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_postnet($code, false);
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_postnet($code, true);
tcpdf_barcodes_1d.php:			case 'RMS4CC': { // RMS4CC (Royal Mail 4-state Customer Code) - CBC (Customer Bar Code)
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_rms4cc($code, false);
tcpdf_barcodes_1d.php:			case 'KIX': { // KIX (Klant index - Customer index)
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_rms4cc($code, true);
tcpdf_barcodes_1d.php:			case 'IMB': { // IMB - Intelligent Mail Barcode - Onecode - USPS-B-3200
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_imb($code);
tcpdf_barcodes_1d.php:			case 'IMBPRE': { // IMB - Intelligent Mail Barcode - Onecode - USPS-B-3200- pre-processed
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_imb_pre($code);
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_codabar($code);
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_code11($code);
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_pharmacode($code);
tcpdf_barcodes_1d.php:			case 'PHARMA2T': { // PHARMACODE TWO-TRACKS
tcpdf_barcodes_1d.php:				$arrcode = $this->barcode_pharmacode2t($code);
tcpdf_barcodes_1d.php:				$this->barcode_array = array();
tcpdf_barcodes_1d.php:		$this->barcode_array = $arrcode;
tcpdf_barcodes_1d.php:	 * CODE 39 - ANSI MH10.8M-1983 - USD-3 - 3 of 9.
tcpdf_barcodes_1d.php:	 * General-purpose code in very wide use world-wide
tcpdf_barcodes_1d.php:		$chr['-'] = '131111313';
tcpdf_barcodes_1d.php:			$code = $this->encode_code39_ext($code);
tcpdf_barcodes_1d.php:			$code .= $this->checksum_code39($code);
tcpdf_barcodes_1d.php:			chr(44) => '/L', chr(45) => '-', chr(46) => '.', chr(47) => '/O',
tcpdf_barcodes_1d.php:			'W', 'X', 'Y', 'Z', '-', '.', ' ', '$', '/', '+', '%');
tcpdf_barcodes_1d.php:	 * CODE 93 - USS-93
tcpdf_barcodes_1d.php:		$chr[45] = '121131'; // -
tcpdf_barcodes_1d.php:		$chr[42] = '111141'; // start-stop
tcpdf_barcodes_1d.php:			chr(44) => chr(129).'L', chr(45) => '-', chr(46) => '.', chr(47) => chr(129).'O',
tcpdf_barcodes_1d.php:		$code_ext .= $this->checksum_code93($code_ext);
tcpdf_barcodes_1d.php:			'W', 'X', 'Y', 'Z', '-', '.', ' ', '$', '/', '+', '%',
tcpdf_barcodes_1d.php:		for ($i = ($len - 1); $i >= 0; --$i) {
tcpdf_barcodes_1d.php:		for ($i = $len; $i >= 0; --$i) {
tcpdf_barcodes_1d.php:			$r = (10 - $r);
tcpdf_barcodes_1d.php:			for ($i = ($clen - 1); $i >= 0; --$i) {
tcpdf_barcodes_1d.php:				$check = 11 - $check;
tcpdf_barcodes_1d.php:		return $this->binseq_to_array($seq, $bararray);
tcpdf_barcodes_1d.php:			$code .= $this->checksum_s25($code);
tcpdf_barcodes_1d.php:			// add leading zero if code-length is odd
tcpdf_barcodes_1d.php:		return $this->binseq_to_array($seq, $bararray);
tcpdf_barcodes_1d.php:			if (($i == ($len - 1)) OR (($i < ($len - 1)) AND ($seq[$i] != $seq[($i+1)]))) {
tcpdf_barcodes_1d.php:			$code .= $this->checksum_s25($code);
tcpdf_barcodes_1d.php:			// add leading zero if code-length is odd
tcpdf_barcodes_1d.php:			// create a bar-space sequence
tcpdf_barcodes_1d.php:	 * Very capable code, excellent density, high reliability; in very wide use world-wide
tcpdf_barcodes_1d.php:		// ASCII characters for code A (ASCII 00 - 95)
tcpdf_barcodes_1d.php:		$keys_a = ' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_';
tcpdf_barcodes_1d.php:		// ASCII characters for code B (ASCII 32 - 127)
tcpdf_barcodes_1d.php:		$keys_b = ' !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~'.chr(127);
tcpdf_barcodes_1d.php:					--$len;
tcpdf_barcodes_1d.php:					if (preg_match('/([0-9]{2})/', $chrnum) > 0) {
tcpdf_barcodes_1d.php:				preg_match_all('/([0-9]{4,})/', $code, $numseq, PREG_OFFSET_CAPTURE);
tcpdf_barcodes_1d.php:							$sequence = array_merge($sequence, $this->get128ABsequence(substr($code, $end_offset, ($offset - $end_offset))));
tcpdf_barcodes_1d.php:							--$slen;
tcpdf_barcodes_1d.php:						$sequence = array_merge($sequence, $this->get128ABsequence(substr($code, $end_offset)));
tcpdf_barcodes_1d.php:					$sequence = array_merge($sequence, $this->get128ABsequence($code));
tcpdf_barcodes_1d.php:							} elseif ($sequence[($key - 1)][0] != 'A') {
tcpdf_barcodes_1d.php:								if (($seq[2] == 1) AND ($key > 0) AND ($sequence[($key - 1)][0] == 'B') AND (!isset($sequence[($key - 1)][3]))) {
tcpdf_barcodes_1d.php:								} elseif (!isset($sequence[($key - 1)][3])) {
tcpdf_barcodes_1d.php:							} elseif ($sequence[($key - 1)][0] != 'B') {
tcpdf_barcodes_1d.php:								if (($seq[2] == 1) AND ($key > 0) AND ($sequence[($key - 1)][0] == 'A') AND (!isset($sequence[($key - 1)][3]))) {
tcpdf_barcodes_1d.php:								} elseif (!isset($sequence[($key - 1)][3])) {
tcpdf_barcodes_1d.php:							} elseif ($sequence[($key - 1)][0] != 'C') {
tcpdf_barcodes_1d.php:		preg_match_all('/([\0-\31])/', $code, $numseq, PREG_OFFSET_CAPTURE);
tcpdf_barcodes_1d.php:					$sequence[] = array('B', substr($code, $end_offset, ($offset - $end_offset)), ($offset - $end_offset));
tcpdf_barcodes_1d.php:				$sequence[] = array('B', substr($code, $end_offset), ($len - $end_offset));
tcpdf_barcodes_1d.php:	 * EAN13 and UPC-A barcodes.
tcpdf_barcodes_1d.php:	 * UPC-A: Universal product code seen on almost all retail products in the USA and Canada
tcpdf_barcodes_1d.php:	 * UPC-E: Short version of UPC symbol
tcpdf_barcodes_1d.php:	 * @param string $len barcode type: 6 = UPC-E, 8 = EAN8, 13 = EAN13, 12 = UPC-A
tcpdf_barcodes_1d.php:			$len = 12; // UPC-A
tcpdf_barcodes_1d.php:			$upce = true; // UPC-E mode
tcpdf_barcodes_1d.php:		$data_len = $len - 1;
tcpdf_barcodes_1d.php:			$r = (10 - $r);
tcpdf_barcodes_1d.php:			// UPC-A
tcpdf_barcodes_1d.php:			// convert UPC-A to UPC-E
tcpdf_barcodes_1d.php:					$seq .= $codes[$p[$i-1]][$code[$i]];
tcpdf_barcodes_1d.php:			if (($i == ($clen - 1)) OR (($i < ($clen - 1)) AND ($seq[$i] != $seq[$i+1]))) {
tcpdf_barcodes_1d.php:	 * UPC-Based Extensions
tcpdf_barcodes_1d.php:	 * 2-Digit Ext.: Used to indicate magazines and newspaper issue numbers
tcpdf_barcodes_1d.php:	 * 5-Digit Ext.: Used to mark suggested retail price of books
tcpdf_barcodes_1d.php:	 * @param string $len barcode type: 2 = 2-Digit, 5 = 5-Digit
tcpdf_barcodes_1d.php:		return $this->binseq_to_array($seq, $bararray);
tcpdf_barcodes_1d.php:	 * @param string $code zip code to represent. Must be a string containing a zip code of the form DDDDD or DDDDD-DDDD.
tcpdf_barcodes_1d.php:		$code = str_replace('-', '', $code);
tcpdf_barcodes_1d.php:			$chkd = (10 - $chkd);
tcpdf_barcodes_1d.php:	 * RMS4CC - CBC - KIX
tcpdf_barcodes_1d.php:	 * RMS4CC (Royal Mail 4-state Customer Code) - CBC (Customer Bar Code) - KIX (Klant index - Customer index)
tcpdf_barcodes_1d.php:	 * @param boolean $kix if true prints the KIX variation (doesn't use the start and end symbols, and the checksum) - in this case the house number must be sufficed with an X and placed at the end of the code.
tcpdf_barcodes_1d.php:			'-' => '11122111',
tcpdf_barcodes_1d.php:			'-' => '112111',
tcpdf_barcodes_1d.php:		for ($i = ($len - 1); $i >= 0; --$i) {
tcpdf_barcodes_1d.php:			if ($digit == '-') {
tcpdf_barcodes_1d.php:			$check = '-';
tcpdf_barcodes_1d.php:			for ($i = $len; $i >= 0; --$i) {
tcpdf_barcodes_1d.php:				if ($digit == '-') {
tcpdf_barcodes_1d.php:				$code -= 2;
tcpdf_barcodes_1d.php:				$code -= 1;
tcpdf_barcodes_1d.php:		$seq = substr($seq, 0, -2);
tcpdf_barcodes_1d.php:		return $this->binseq_to_array($seq, $bararray);
tcpdf_barcodes_1d.php:	 * Pharmacode two-track
tcpdf_barcodes_1d.php:					$code = ($code - 3) / 3;
tcpdf_barcodes_1d.php:					$code = ($code - 1) / 3;
tcpdf_barcodes_1d.php:					$code = ($code - 2) / 3;
tcpdf_barcodes_1d.php:		unset($bararray['bcode'][($k - 1)]);
tcpdf_barcodes_1d.php:		--$bararray['maxw'];
tcpdf_barcodes_1d.php:	 * IMB - Intelligent Mail Barcode - Onecode - USPS-B-3200
tcpdf_barcodes_1d.php:	 * Intelligent Mail barcode is a 65-bar code for use on mail in the United States.
tcpdf_barcodes_1d.php:	 * The fields are described as follows:<ul><li>The Barcode Identifier shall be assigned by USPS to encode the presort identification that is currently printed in human readable form on the optional endorsement line (OEL) as well as for future USPS use. This shall be two digits, with the second digit in the range of 0–4. The allowable encoding ranges shall be 00–04, 10–14, 20–24, 30–34, 40–44, 50–54, 60–64, 70–74, 80–84, and 90–94.</li><li>The Service Type Identifier shall be assigned by USPS for any combination of services requested on the mailpiece. The allowable encoding range shall be 000http://it2.php.net/manual/en/function.dechex.php–999. Each 3-digit value shall correspond to a particular mail class with a particular combination of service(s). Each service program, such as OneCode Confirm and OneCode ACS, shall provide the list of Service Type Identifier values.</li><li>The Mailer or Customer Identifier shall be assigned by USPS as a unique, 6 or 9 digit number that identifies a business entity. The allowable encoding range for the 6 digit Mailer ID shall be 000000- 899999, while the allowable encoding range for the 9 digit Mailer ID shall be 900000000-999999999.</li><li>The Serial or Sequence Number shall be assigned by the mailer for uniquely identifying and tracking mailpieces. The allowable encoding range shall be 000000000–999999999 when used with a 6 digit Mailer ID and 000000-999999 when used with a 9 digit Mailer ID. e. The Delivery Point ZIP Code shall be assigned by the mailer for routing the mailpiece. This shall replace POSTNET for routing the mailpiece to its final delivery point. The length may be 0, 5, 9, or 11 digits. The allowable encoding ranges shall be no ZIP Code, 00000–99999,  000000000–999999999, and 00000000000–99999999999.</li></ul>
tcpdf_barcodes_1d.php:	 * @param string $code code to print, separate the ZIP (routing code) from the rest using a minus char '-' (BarcodeID_ServiceTypeID_MailerID_SerialNumber-RoutingCode)
tcpdf_barcodes_1d.php:		$code_arr = explode('-', $code);
tcpdf_barcodes_1d.php:		$binary_code = $this->dec_to_hex($binary_code);
tcpdf_barcodes_1d.php:		$binary_code_arr = substr($binary_code_arr, 0, -1);
tcpdf_barcodes_1d.php:		$fcs = $this->imb_crc11fcs($binary_code_arr);
tcpdf_barcodes_1d.php:		$data = $this->hex_to_dec($binary_code_102bit);
tcpdf_barcodes_1d.php:		$table2of13 = $this->imb_tables(2, 78);
tcpdf_barcodes_1d.php:		$table5of13 = $this->imb_tables(5, 1287);
tcpdf_barcodes_1d.php:				$chrcode = $table2of13[($val - 1287)];
tcpdf_barcodes_1d.php:		unset($bararray['bcode'][($k - 1)]);
tcpdf_barcodes_1d.php:		--$bararray['maxw'];
tcpdf_barcodes_1d.php:	 * IMB - Intelligent Mail Barcode - Onecode - USPS-B-3200
tcpdf_barcodes_1d.php:	 * @param string $code pre-formatted IMB barcode (65 chars "FADT")
tcpdf_barcodes_1d.php:		unset($bararray['bcode'][($k - 1)]);
tcpdf_barcodes_1d.php:		--$bararray['maxw'];
tcpdf_barcodes_1d.php:		for($pos = ($len - 1); $pos >= 0; --$pos) {
tcpdf_barcodes_1d.php:		$lui = $size - 1; // LUT upper index
tcpdf_barcodes_1d.php:				$reverse = ($this->imb_reverse_us($count) >> 3);
tcpdf_barcodes_1d.php:						--$lui;
tcpdf_barcodes_2d.php:// Begin       : 2009-04-07
tcpdf_barcodes_2d.php:// Last Update : 2014-05-20
tcpdf_barcodes_2d.php:// Author      : Nicola Asuni - Tecnick.com LTD - www.tecnick.com - info@tecnick.com
tcpdf_barcodes_2d.php:// License     : GNU-LGPL v3 (http://www.gnu.org/copyleft/lesser.html)
tcpdf_barcodes_2d.php:// -------------------------------------------------------------------
tcpdf_barcodes_2d.php:// Copyright (C) 2009-2014 Nicola Asuni - Tecnick.com LTD
tcpdf_barcodes_2d.php:// -------------------------------------------------------------------
tcpdf_barcodes_2d.php: 	 * @param string $type type of barcode: <ul><li>DATAMATRIX : Datamatrix (ISO/IEC 16022)</li><li>PDF417 : PDF417 (ISO/IEC 15438:2006)</li><li>PDF417,a,e,t,s,f,o0,o1,o2,o3,o4,o5,o6 : PDF417 with parameters: a = aspect ratio (width/height); e = error correction level (0-8); t = total number of macro segments; s = macro segment index (0-99998); f = file ID; o0 = File Name (text); o1 = Segment Count (numeric); o2 = Time Stamp (numeric); o3 = Sender (text); o4 = Addressee (text); o5 = File Size (numeric); o6 = Checksum (numeric). NOTES: Parameters t, s and f are required for a Macro Control Block, all other parameters are optional. To use a comma character ',' on text options, replace it with the character 255: "\xff".</li><li>QRCODE : QRcode Low error correction</li><li>QRCODE,L : QRcode Low error correction</li><li>QRCODE,M : QRcode Medium error correction</li><li>QRCODE,Q : QRcode Better error correction</li><li>QRCODE,H : QR-CODE Best error correction</li><li>RAW: raw mode - comma-separad list of array rows</li><li>RAW2: raw mode - array rows are surrounded by square parenthesis.</li><li>TEST : Test matrix</li></ul>
tcpdf_barcodes_2d.php:		$this->setBarcode($code, $type);
tcpdf_barcodes_2d.php:		return $this->barcode_array;
tcpdf_barcodes_2d.php:		$code = $this->getBarcodeSVGcode($w, $h, $color);
tcpdf_barcodes_2d.php:		header('Content-Type: application/svg+xml');
tcpdf_barcodes_2d.php:		header('Cache-Control: public, must-revalidate, max-age=0'); // HTTP/1.1
tcpdf_barcodes_2d.php:		header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
tcpdf_barcodes_2d.php:		header('Content-Disposition: inline; filename="'.md5($code).'.svg";');
tcpdf_barcodes_2d.php:		//header('Content-Length: '.strlen($code));
tcpdf_barcodes_2d.php:		$svg .= '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">'."\n";
tcpdf_barcodes_2d.php:		$svg .= '<svg width="'.round(($this->barcode_array['num_cols'] * $w), 3).'" height="'.round(($this->barcode_array['num_rows'] * $h), 3).'" version="1.1" xmlns="http://www.w3.org/2000/svg">'."\n";
tcpdf_barcodes_2d.php:		$svg .= "\t".'<desc>'.strtr($this->barcode_array['code'], $repstr).'</desc>'."\n";
tcpdf_barcodes_2d.php:		for ($r = 0; $r < $this->barcode_array['num_rows']; ++$r) {
tcpdf_barcodes_2d.php:			for ($c = 0; $c < $this->barcode_array['num_cols']; ++$c) {
tcpdf_barcodes_2d.php:				if ($this->barcode_array['bcode'][$r][$c] == 1) {
tcpdf_barcodes_2d.php:		$html = '<div style="font-size:0;position:relative;width:'.($w * $this->barcode_array['num_cols']).'px;height:'.($h * $this->barcode_array['num_rows']).'px;">'."\n";
tcpdf_barcodes_2d.php:		for ($r = 0; $r < $this->barcode_array['num_rows']; ++$r) {
tcpdf_barcodes_2d.php:			for ($c = 0; $c < $this->barcode_array['num_cols']; ++$c) {
tcpdf_barcodes_2d.php:				if ($this->barcode_array['bcode'][$r][$c] == 1) {
tcpdf_barcodes_2d.php:					$html .= '<div style="background-color:'.$color.';width:'.$w.'px;height:'.$h.'px;position:absolute;left:'.$x.'px;top:'.$y.'px;">&nbsp;</div>'."\n";
tcpdf_barcodes_2d.php:	 * @param array $color RGB (0-255) foreground color for bar elements (background is transparent).
tcpdf_barcodes_2d.php:		$data = $this->getBarcodePngData($w, $h, $color);
tcpdf_barcodes_2d.php:		header('Content-Type: image/png');
tcpdf_barcodes_2d.php:		header('Cache-Control: public, must-revalidate, max-age=0'); // HTTP/1.1
tcpdf_barcodes_2d.php:		header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');
tcpdf_barcodes_2d.php:		//header('Content-Length: '.strlen($data));
tcpdf_barcodes_2d.php:	 * @param array $color RGB (0-255) foreground color for bar elements (background is transparent).
tcpdf_barcodes_2d.php:		$width = ($this->barcode_array['num_cols'] * $w);
tcpdf_barcodes_2d.php:		$height = ($this->barcode_array['num_rows'] * $h);
tcpdf_barcodes_2d.php:			$png->newImage($width, $height, 'none', 'png');
tcpdf_barcodes_2d.php:			$bar->setfillcolor($fgcol);
tcpdf_barcodes_2d.php:		for ($r = 0; $r < $this->barcode_array['num_rows']; ++$r) {
tcpdf_barcodes_2d.php:			for ($c = 0; $c < $this->barcode_array['num_cols']; ++$c) {
tcpdf_barcodes_2d.php:				if ($this->barcode_array['bcode'][$r][$c] == 1) {
tcpdf_barcodes_2d.php:						$bar->rectangle($x, $y, ($x + $w - 1), ($y + $h - 1));
tcpdf_barcodes_2d.php:						imagefilledrectangle($png, $x, $y, ($x + $w - 1), ($y + $h - 1), $fgcol);
tcpdf_barcodes_2d.php:			$png->drawimage($bar);
tcpdf_barcodes_2d.php: 	 * @param string $type type of barcode: <ul><li>DATAMATRIX : Datamatrix (ISO/IEC 16022)</li><li>PDF417 : PDF417 (ISO/IEC 15438:2006)</li><li>PDF417,a,e,t,s,f,o0,o1,o2,o3,o4,o5,o6 : PDF417 with parameters: a = aspect ratio (width/height); e = error correction level (0-8); t = total number of macro segments; s = macro segment index (0-99998); f = file ID; o0 = File Name (text); o1 = Segment Count (numeric); o2 = Time Stamp (numeric); o3 = Sender (text); o4 = Addressee (text); o5 = File Size (numeric); o6 = Checksum (numeric). NOTES: Parameters t, s and f are required for a Macro Control Block, all other parameters are optional. To use a comma character ',' on text options, replace it with the character 255: "\xff".</li><li>QRCODE : QRcode Low error correction</li><li>QRCODE,L : QRcode Low error correction</li><li>QRCODE,M : QRcode Medium error correction</li><li>QRCODE,Q : QRcode Better error correction</li><li>QRCODE,H : QR-CODE Best error correction</li><li>RAW: raw mode - comma-separad list of array rows</li><li>RAW2: raw mode - array rows are surrounded by square parenthesis.</li><li>TEST : Test matrix</li></ul>
tcpdf_barcodes_2d.php:				$this->barcode_array = $qrcode->getBarcodeArray();
tcpdf_barcodes_2d.php:				$this->barcode_array['code'] = $code;
tcpdf_barcodes_2d.php:					$ecl = -1; // default error correction level (auto)
tcpdf_barcodes_2d.php:				$this->barcode_array = $qrcode->getBarcodeArray();
tcpdf_barcodes_2d.php:				$this->barcode_array['code'] = $code;
tcpdf_barcodes_2d.php:			case 'QRCODE': { // QR-CODE
tcpdf_barcodes_2d.php:				$this->barcode_array = $qrcode->getBarcodeArray();
tcpdf_barcodes_2d.php:				$this->barcode_array['code'] = $code;
tcpdf_barcodes_2d.php:					// comma-separated rows
tcpdf_barcodes_2d.php:					$code = substr($code, 1, -1);
tcpdf_barcodes_2d.php:				$this->barcode_array['num_rows'] = count($rows);
tcpdf_barcodes_2d.php:				$this->barcode_array['num_cols'] = strlen($rows[0]);
tcpdf_barcodes_2d.php:				$this->barcode_array['bcode'] = array();
tcpdf_barcodes_2d.php:					$this->barcode_array['bcode'][] = str_split($r, 1);
tcpdf_barcodes_2d.php:				$this->barcode_array['code'] = $code;
tcpdf_barcodes_2d.php:				$this->barcode_array['num_rows'] = 5;
tcpdf_barcodes_2d.php:				$this->barcode_array['num_cols'] = 15;
tcpdf_barcodes_2d.php:				$this->barcode_array['bcode'] = array(
tcpdf_barcodes_2d.php:				$this->barcode_array['code'] = $code;
tcpdf_barcodes_2d.php:				$this->barcode_array = array();
tcpdf_import.php:// Begin       : 2011-05-23
tcpdf_import.php:// Last Update : 2013-09-17
tcpdf_import.php:// Author      : Nicola Asuni - Tecnick.com LTD - www.tecnick.com - info@tecnick.com
tcpdf_import.php:// License     : GNU-LGPL v3 (http://www.gnu.org/copyleft/lesser.html)
tcpdf_import.php:// -------------------------------------------------------------------
tcpdf_import.php:// Copyright (C) 2011-2013 Nicola Asuni - Tecnick.com LTD
tcpdf_import.php:// -------------------------------------------------------------------
tcpdf_import.php: * @author Nicola Asuni - info@tecnick.com
tcpdf_import.php:	 * @since 1.0.000 (2011-05-24)
tcpdf_import.php:			$this->Error('Unable to get the content of the file: '.$filename);
tcpdf_import.php:			die($e->getMessage());
tcpdf_import.php:		$data = $pdf->getParsedData();
tcpdf_parser.php:// Begin       : 2011-05-23
tcpdf_parser.php:// Last Update : 2015-04-28
tcpdf_parser.php:// Author      : Nicola Asuni - Tecnick.com LTD - www.tecnick.com - info@tecnick.com
tcpdf_parser.php:// License     : http://www.tecnick.com/pagefiles/tcpdf/LICENSE.TXT GNU-LGPLv3
tcpdf_parser.php:// -------------------------------------------------------------------
tcpdf_parser.php:// Copyright (C) 2011-2015 Nicola Asuni - Tecnick.com LTD
tcpdf_parser.php:// -------------------------------------------------------------------
tcpdf_parser.php: * @author Nicola Asuni - info@tecnick.com
tcpdf_parser.php:// -----------------------------------------------------------------------------
tcpdf_parser.php:	 * @since 1.0.000 (2011-05-24)
tcpdf_parser.php:			$this->Error('Empty PDF data.');
tcpdf_parser.php:		if (($trimpos = strpos($data, '%PDF-')) === FALSE) {
tcpdf_parser.php:			$this->Error('Invalid PDF data: missing %PDF header.');
tcpdf_parser.php:		$this->pdfdata = substr($data, $trimpos);
tcpdf_parser.php:		$pdflen = strlen($this->pdfdata);
tcpdf_parser.php:		$this->setConfig($cfg);
tcpdf_parser.php:		$this->xref = $this->getXrefData();
tcpdf_parser.php:		$this->objects = array();
tcpdf_parser.php:		foreach ($this->xref['xref'] as $obj => $offset) {
tcpdf_parser.php:			if (!isset($this->objects[$obj]) AND ($offset > 0)) {
tcpdf_parser.php:				$this->objects[$obj] = $this->getIndirectObject($obj, $offset, true);
tcpdf_parser.php:		unset($this->pdfdata);
tcpdf_parser.php:		$this->pdfdata = '';
tcpdf_parser.php:			$this->cfg['die_for_errors'] = !!$cfg['die_for_errors'];
tcpdf_parser.php:			$this->cfg['ignore_filter_decoding_errors'] = !!$cfg['ignore_filter_decoding_errors'];
tcpdf_parser.php:			$this->cfg['ignore_missing_filter_decoders'] = !!$cfg['ignore_missing_filter_decoders'];
tcpdf_parser.php:	 * @since 1.0.000 (2011-06-26)
tcpdf_parser.php:		return array($this->xref, $this->objects);
tcpdf_parser.php:	 * Get Cross-Reference (xref) table and trailer data from PDF document data.
tcpdf_parser.php:	 * @since 1.0.000 (2011-05-24)
tcpdf_parser.php:			if (preg_match_all('/[\r\n]startxref[\s]*[\r\n]+([0-9]+)[\s]*[\r\n]+%%EOF/i', $this->pdfdata, $matches, PREG_SET_ORDER, $offset) == 0) {
tcpdf_parser.php:				$this->Error('Unable to find startxref');
tcpdf_parser.php:		} elseif (strpos($this->pdfdata, 'xref', $offset) == $offset) {
tcpdf_parser.php:		} elseif (preg_match('/([0-9]+[\s][0-9]+[\s]obj)/i', $this->pdfdata, $matches, PREG_OFFSET_CAPTURE, $offset)) {
tcpdf_parser.php:			// Cross-Reference Stream object
tcpdf_parser.php:		} elseif (preg_match('/[\r\n]startxref[\s]*[\r\n]+([0-9]+)[\s]*[\r\n]+%%EOF/i', $this->pdfdata, $matches, PREG_OFFSET_CAPTURE, $offset)) {
tcpdf_parser.php:			$this->Error('Unable to find startxref');
tcpdf_parser.php:		if (strpos($this->pdfdata, 'xref', $startxref) == $startxref) {
tcpdf_parser.php:			// Cross-Reference
tcpdf_parser.php:			$xref = $this->decodeXref($startxref, $xref);
tcpdf_parser.php:			// Cross-Reference Stream
tcpdf_parser.php:			$xref = $this->decodeXrefStream($startxref, $xref);
tcpdf_parser.php:			$this->Error('Unable to find xref');
tcpdf_parser.php:	 * Decode the Cross-Reference section
tcpdf_parser.php:	 * @since 1.0.000 (2011-06-20)
tcpdf_parser.php:		$offset = $startxref + strspn($this->pdfdata, "\x00\x09\x0a\x0c\x0d\x20", $startxref);
tcpdf_parser.php:		// search for cross-reference entries or subsection
tcpdf_parser.php:		while (preg_match('/([0-9]+)[\x20]([0-9]+)[\x20]?([nf]?)(\r\n|[\x20]?[\r\n])/', $this->pdfdata, $matches, PREG_OFFSET_CAPTURE, $offset) > 0) {
tcpdf_parser.php:		if (preg_match('/trailer[\s]*<<(.*)>>/isU', $this->pdfdata, $matches, PREG_OFFSET_CAPTURE, $offset) > 0) {
tcpdf_parser.php:				if (preg_match('/Size[\s]+([0-9]+)/i', $trailer_data, $matches) > 0) {
tcpdf_parser.php:				if (preg_match('/Root[\s]+([0-9]+)[\s]+([0-9]+)[\s]+R/i', $trailer_data, $matches) > 0) {
tcpdf_parser.php:				if (preg_match('/Encrypt[\s]+([0-9]+)[\s]+([0-9]+)[\s]+R/i', $trailer_data, $matches) > 0) {
tcpdf_parser.php:				if (preg_match('/Info[\s]+([0-9]+)[\s]+([0-9]+)[\s]+R/i', $trailer_data, $matches) > 0) {
tcpdf_parser.php:			if (preg_match('/Prev[\s]+([0-9]+)/i', $trailer_data, $matches) > 0) {
tcpdf_parser.php:				$xref = $this->getXrefData(intval($matches[1]), $xref);
tcpdf_parser.php:			$this->Error('Unable to find trailer');
tcpdf_parser.php:	 * Decode the Cross-Reference Stream section
tcpdf_parser.php:	 * @since 1.0.003 (2013-03-16)
tcpdf_parser.php:		// try to read Cross-Reference Stream
tcpdf_parser.php:		$xrefobj = $this->getRawObject($startxref);
tcpdf_parser.php:		$xrefcrs = $this->getIndirectObject($xrefobj[1], $startxref, true);
tcpdf_parser.php:					$j = ($i - 1);
tcpdf_parser.php:						$row_left = $row[($i - 1)];
tcpdf_parser.php:						$row_upleft = $prev_row[($j - 1)];
tcpdf_parser.php:							$p = ($row_left + $row_up - $row_upleft);
tcpdf_parser.php:							$pa = abs($p - $row_left);
tcpdf_parser.php:							$pb = abs($p - $row_up);
tcpdf_parser.php:							$pc = abs($p - $row_upleft);
tcpdf_parser.php:							$this->Error('Unknown PNG predictor');
tcpdf_parser.php:							$sdata[$k][$c] += ($row[$i] << (($wb[$c] - 1 - $b) * 8));
tcpdf_parser.php:						$xref['xref'][$index] = -1;
tcpdf_parser.php:			$xref = $this->getXrefData($prevxref, $xref);
tcpdf_parser.php:	 * @since 1.0.000 (2011-06-20)
tcpdf_parser.php:		$offset += strspn($this->pdfdata, "\x00\x09\x0a\x0c\x0d\x20", $offset);
tcpdf_parser.php:		$char = $this->pdfdata[$offset];
tcpdf_parser.php:				$next = strcspn($this->pdfdata, "\r\n", $offset);
tcpdf_parser.php:					return $this->getRawObject($offset);
tcpdf_parser.php:				if (preg_match('/^([^\x00\x09\x0a\x0c\x0d\x20\s\x28\x29\x3c\x3e\x5b\x5d\x7b\x7d\x2f\x25]+)/', substr($this->pdfdata, $offset, 256), $matches) == 1) {
tcpdf_parser.php:						if (!isset($this->pdfdata[$strpos])) {
tcpdf_parser.php:						$ch = $this->pdfdata[$strpos];
tcpdf_parser.php:								--$open_bracket;
tcpdf_parser.php:					$objval = substr($this->pdfdata, $offset, ($strpos - $offset - 1));
tcpdf_parser.php:						$element = $this->getRawObject($offset);
tcpdf_parser.php:			case '<':   // \x3C LESS-THAN SIGN
tcpdf_parser.php:			case '>': { // \x3E GREATER-THAN SIGN
tcpdf_parser.php:				if (isset($this->pdfdata[($offset + 1)]) AND ($this->pdfdata[($offset + 1)] == $char)) {
tcpdf_parser.php:							$element = $this->getRawObject($offset);
tcpdf_parser.php:					if (($char == '<') AND (preg_match('/^([0-9A-Fa-f\x09\x0a\x0c\x0d\x20]+)>/iU', substr($this->pdfdata, $offset), $matches) == 1)) {
tcpdf_parser.php:					} elseif (($endpos = strpos($this->pdfdata, '>', $offset)) !== FALSE) {
tcpdf_parser.php:				if (substr($this->pdfdata, $offset, 6) == 'endobj') {
tcpdf_parser.php:				} elseif (substr($this->pdfdata, $offset, 4) == 'null') {
tcpdf_parser.php:				} elseif (substr($this->pdfdata, $offset, 4) == 'true') {
tcpdf_parser.php:				} elseif (substr($this->pdfdata, $offset, 5) == 'false') {
tcpdf_parser.php:				} elseif (substr($this->pdfdata, $offset, 6) == 'stream') {
tcpdf_parser.php:					if (preg_match('/^([\r]?[\n])/isU', substr($this->pdfdata, $offset), $matches) == 1) {
tcpdf_parser.php:						if (preg_match('/(endstream)[\x09\x0a\x0c\x0d\x20]/isU', substr($this->pdfdata, $offset), $matches, PREG_OFFSET_CAPTURE) == 1) {
tcpdf_parser.php:							$objval = substr($this->pdfdata, $offset, $matches[0][1]);
tcpdf_parser.php:				} elseif (substr($this->pdfdata, $offset, 9) == 'endstream') {
tcpdf_parser.php:				} elseif (preg_match('/^([0-9]+)[\s]+([0-9]+)[\s]+R/iU', substr($this->pdfdata, $offset, 33), $matches) == 1) {
tcpdf_parser.php:				} elseif (preg_match('/^([0-9]+)[\s]+([0-9]+)[\s]+obj/iU', substr($this->pdfdata, $offset, 33), $matches) == 1) {
tcpdf_parser.php:				} elseif (($numlen = strspn($this->pdfdata, '+-.0123456789', $offset)) > 0) {
tcpdf_parser.php:					$objval = substr($this->pdfdata, $offset, $numlen);
tcpdf_parser.php:	 * @since 1.0.000 (2011-05-24)
tcpdf_parser.php:			$this->Error('Invalid object reference: '.$obj);
tcpdf_parser.php:		$offset += strspn($this->pdfdata, '0', $offset);
tcpdf_parser.php:		if (strpos($this->pdfdata, $objref, $offset) != $offset) {
tcpdf_parser.php:			$element = $this->getRawObject($offset);
tcpdf_parser.php:			if ($decoding AND ($element[0] == 'stream') AND (isset($objdata[($i - 1)][0])) AND ($objdata[($i - 1)][0] == '<<')) {
tcpdf_parser.php:				$element[3] = $this->decodeStream($objdata[($i - 1)][1], $element[1]);
tcpdf_parser.php:	 * @since 1.0.000 (2011-06-26)
tcpdf_parser.php:			if (isset($this->objects[$obj[1]])) {
tcpdf_parser.php:				return $this->objects[$obj[1]];
tcpdf_parser.php:			} elseif (isset($this->xref[$obj[1]])) {
tcpdf_parser.php:				$this->objects[$obj[1]] = $this->getIndirectObject($obj[1], $this->xref[$obj[1]], false);
tcpdf_parser.php:				return $this->objects[$obj[1]];
tcpdf_parser.php:	 * @since 1.0.000 (2011-06-22)
tcpdf_parser.php:					$objval = $this->getObjectVal($sdic[($k + 1)]);
tcpdf_parser.php:					$emsg = $e->getMessage();
tcpdf_parser.php:					if ((($emsg[0] == '~') AND !$this->cfg['ignore_missing_filter_decoders'])
tcpdf_parser.php:						OR (($emsg[0] != '~') AND !$this->cfg['ignore_filter_decoding_errors'])) {
tcpdf_parser.php:						$this->Error($e->getMessage());
tcpdf_parser.php:	 * @since 1.0.000 (2011-05-23)
tcpdf_parser.php:		if ($this->cfg['die_for_errors']) {
